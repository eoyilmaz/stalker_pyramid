{# Stalker a Production Asset Management System
 Copyright (C) 2009-2013 Erkan Ozgur Yilmaz

 This file is part of Stalker.

 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free Software Foundation;
 version 2.1 of the License.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.

 You should have received a copy of the GNU Lesser General Public
 License along with this library; if not, write to the Free Software
 Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
#}
<div id='view_time_logs'>
    <button id='create_time_log_button'>Create TimeLog</button>
    <div id='time_logs_data_grid'></div>
</div>

<script type='text/javascript'>
    require([
        'dojo/data/ObjectStore',
        'dojo/store/Memory',
        'dojo/store/JsonRest',

        "dgrid/List",
        "dgrid/Grid",
        "dgrid/Selection",
        "dgrid/Keyboard",
        "dojo/_base/declare",
        "dgrid/editor",

        'stalker/dialogs',
        'stalker/dialogCaller',

        'dojo/domReady!'
    ], function (ObjectStore, Memory, JsonRest, List, Grid, Selection,
                 Keyboard, declare, editor, dialogs, dialogCaller) {

        var StandardGrid = declare([Grid, Selection, Keyboard]);

        var time_logs_DataGrid = new StandardGrid({
            id: 'time_logs_data_grid',
            width: '100%',
            autoHeight: true
        }, 'time_logs_data_grid');

        var create_time_log_button = dialogCaller({
            label: 'Create TimeLog',
            dialog_id: 'time_log_dialog',
            content_creator: dialogs.create_time_log_dialog,
            attach_to: 'create_time_log_button',
            related_field_updater: time_logs_DataGrid_updater,
            data_id: '{{ task.id }}'
        });
        create_time_log_button.startup();


        function time_logs_DataGrid_updater() {

            var time_log_memory = new JsonRest({
                target: '/get/time_logs/{{ task.id }}'
            });

            time_log_memory.query().then(function (data) {
                var columns = [
                    {
                        field: 'id',
                        label: "ID"
                    },
                    {
                        field: 'resource_name',
                        label: "Resource",
                        get: function (object) {
                            return object; // return entire item for formatter to use
                        },
                        formatter: function (value) {

                            var targetPane = "'central_content'";
                            var address = "'view/user/" + value.resource_id + "'";

                            return '<a href="javascript:redirectLink(' + targetPane + ',' + address + ');">' + value.resource_name + '</a>';
                        }
                    },
                    {
                        field: 'start_date',
                        label: "Start Date",

                        formatter: function (value) {

                            return new Date(parseInt(value) * 1000);
                        }
                    },
                    {
                        field: 'end_date',
                        label: "End Date",
                        formatter: function (value) {

                            return new Date(parseInt(value) * 1000);
                        }
                    }
                ];

                time_logs_DataGrid.renderArray(data);
                time_logs_DataGrid.set('columns', columns);


            });

        }

        time_logs_DataGrid_updater();

    });
</script>

