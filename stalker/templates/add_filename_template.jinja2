{#{% extends 'form_base.jinja2' %}#}
{#{% block form_block %}#}
<div class='dijitDialogPaneContentArea'>
  <form id='add_filename_template_form'>
    <table style='width: 100%;'>
      
      {# NAME #}
      <tr>
        <td class='label_column'>
          <label for='filename_template_name'>
            Name
          </label>
        </td>
        <td class='input_column'>
          <input id='filename_template_name'>
        </td>
      </tr>
      
      {# TARGET ENTITY TYPE #}
      <tr>
        <td class='label_column'>
          <label for='filename_template_target_entity_type'>
            Target Entity Type
          </label>
        </td>
        <td class='input_column'>
          <input id='filename_template_target_entity_type'>
        </td>
      </tr>
      
      {# TYPE #}
      <tr>
        <td class='label_column'>
          <label for='filename_template_type'>
            Type
          </label>
        </td>
        <td class='input_column'>
          <input id='filename_template_type'>
        </td>
      </tr>
      
      {# PATH #}
      <tr>
        <td class='label_column'>
          <label for='filename_template_path'>
            Path Template
          </label>
        </td>
        <td class='input_column'>
          <input id='filename_template_path'>
        </td>
      </tr>
      
      {# FILENAME #}
      <tr>
        <td class='label_column'>
          <label for='filename_template_filename'>
              Filename Template
          </label>
        </td>
        <td class='input_column'>
          <input id='filename_template_filename'>
        </td>
      </tr>
      
      {# OUTPUT PATH #}
      <tr>
        <td class='label_column'>
          <label for='filename_template_output_path'>
              Output Path Template
          </label>
        </td>
        <td class='input_column'>
          <input id='filename_template_output_path'>
        </td>
      </tr>
      
    </table>
  </form>
</div>
<div class='dijitDialogPaneActionBar'>
  <button id='filename_template_add_button'></button>
  <button id='filename_template_cancel_button'></button>
</div>
<script type='text/javascript'>
  require(['dijit/registry', 'dojo/request/xhr', 'dojo/store/Memory',
    'dijit/form/Form', 'dijit/form/ValidationTextBox', 'dijit/form/TextBox',
    'dijit/form/FilteringSelect', 'dijit/form/Button', 'dojo/domReady!'
  ],
    function(registry, xhr, Memory, Form, ValidationTextBox, TextBox,
             FilteringSelect, Button){
      
      var add_filename_template_form = new Form({
        id: 'add_filename_template_form',
        method: 'POST',
        onSubmit: function(event){
          if (this.validate()){
            // just close the dialog and somehow change the related field
            // on parent widget
            
            // get the form data
            var form_data = {};
            var myFormData = dijit.byId('add_filename_template_form').get('value');
            form_data.name = myFormData.name;
            form_data.target_entity_type = myFormData.target_entity_type;
            form_data.type_id = myFormData.type_id;
            form_data.path = myFormData.path;
            form_data.filename = myFormData.filename;
            form_data.output_path = myFormData.output_path;
            form_data.submitted = 'add';
            
            var deferred = xhr.post(
              '{{ request.route_url("add_filename_template") }}',
              {
                method: 'POST',
                data: form_data
              }
            );
            
            // update the caller dialog
            var dialog = dijit.byId('add_filename_template_dialog');
            var parent = dialog.get('parent');
            if (parent != null){
              // TODO: just update the image format field of the parent dialog
              parent.refresh()
            }
            
            // destroy the dialog
            dialog.destroyRecursive();
            
          }
          return false;
        }
      }, 'add_filename_template_form');
      add_filename_template_form.startup();
      
      // NAME
      var name_textBox = new ValidationTextBox({
        name: 'name',
        label: 'Name',
        placeHolder: 'Enter a name',
        required: true
      }, 'filename_template_name');
      name_textBox.startup();
      
      // TARGET ENTITY TYPE
      var target_entity_type_memory = new Memory({
        data: [
          {% for entity_type in entity_types %}
            {
              name: '{{ entity_type.name }}',
              id: '{{ entity_type.name }}'
            },
          {% endfor %}
        ]
      });
      
      var target_entity_type_select = new FilteringSelect({
        name: 'target_entity_type',
        label: 'Target Entity Type',
        required: true,
        store: target_entity_type_memory,
        value: target_entity_type_memory.data[0].id
      }, 'filename_template_target_entity_type');
      target_entity_type_select.startup();
      

      // TYPE
      var type_memory = new Memory({
        data: [
          {% for type in filename_template_types %}
            {
              name: '{{ type.name }}',
              id: '{{ type.id }}'
            },
          {% endfor %}
        ]
      });
      
      var type_select = new FilteringSelect({
        name: 'type_id',
        label: 'Type',
        required: true,
        store: type_memory,
        value: type_memory.data[0].id
      }, 'filename_template_type');
      type_select.startup();
       
      // PATH
      var path_textBox = new TextBox({
        name: 'path',
        label: 'Path Template',
        placeHolder: 'Enter Jinja2 code here',
        required: true
      }, 'filename_template_path');
      path_textBox.startup();
      
      // FILENAME
      var filename_textBox = new TextBox({
        name: 'filename',
        label: 'Filename Template',
        placeHolder: 'Enter Jinja2 code here',
        required: true
      }, 'filename_template_filename');
      filename_textBox.startup();
    
      // OUTPUT PATH
      var output_path_textBox = new TextBox({
        name: 'output_path',
        label: 'Output Path Template',
        placeHolder: 'Enter Jinja2 code here',
        required: true
      }, 'filename_template_output_path');
      output_path_textBox.startup();
      
      // ADD BUTTON
      var add_button = new Button({
        label: 'Add',
        type: 'button',
        onClick: function(){
          return add_filename_template_form.submit();
        }
      }, 'filename_template_add_button');
      add_button.startup();
      
      // CANCEL BUTTON
      var cancel_button = new Button({
        label: 'Cancel',
        type: 'button',
        onClick: function(){
          var dialog = dijit.byId('add_filename_template_dialog');
          dialog.destroyRecursive();
        }
      }, 'filename_template_cancel_button');
      cancel_button.startup();        
      
      
  });
</script>
{#{% endblock %}#}

