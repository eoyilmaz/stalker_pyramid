{# Stalker a Production Asset Management System
 Copyright (C) 2009-2013 Erkan Ozgur Yilmaz
 
 This file is part of Stalker.
 
 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free Software Foundation;
 version 2.1 of the License.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.

 You should have received a copy of the GNU Lesser General Public
 License along with this library; if not, write to the Free Software
 Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
#}
<div id='view_users'>
  <button id='view_users_create_user_button'>New User</button>
  <div id='users_data_grid'></div>
</div>

<script type='text/javascript'>
  require(['dijit/registry',
    'dojo/data/ObjectStore', 'dojox/grid/DataGrid', 'dojo/store/Memory',
    'dijit/form/FilteringSelect', 'dojo/store/JsonRest',
    'stalker/fieldUpdater', 'stalker/dialogCaller', 'dojo/on', 'dojo/query',
    'dojo/ready'],
      function(registry, ObjectStore, DataGrid, Memory, FilteringSelect,
               JsonRest, fieldUpdater, dialogCaller, on, query, ready){
        
        ready(function(){
          var my_store;
          var structure;
          
          var users_DataGrid = new DataGrid({
            id: 'users_data_grid',
            width: '100%',
            autoHeight: true,
            singleClickEdit: true,
            escapeHTMLInData: false,
            rowSelector: '20px'
          }, 'users_data_grid');
          
          var create_user_button = dialogCaller({
            label: 'New User',
            dialog_id: 'create_user_dialog',
            content_creator: create_user_dialog_creator,
            attach_to: 'view_users_create_user_button',
            related_field_updater: users_DataGrid_updater,
            data_id: '{{ entity.id }}'
          });

          users_DataGrid.startup();
          create_user_button.startup();
          
          
{#          var user_memory = new Memory({#}
{#            data: [#}
{#              {% for user in users %}#}
{#                {#}
{#                  user_link: '<a class="DataGridLink" href="#" stalker_href="view/user/' + '{{ user.id }}' + '">' + '{{ user.name }}' + '</a>',#}
{#                  #}
{#                  login: '{{ user.login }}',#}
{#                  tasksCount: '{{ user.tasks|count }}',#}
{#                  ticketsCount: '{{ user.open_tickets|count }}'#}
{#                },#}
{#              {% endfor %}#}
{#            ]#}
{#          });#}
{#          #}
{#          my_store =  new ObjectStore({ objectStore:user_memory });#}
{#          #}
{#          structure = [#}
{#            {name: 'Thumbnail',                           width: '100px'},#}
{#            {name: 'Name',         field: 'user_link',    width: '100px'},#}
{#            {name: 'Login Name',   field: 'login',        width: '200px'},#}
{#            {name: 'Tasks',        field: 'tasksCount',   width: '150px'},#}
{#            {name: 'Open Tickets', field: 'ticketsCount', width: 'auto'}#}
{#          ];#}
            
            
            function users_DataGrid_updater(){
              
              var user_memory = new JsonRest({
                target: '/get/users_byEntity/{{ entity.id }}'
              });
              
              user_memory.query().then(function(data){
                for(var i=0;i<data.length;i++ ){
                  var userName = data[i]["name"];
                  var userLink = '<a class="DataGridLink" href="#" stalker_href="view/user/' + data[i]['id'] + '">' + userName + '</a>';
                  
                  data[i]["user_link"] = userLink;
                }
                
                my_store =  new ObjectStore({ objectStore:new Memory({ data: data }) });
                
                structure = [
                  {name: 'Thumbnail',                           width: '100px'},
                  {name: 'Name',         field: 'user_link',    width: '100px'},
                  {name: 'Login Name',   field: 'login',        width: '200px'},
                  {name: 'Tasks',        field: 'tasksCount',   width: '150px'},
                  {name: 'Open Tickets', field: 'ticketsCount', width: 'auto'}
                ];
                
                initUI();
                
              });
              
            }

            function initUI(){
              
              users_DataGrid.set('store', my_store );
              users_DataGrid.set('structure', structure );
              
              // connect links
              var contentPane = registry.byId('central_content');
              
              // get the Link Elements
              var dataGridLinks = query('.DataGridLink');
              
              for (var i=0; i < dataGridLinks.length; i++){
                
                on(dataGridLinks[i], 'click', function(){
                  contentPane.set('href', this.getAttribute('stalker_href'));
                  contentPane.reset();
                })
              }
            }
            
            users_DataGrid_updater();
          });
        });
</script>

