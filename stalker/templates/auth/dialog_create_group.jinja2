{# Stalker a Production Asset Management System
 Copyright (C) 2009-2013 Erkan Ozgur Yilmaz
 
 This file is part of Stalker.
 
 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free Software Foundation;
 version 2.1 of the License.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.

 You should have received a copy of the GNU Lesser General Public
 License along with this library; if not, write to the Free Software
 Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
#}
<div class='dijitDialogPaneContentArea'>
    <form id='group_form'>
        <table style='width: 100%'>

            {# NAME #}
            <tr>
                <td class='label_column'>
                    <label for='group_name'>Name</label>
                </td>
                <td class='input_column'>
                    <input id='group_name'>
                </td>
            </tr>

            {# DESCRIPTION #}
            <tr>
                <td class='label_column'>
                    <label for='group_description'>Description</label>
                </td>
                <td class='input_column'>
                    <input id='group_description'>
                </td>
            </tr>


            <tr>
                <td class='label_column'>
                    <span>Permissions</span>
                </td>
                <td class='input_column'>
                    <div id='permission_checkboxes'>
                        <table>
                            <thead>
                            <tr style='font-weight: bold'>
                                <th style='text-align: right'>Class Name</th>
                                {% for action in actions %}
                                    <th style="width: 55px;">{{ action }}</th>
                                {% endfor %}
                            </tr>
                            </thead>
                            <tbody>
                            <tr style='font-weight: bold'>
                                <td style='text-align: right'>ALL</td>
                                {% for action in actions %}
                                    <td style='text-align: center'>
                                        <input id='{{ action }}'>
                                    </td>
                                {% endfor %}
                            </tr>
                            {% for entity in entity_types %}
                                <tr>
                                    <td style='text-align: right'>{{ entity.name }}</td>
                                    {% for action in actions %}
                                        <td style='text-align: center'>
                                            <input id='{{ action }}_{{ entity.name }}'>
                                            {#                                                   name='{{ action }}_{{ entity.name }}'#}
                                            {#                                                   type='checkbox'#}
                                            {#                                                   data-dojo-type='dijit/form/CheckBox'#}
                                            {#                                                   value='Allow'>#}
                                        </td>
                                    {% endfor %}
                                </tr>
                            {% endfor %}
                            </tbody>
                        </table>
                    </div>
                </td>
            </tr>

        </table>
    </form>
</div>

<div class='dijitDialogPaneActionBar'>
    <button id='group_ok_button'>Ok</button>
    <button id='group_cancel_button'>Cancel</button>
</div>


<script type='text/javascript'>


    require([
        'dijit/registry',
        'dojo/dom',
        'dojo/on',

        'dijit/form/Form',
        'dijit/form/Button',
        'dijit/form/CheckBox',
        'dijit/form/ValidationTextBox',
        'dijit/form/TextBox',

        'stalker/submitForm',

        'dojo/domReady!'
    ], function (registry, dom, on, Form, Button, CheckBox, ValidationTextBox,
                 TextBox, submitForm) {

        // Generate default values
        var url;
        var name;
        var additional_data;
        var description;

        {# fill values based on the dialog mode #}
        {% if mode == 'CREATE' %}
            url = '{{ request.route_url("create_group") }}';
        {% elif mode == 'UPDATE' %}
            url = '{{ request.route_url("update_group") }}';
            name = '{{ group.name }}';
            additional_data = {
                group_id: {{ group.id }}
            };
            description = '{{ group.description }}'
        {% endif %}

        // ********************************************************************
        // Form
        var group_form = new Form({}, 'group_form');
        group_form.startup();

        var dialog = group_form.getParent();

        // ********************************************************************
        // Name
        var name_validationTextBox = new ValidationTextBox({
            name: 'name',
            required: true,
            value: name
        }, 'group_name');
        name_validationTextBox.startup();

        // ************************************************************************

        // Description
        var description_textBox = new TextBox({
            name: 'description',
            label: 'Description',
            placeHolder: 'Enter description',
            value: description
        }, 'group_description');
        description_textBox.startup();

        var selectAllClassOfAction = function (value) {
            var action_name = this.name;
            {% for entity in entity_types %}
                var action_class_checkBox = registry.byId(action_name + '_{{ entity.name }}');
                action_class_checkBox.setAttribute('checked', this.checked);
            {% endfor %}
        };

        var uncheckedForAction = function (value) {
            if (!this.checked) {
                var action_class_checkBox = registry.byId(this.action_type);
                action_class_checkBox.setAttribute('checked', false);
            }
        };


        {% for action in actions %}
            var action_all_checkBox = new CheckBox({
                name: '{{ action }}',
                value: 'Allow',
                onClick: selectAllClassOfAction
            }, '{{ action }}');
            action_all_checkBox.startup();
        {% endfor %}


        {% for entity in entity_types %}
            {% for action in actions %}
                var action_class_checkBox = new CheckBox({
                    name: '{{ action }}_{{ entity.name }}',
                    action_type: '{{ action }}',
                    value: 'Allow',
                    onClick: uncheckedForAction
                }, '{{ action }}_{{ entity.name }}');
                action_class_checkBox.startup();
            {% endfor %}
        {% endfor %}

        {% if mode=='UPDATE' %}
            // update checkboxes
            var access;
            var action;
            var class_name;
            var checkBox_id;
            var checkBox;
            var checkBox_dom;
            {% for permission in group.permissions %}
                {% if  permission.access == 'Allow' %}
                    access = '{{ permission.access }}';
                    action = '{{ permission.action }}';
                    class_name = '{{ permission.class_name }}';

                    checkBox_id = action + '_' + class_name;
                    checkBox_dom = registry.byId(checkBox_id);
                    checkBox_dom.setAttribute('checked', true);
                {% endif %}
            {% endfor %}
        {% endif %}


        // ********************************************************************
        // OK Button
        var ok_button = new Button({
            label: 'OK',
            type: 'button',
            onClick: function () {
                submitForm({
                    dialog: dialog,
                    form: group_form,
                    additional_data: additional_data,
                    url: url,
                    method: 'POST'
                });
            }
        }, 'group_ok_button');
        ok_button.startup();

        // ********************************************************************
        // Cancel Button
        var cancel_button = new Button({
            label: 'Cancel',
            type: 'button',
            onClick: function () {
                dialog.destroyRecursive();
            }
        }, 'group_cancel_button');
        cancel_button.startup();

    });
</script>
