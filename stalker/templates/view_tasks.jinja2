
<div id="gantEditorTemplates" style="display:none;">
  <div class="__template__" type="GANTBUTTONS"><!--
  <div class="ganttButtonBar">
    <div class="buttons">
    <button onclick="$('#workSpace').trigger('undo.gantt');" class="button textual" title="undo"><span class="teamworkIcon">&#39;</span></button>
    <button onclick="$('#workSpace').trigger('redo.gantt');" class="button textual" title="redo"><span class="teamworkIcon">&middot;</span></button>
    <span class="ganttButtonSeparator"></span>
    <button onclick="$('#workSpace').trigger('addAboveCurrentTask.gantt');" class="button textual" title="insert above"><span class="teamworkIcon">l</span></button>
    <button onclick="$('#workSpace').trigger('addBelowCurrentTask.gantt');" class="button textual" title="insert below"><span class="teamworkIcon">X</span></button>
    <span class="ganttButtonSeparator"></span>
    <button onclick="$('#workSpace').trigger('indentCurrentTask.gantt');" class="button textual" title="indent task"><span class="teamworkIcon">.</span></button>
    <button onclick="$('#workSpace').trigger('outdentCurrentTask.gantt');" class="button textual" title="unindent task"><span class="teamworkIcon">:</span></button>
    <span class="ganttButtonSeparator"></span>
    <button onclick="$('#workSpace').trigger('moveUpCurrentTask.gantt');" class="button textual" title="move up"><span class="teamworkIcon">k</span></button>
    <button onclick="$('#workSpace').trigger('moveDownCurrentTask.gantt');" class="button textual" title="move down"><span class="teamworkIcon">j</span></button>
    <span class="ganttButtonSeparator"></span>
    <button onclick="$('#workSpace').trigger('zoomMinus.gantt');" class="button textual" title="zoom out"><span class="teamworkIcon">)</span></button>
    <button onclick="$('#workSpace').trigger('zoomPlus.gantt');" class="button textual" title="zoom in"><span class="teamworkIcon">(</span></button>
    <span class="ganttButtonSeparator"></span>
    <button onclick="$('#workSpace').trigger('deleteCurrentTask.gantt');" class="button textual" title="delete"><span class="teamworkIcon">&cent;</span></button>
      &nbsp; &nbsp; &nbsp; &nbsp;
      {% if taskable_entity %}
      <button id='view_tasks_add_task_button'>Add Task</button>
      {% endif %}
      <button id='view_tasks_gannt_save_button' onclick="saveGanttOnServer();" class="button first big" title="save">save</button>
    </div></div>
  --></div>

  <div class="__template__" type="TASKSEDITHEAD"><!--
  <table class="gdfTable" cellspacing="0" cellpadding="0">
    <thead>
    <tr style="height:40px">
      <th class="gdfColHeader" style="width:10px;"></th>
      <th class="gdfColHeader" style="width:25px;"></th>
      <th class="gdfColHeader gdfResizable" style="width:0px;">code/short name</th>
      <th class="gdfColHeader gdfResizable" style="width:10px;"></th>
      <th class="gdfColHeader gdfResizable" style="width:100px;">name</th>
      <th class="gdfColHeader gdfResizable" style="width:50px;">start</th>
      <th class="gdfColHeader gdfResizable" style="width:50px;">end</th>
      <th class="gdfColHeader gdfResizable" style="width:25px;">dur.</th>
      <th class="gdfColHeader gdfResizable" style="width:50px;">dep.</th>
      <th class="gdfColHeader gdfResizable" style="width:200px;">assignees</th>
    </tr>
    </thead>
  </table>
  --></div>

  <div class="__template__" type="TASKROW"><!--
  <tr taskId="(#=obj.id#)" class="taskEditRow" level="(#=level#)">
    <th class="gdfCell edit" align="right" style="cursor:pointer;"><span class="taskRowIndex">(#=obj.getRow()+1#)</span> <span class="teamworkIcon" style="font-size:12px;" >e</span></th>
    <td class="gdfCell" align="center"><div class="taskStatus cvcColorSquare" status="(#=obj.status#)"></div></td>
    <td class="gdfCell"><input type="text" name="code" value="(#=obj.code?obj.code:''#)"></td>
    <td class="gdfCell"><span>-</span></td>

    <td class="gdfCell indentCell" style="padding-left:(#=obj.level*10#)px;"><input type="text" name="name" value="(#=obj.name#)" style="(#=obj.level>0?'border-left:2px dotted orange':''#)"></td>

    <td class="gdfCell"><input type="text" name="start"  value="" class="date"></td>
    <td class="gdfCell"><input type="text" name="end" value="" class="date"></td>
    <td class="gdfCell"><input type="text" name="duration" value="(#=obj.duration#)"></td>
    <td class="gdfCell"><input type="text" name="depends" value="(#=obj.depends#)" (#=obj.hasExternalDep?"readonly":""#)></td>
    <td class="gdfCell taskAssigs">(#=obj.getAssigsString()#)</td>
  </tr>
--></div>

  <div class="__template__" type="TASKEMPTYROW"><!--
  <tr class="taskEditRow emptyRow" >
    <th class="gdfCell" align="right"></th>
    <td class="gdfCell" align="center"></td>
    <td class="gdfCell"></td>
    <td class="gdfCell"></td>
    <td class="gdfCell"></td>
    <td class="gdfCell"></td>
    <td class="gdfCell"></td>
    <td class="gdfCell"></td>
    <td class="gdfCell"></td>
  </tr>
--></div>

  <div class="__template__" type="TASKBAR"><!--
  <div class="taskBox" taskId="(#=obj.id#)" >
    <div class="layout (#=obj.hasExternalDep?'extDep':''#)">
      <div class="taskStatus" status="(#=obj.status#)"></div>
      <div class="taskProgress" style="width:(#=obj.progress>100?100:obj.progress#)%; background-color:(#=obj.progress>100?'red':'rgb(153,255,51);'#);"></div>
      <div class="milestone (#=obj.startIsMilestone?'active':''#)" ></div>

      <div class="taskLabel"></div>
      <div class="milestone end (#=obj.endIsMilestone?'active':''#)" ></div>
    </div>
  </div>
  --></div>


  <div class="__template__" type="CHANGE_STATUS"><!--
    <div class="taskStatusBox">
      <div class="taskStatus cvcColorSquare" status="STATUS_ACTIVE" title="active"></div>
      <div class="taskStatus cvcColorSquare" status="STATUS_DONE" title="completed"></div>
      <div class="taskStatus cvcColorSquare" status="STATUS_FAILED" title="failed"></div>
      <div class="taskStatus cvcColorSquare" status="STATUS_SUSPENDED" title="suspended"></div>
      <div class="taskStatus cvcColorSquare" status="STATUS_UNDEFINED" title="undefined"></div>
    </div>
  --></div>


  <div class="__template__" type="TASK_EDITOR"><!--
  <div class="ganttTaskEditor">
  <table width="100%">
    <tr>
      <td>
        <table cellpadding="5">
          <tr>
            <td><label for="code">code/short name</label><br><input type="text" name="code" id="code" value="" class="formElements"></td>
           </tr><tr>
            <td><label for="name">name</label><br><input type="text" name="name" id="name" value=""  size="35" class="formElements"></td>
          </tr>
          <tr></tr>
            <td>
              <label for="description">description</label><br>
              <textarea rows="5" cols="30" id="description" name="description" class="formElements"></textarea>
            </td>
          </tr>
        </table>
      </td>
      <td valign="top">
        <table cellpadding="5">
          <tr>
          <td colspan="2"><label for="status">status</label><br><div id="status" class="taskStatus" status=""></div></td>
          <tr>
          <td colspan="2"><label for="progress">progress</label><br><input type="text" name="progress" id="progress" value="" size="3" class="formElements"></td>
          </tr>
          <tr>
          <td><label for="start">start</label><br><input type="text" name="start" id="start"  value="" class="date" size="10" class="formElements"><input type="checkbox" id="startIsMilestone"> </td>
          <td rowspan="2" class="graph" style="padding-left:50px"><label for="duration">dur.</label><br><input type="text" name="duration" id="duration" value=""  size="5" class="formElements"></td>
        </tr><tr>
          <td><label for="end">end</label><br><input type="text" name="end" id="end" value="" class="date"  size="10" class="formElements"><input type="checkbox" id="endIsMilestone"></td>
        </table>
      </td>
    </tr>
    </table>

    <h2>assignments</h2>
  <table  cellspacing="1" cellpadding="0" width="100%" id="assigsTable">
    <tr>
      <th style="width:100px;">name</th>
      <th style="width:70px;">role</th>
      <th style="width:30px;">est.wklg.</th>
      <th style="width:30px;" id="addAssig"><span class="teamworkIcon" style="cursor: pointer">+</span></th>
    </tr>
  </table>

  <div style="text-align: right; padding-top: 20px"><button id="saveButton" class="button big">save</button></div>
  </div>
  --></div>


  <div class="__template__" type="ASSIGNMENT_ROW"><!--
  <tr taskId="(#=obj.task.id#)" assigId="(#=obj.assig.id#)" class="assigEditRow" >
    <td ><select name="resourceId"  class="formElements" (#=obj.assig.id.indexOf("tmp_")==0?"":"disabled"#) ></select></td>
    <td ><select type="select" name="roleId"  class="formElements"></select></td>
    <td ><input type="text" name="effort" value="(#=getMillisInHoursMinutes(obj.assig.effort)#)" size="5" class="formElements"></td>
    <td align="center"><span class="teamworkIcon delAssig" style="cursor: pointer">d</span></td>
  </tr>
  --></div>
</div>


<div id="workSpace"
     style="padding:0px;
      overflow-y:auto;
      overflow-x:hidden;
      border:1px solid #e5e5e5;
      position:relative;
      margin:0 5px;
      width:100%;
      height:800px;">
</div>

<script type="text/javascript">
  require(['dijit/registry',
           'dojo/data/ObjectStore', 'dojox/grid/DataGrid', 'dijit/form/Button',
           'stalker/dialogCaller', 'dojo/store/JsonRest',
           'dojo/domReady!'],
    function(registry, ObjectStore, DataGrid, Button, dialogCaller, JsonRest){
      
      $('#gantttemplates').loadTemplates();
      var ge = new GanttMaster();
      ge.init($("#workSpace"));
      
      // The Memory
      var tasks_memory = new JsonRest({
        {%  if taskable_entity %}
          target: '/get/tasks/{{ taskable_entity.id }}'
        {% else %}
          target: '/get/user_tasks/{{ user.id }}'
        {% endif %}
      });
      
      
      function loadGanttFromServer(taskId, callback) {
        tasks_memory.query().then(function(data){
          ge.loadProject(data);
        });
      }
      loadGanttFromServer();
      
      
      function saveGanttOnServer() {
      
        //this is a simulation: save data to the local storage or to the textarea
        saveInLocalStorage();
        
        
        /*
        var prj = ge.saveProject();
      
        delete prj.resources;
        delete prj.roles;
      
        var prof = new Profiler("saveServerSide");
        prof.reset();
        
        if (ge.deletedTaskIds.length>0) {
          if (!confirm("TASK_THAT_WILL_BE_REMOVED\n"+ge.deletedTaskIds.length)) {
            return;
          }
        }
      
        $.ajax("ganttAjaxController.jsp", {
          dataType:"json",
          data: {CM:"SVPROJECT",prj:JSON.stringify(prj)},
          type:"POST",
      
          success: function(response) {
            if (response.ok) {
              prof.stop();
              if (response.project) {
                ge.loadProject(response.project); //must reload as "tmp_" ids are now the good ones
              } else {
                ge.reset();
              }
            } else {
              var errMsg="Errors saving project\n";
              if (response.message) {
                errMsg=errMsg+response.message+"\n";
              }
      
              if (response.errorMessages.length) {
                errMsg += response.errorMessages.join("\n");
              }
      
              alert(errMsg);
            }
          }
      
        });
        */
      }
      
      
      //-------------------------------------------  Create some demo data ------------------------------------------------------
      function setRoles() {
        ge.roles = [
          {
            id:"tmp_1",
            name:"Project Manager"
          },
          {
            id:"tmp_2",
            name:"Worker"
          },
          {
            id:"tmp_3",
            name:"Stakeholder/Customer"
          }
        ];
      }
      
      function setResource() {
        var res = [];
        for (var i = 1; i <= 10; i++) {
          res.push({id:"tmp_" + i,name:"Resource " + i});
        }
        ge.resources = res;
      }
      
      
      function clearGantt() {
        ge.reset();
      }
      
      function loadI18n() {
        GanttMaster.messages = {
          "CHANGE_OUT_OF_SCOPE":"NO_RIGHTS_FOR_UPDATE_PARENTS_OUT_OF_EDITOR_SCOPE",
          "START_IS_MILESTONE":"START_IS_MILESTONE",
          "END_IS_MILESTONE":"END_IS_MILESTONE",
          "TASK_HAS_CONSTRAINTS":"TASK_HAS_CONSTRAINTS",
          "GANTT_ERROR_DEPENDS_ON_OPEN_TASK":"GANTT_ERROR_DEPENDS_ON_OPEN_TASK",
          "GANTT_ERROR_DESCENDANT_OF_CLOSED_TASK":"GANTT_ERROR_DESCENDANT_OF_CLOSED_TASK",
          "TASK_HAS_EXTERNAL_DEPS":"TASK_HAS_EXTERNAL_DEPS",
          "GANTT_ERROR_LOADING_DATA_TASK_REMOVED":"GANTT_ERROR_LOADING_DATA_TASK_REMOVED",
          "ERROR_SETTING_DATES":"ERROR_SETTING_DATES",
          "CIRCULAR_REFERENCE":"CIRCULAR_REFERENCE",
          "CANNOT_DEPENDS_ON_ANCESTORS":"CANNOT_DEPENDS_ON_ANCESTORS",
          "CANNOT_DEPENDS_ON_DESCENDANTS":"CANNOT_DEPENDS_ON_DESCENDANTS",
          "INVALID_DATE_FORMAT":"INVALID_DATE_FORMAT",
          "TASK_MOVE_INCONSISTENT_LEVEL":"TASK_MOVE_INCONSISTENT_LEVEL",
      
          "GANTT_QUARTER_SHORT":"trim.",
          "GANTT_SEMESTER_SHORT":"sem."
        };
      }
      
      
      //-------------------------------------------  Open a black popup for managing resources. This is only an axample of implementation (usually resources come from server) ------------------------------------------------------
      function openResourceEditor() {
        var editor = $("<div>");
        editor.append("<h2>Resource editor</h2>");
        editor.addClass("resEdit");
      
        for (var i in ge.resources) {
          var res = ge.resources[i];
          var inp = $("<input type='text'>").attr("pos", i).addClass("resLine").val(res.name);
          editor.append(inp).append("<br>");
        }
      
        var sv = $("<div>save</div>").css("float", "right").addClass("button").click(function() {
          $(this).closest(".resEdit").find("input").each(function() {
            var el = $(this);
            var pos = el.attr("pos");
            ge.resources[pos].name = el.val();
          });
          ge.editor.redraw();
          closeBlackPopup();
        });
        editor.append(sv);
      
        var ndo = createBlackPage(800, 500).append(editor);
      }
      
      //-------------------------------------------  Get project file as JSON (used for migrate project from gantt to Teamwork) ------------------------------------------------------
      function getFile() {
        $("#gimBaPrj").val(JSON.stringify(ge.saveProject()));
        $("#gimmeBack").submit();
        $("#gimBaPrj").val("");
      
        /*  var uriContent = "data:text/html;charset=utf-8," + encodeURIComponent(JSON.stringify(prj));
         console.debug(uriContent);
         neww=window.open(uriContent,"dl");*/
      }
      
      
      //-------------------------------------------  LOCAL STORAGE MANAGEMENT (for this demo only) ------------------------------------------------------
      Storage.prototype.setObject = function(key, value) {
        this.setItem(key, JSON.stringify(value));
      };
      
      
      Storage.prototype.getObject = function(key) {
        return this.getItem(key) && JSON.parse(this.getItem(key));
      };
      
      
      function loadFromLocalStorage() {
        var ret;
        if (localStorage) {
          if (localStorage.getObject("teamworkGantDemo")) {
            ret = localStorage.getObject("teamworkGantDemo");
          }
        } else {
          $("#taZone").show();
        }
        if (!ret || !ret.tasks || ret.tasks.length == 0){
          ret = JSON.parse($("#ta").val());
      
      
          //actualiza data
          var offset=new Date().getTime()-ret.tasks[0].start;
          for (var i=0;i<ret.tasks.length;i++)
            ret.tasks[i].start=ret.tasks[i].start+offset;
      
      
        }
        ge.loadProject(ret);
        ge.checkpoint(); //empty the undo stack
      }
      
      
      function saveInLocalStorage() {
        var prj = ge.saveProject();
        if (localStorage) {
          localStorage.setObject("teamworkGantDemo", prj);
        } else {
          $("#ta").val(JSON.stringify(prj));
        }
      }
      
      loadGanttFromServer();
      
      //fill default Teamwork roles if any
      if (!ge.roles || ge.roles.length == 0) {
        setRoles();
      }

      //fill default Resources roles if any
      if (!ge.resources || ge.resources.length == 0) {
        setResource();
      }

      
      {% if taskable_entity %}
        var add_task_button = dialogCaller({
          label: 'Add Task',
          dialog_id: 'add_task_dialog',
          content_creator: create_add_task_dialog,
          attach_to: 'view_tasks_add_task_button',
          related_field_updater: loadGanttFromServer, 
          {% if taskable_entity %}
          data_id: '{{ taskable_entity.id }}'
          {% endif %}
        });
        add_task_button.startup();
      {% endif %}
      var save_gantt_button = new Button({
        label: 'Save'
      }, 'view_tasks_gannt_save_button')
      save_gantt_button.startup();
  });
</script>

<script type="text/javascript">
  $.JST.loadDecorator("ASSIGNMENT_ROW", function(assigTr, taskAssig) {

    var resEl = assigTr.find("[name=resourceId]");
    for (var i in taskAssig.task.master.resources) {
      var res = taskAssig.task.master.resources[i];
      var opt = $("<option>");
      opt.val(res.id).html(res.name);
      if (taskAssig.assig.resourceId == res.id)
        opt.attr("selected", "true");
      resEl.append(opt);
    }


    var roleEl = assigTr.find("[name=roleId]");
    for (var i in taskAssig.task.master.roles) {
      var role = taskAssig.task.master.roles[i];
      var optr = $("<option>");
      optr.val(role.id).html(role.name);
      if (taskAssig.assig.roleId == role.id)
        optr.attr("selected", "true");
      roleEl.append(optr);
    }

    if (taskAssig.task.master.canWrite) {
      assigTr.find(".delAssig").click(function() {
        var tr = $(this).closest("[assigId]").fadeOut(200, function() {
          $(this).remove();
        });
      });
    }


  });
</script>
