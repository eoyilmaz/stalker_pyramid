{# Stalker a Production Asset Management System
 Copyright (C) 2009-2013 Erkan Ozgur Yilmaz

 This file is part of Stalker.

 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free Software Foundation;
 version 2.1 of the License.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.

 You should have received a copy of the GNU Lesser General Public
 License along with this library; if not, write to the Free Software
 Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
#}
<div class='dijitDialogPaneContentArea'>
    <form id='version_form'>
        <table style='width: 100%;'>

            {# NAME #}
            <tr>
                <td class='label_column'>
                    <label for='version_name'>Name</label>
                </td>
                <td class='input_column'>
                    <input id='version_name'>
                </td>
            </tr>



        </table>
    </form>
</div>

<div class='dijitDialogPaneActionBar'>
    <button id='version_ok_button'>OK</button>
    <button id='version_cancel_button'>Cancel</button>
</div>
<script type='text/javascript'>
require([
    'dojo/store/Memory',
    'dojo/store/JsonRest',
    'dijit/form/Form',
    'dijit/form/ValidationTextBox',
    'dijit/form/TextBox',
    'dijit/form/FilteringSelect',
    'dijit/form/ComboBox',
    'dijit/form/Button',
    'stalker/dialogs',
    'stalker/submitForm',
    'stalker/fieldUpdater',
    'stalker/dialogCreator',
    'stalker/dialogCaller',
    'dojo/domReady!'],
        function (Memory, JsonRest, Form, ValidationTextBox, TextBox,
                  FilteringSelect, ComboBox, Button, dialogs, submitForm,
                  fieldUpdater, dialogCreator, dialogCaller) {

            // ********************************************************************
            // Generate default values
            var url;
            var name;



            {# fill values based on the dialog mode #}
            {% if mode == 'CREATE' %}
                url = '{{ request.route_url("create_version") }}';
            {% elif mode == 'UPDATE' %}
                url = '{{ request.route_url("update_version") }}';
                name = '{{ version.name }}';
            {% endif %}



            // ****************************************************************
            // Form
            var version_form = new Form({
                id: 'version_form'
            }, 'version_form');

            var dialog = version_form.getParent();


            // ****************************************************************
            // Name
            var name_textBox = new ValidationTextBox({
                name: 'name',
                label: 'Name',
                placeHolder: 'Enter a name',
                required: true,
                value: name
            }, 'version_name');
            name_textBox.startup();




            // ****************************************************************
            // Ok Button
            var ok_button = new Button({
                label: 'OK',
                type: 'button',
                onClick: function () {
                    submitForm({
                        dialog: dialog,
                        form: version_form,
                        additional_data: {
                            {% if mode=='UPDATE' %}
                                version_id: '{{ version.id }}',
                            {% endif %}
                            task_id: '{{task.id }}'
                        },
                        url: url,
                        method: 'POST'
                    });
                }
            }, 'version_ok_button');
            ok_button.startup();


            // ****************************************************************
            // Cancel Button
            var cancel_button = new Button({
                label: 'Cancel',
                type: 'button',
                onClick: function () {
                    dialog.destroyRecursive();
                }
            }, 'version_cancel_button');
            cancel_button.startup();

            version_form.startup();


        });
</script>

