{# Stalker a Production Asset Management System
 Copyright (C) 2009-2013 Erkan Ozgur Yilmaz

 This file is part of Stalker.

 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free Software Foundation;
 version 2.1 of the License.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.

 You should have received a copy of the GNU Lesser General Public
 License along with this library; if not, write to the Free Software
 Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
#}
<div class='dijitDialogPaneContentArea'>
    <form id='append_department_form'>
        <table style='width: 100%'>
            <tr>
                <td class='form_title'>
                    All Departments
                </td>
                <td>&nbsp;</td>
                <td class='form_title'>
                    User Departments
                </td>
            </tr>
            <tr>
                <td class='input_column'>
                    <select id='all_departments_list'>
                    </select>
                </td>
                <td style='width: 25px;'>
                    <button id='department_append_button'>Add</button>
                    <button id='department_remove_button'>Remove</button>
                </td>
                <td class='input_column'>
                    <select id='user_departments_list'>
                    </select>
                </td>
            </tr>
        </table>
    </form>
</div>

<div class='dijitDialogPaneActionBar'>
    <button id='append_department_submit_button'>OK</button>
    <button id='append_department_cancel_button'>Cancel</button>
</div>

{#<div class='dijitDialogPaneActionBar'>#}
{#  <button id='department_append_button'>Append</button>#}
{#  <button id='department_cancel_button'>Cancel</button>#}
{#</div>#}

<script type="text/javascript">
    require([
        'dojo/data/ObjectStore',
        'dojo/store/Memory',
        'dojo/store/JsonRest',
        'dojo/_base/lang',

        'dijit/registry',
        'dijit/form/Form',
        'dijit/form/Button',
        'dijit/form/MultiSelect',

        'stalker/submitForm',
        'stalker/dialogCaller',
        'stalker/fieldUpdater',

        'dojo/domReady!'

    ], function (ObjectStore, Memory, JsonRest, lang, registry, Form, Button,
                 MultiSelect, submitForm, dialogCaller, fieldUpdater) {

        // ********************************************************************
        // Form
        var append_department_form = new Form({
            id: 'append_department_form'
        }, 'append_department_form');
        append_department_form.startup();

        // ********************************************************************
        // Project Department List
        var user_departments_memory = new JsonRest({
            target: '/get/departments_byEntity/{{ user.id }}'
        });


        var user_departments_multi_select = new MultiSelect({
            name: 'user_departments',
            required: false,
            style: 'height: auto; width: auto; min-width: 200px; min-height: 250px'
        }, 'user_departments_list');
        user_departments_multi_select.startup();

        var eliminate_user_departments_from_all_departments = function (data) {
            for (var i = 0; i < data.length; i++) {
                remove_item(all_departments_multi_select, data[i].id);
            }
        };

        // The Updater
        var user_departments_field_updater = fieldUpdater({
            'memory': user_departments_memory,
            'widget': user_departments_multi_select,
            'callBack': eliminate_user_departments_from_all_departments
        });

        // ********************************************************************
        // All Department List
        var all_departments_memory = new JsonRest({
            target: '/get/departments'
        });

        var all_departments_multi_select = new MultiSelect({
            name: 'all_departments',
            required: false,
            label: 'All Departments',
            style: 'height: auto; width: auto; min-width: 200px; min-height: 250px'
        }, 'all_departments_list');
        all_departments_multi_select.startup();

        var get_user_departments_data = function (data) {
            // run the function to fill the data for the first time
            user_departments_field_updater({animate: false});

        };

        // The Updater
        var all_departments_field_updater = fieldUpdater({
            'memory': all_departments_memory,
            'widget': all_departments_multi_select,
            'callBack': get_user_departments_data
        });
        //run the function to fill the data for the first time
        all_departments_field_updater({animate: false});


        var add_item = function (multi_select, opt) {
            var domNode = multi_select.domNode;
            domNode.appendChild(opt);
        };

        var remove_item = function (multi_select, rId) {
            var domNode = multi_select.domNode;
            dojo.query('option', domNode).forEach(function (opt, idx, arr) {
                if (opt.value == rId) {
                    dojo.destroy(opt);
                }
            });
        };

        // ********************************************************************
        // Append Department Button
        var department_append_button = new Button({
            label: '>>',
            type: 'button',
            onClick: function () {
                var selected_data = all_departments_multi_select.get('value');
                var all_options = dojo.query('option', 'all_departments_list');

                for (var i = 0; i < all_options.length; i++) {
                    if (selected_data.indexOf(all_options[i].value) != -1) {
                        add_item(user_departments_multi_select, all_options[i]);
                    }
                }
            }
        }, 'department_append_button');

        // ********************************************************************
        // Remove Department Button
        var department_remove_button = new Button({
            label: '<<',
            type: 'button',
            onClick: function () {
                var selected_data = user_departments_multi_select.get('value');
                var all_options = dojo.query('option', 'user_departments_list');

                for (var i = 0; i < all_options.length; i++) {
                    if (selected_data.indexOf(all_options[i].value) != -1) {
                        add_item(all_departments_multi_select, all_options[i]);
                    }
                }
            }
        }, 'department_remove_button');

        // ********************************************************************
        // Submit Button
        var submit_button = new Button({
            label: 'OK',
            type: 'button',
            onClick: function () {
                submitForm({
                    dialog: registry.byId('append_department_dialog'),
                    form: append_department_form,
                    additional_data: {
                        'user_id': {{ user.id }}
                    },
                    url: 'append/departments',
                    method: 'POST'
                });
            }
        }, 'append_department_submit_button');
        submit_button.startup();

        // ********************************************************************
        // Cancel Button
        var cancel_button = new Button({
            label: 'Cancel',
            type: 'button',
            onClick: function () {
                registry.byId('append_department_dialog').destroyRecursive();
            }
        }, 'append_department_cancel_button');
        cancel_button.startup();

        append_department_form.startup();

    });
</script>
