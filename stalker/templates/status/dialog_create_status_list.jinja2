{# Stalker a Production Asset Management System
 Copyright (C) 2009-2013 Erkan Ozgur Yilmaz
 
 This file is part of Stalker.
 
 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free Software Foundation;
 version 2.1 of the License.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.

 You should have received a copy of the GNU Lesser General Public
 License along with this library; if not, write to the Free Software
 Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
#}
<div class='dijitDialogPaneContentArea'>
  <form id='create_status_list_form'>
    <table style='width: 100%'>
      
      {# NAME #}
      <tr>
        <td class='label_column'>
          <label for='status_list_name'>
            Name
          </label>
        </td>
        <td class='input_column'>
          <input id='status_list_name'>
        </td>
      </tr>
      
      {# TARGET ENTITY TYPE #}
      <tr>
        <td class='label_column'>
          <label for='status_list_target_entity_type'>
            Target Entity Type
          </label>
        </td>
        <td class='input_column'>
          <input id='status_list_target_entity_type'>
        </td>
      </tr>
      
      {# STATUSES #}
      <tr>
        <td class='label_column'>
          <label for='status_list_statuses'>
            Statuses
          </label>
        </td>
        <td class='input_column'>
          <select id='status_list_statuses'></select>
        </td>
        <td class='button_column'>
          <button id='status_list_create_status_button'>New</button>
{#            <button id='status_list_update_status_button'>Update</button>#}
        </td>
      </tr>
      
    </table>
  </form>
</div>

<div class='dijitDialogPaneActionBar'>
  <button id='status_list_submit_button'></button>
  <button id='status_list_cancel_button'></button>
</div>

<script type='text/javascript'>
  require(['dijit/registry', 'dojo/store/Memory', 'dijit/form/Form',
    'dijit/form/ValidationTextBox', 'dijit/form/TextBox',
    'dijit/form/SimpleTextarea', 'dijit/form/Button',
    'dijit/form/FilteringSelect', 'stalker/TagSelect',
    'dojo/store/JsonRest', 'stalker/submitForm', 'stalker/fieldUpdater',
    'stalker/dialogCaller', 'dojo/domReady!'],
    function(registry, Memory, Form, ValidationTextBox, TextBox,
             SimpleTextarea, Button, FilteringSelect, TagSelect, JsonRest,
             submitForm, fieldUpdater, dialogCaller){
      
      // **********************************************************************
      // Form
      var create_status_list_form = new Form({
        id: 'create_status_list_form'
      }, 'create_status_list_form');
      
      // **********************************************************************
      // Name
      var name_textBox = new ValidationTextBox({
        name: 'name',
        label: 'Name',
        placeHolder: 'Enter a name',
        required: true,
        {% if target_entity_type %}
          disabled: true,
          value: '{{ target_entity_type }} Statuses',
        {% else %}
          disabled: false
        {% endif %}
      }, 'status_list_name');
      
      // **********************************************************************
      // Target Entity Type

      var target_entity_type_store = new Memory({
        data: [
          {% for entity_type in entity_types %}
            {
              name: '{{ entity_type.name }}',
              id: '{{ entity_type.name }}'
            },
          {% endfor %}
        ]
      });

      var target_entity_type_select = new FilteringSelect({
        name: 'target_entity_type',
        label: 'Target Entity Type',
        required: true,
        placeHolder: 'Select A Target Entity Type',
        store: target_entity_type_store,
        {% if target_entity_type %}
          disabled: true,
          value: '{{ target_entity_type }}',
        {% else %}
          disabled: false
        {% endif %}
      }, 'status_list_target_entity_type');

      
      // **********************************************************************
      // Statuses
      // 
      // The Memory
      var statuses_memory = new JsonRest({
        target: '/get/statuses'
      });
    
      // The Widget
      var statuses_tagSelect = new TagSelect({
        name: 'statuses',
        required: true
     }, 'status_list_statuses');
      
      // The Updater
      var statuses_field_updater = fieldUpdater({
        'memory': statuses_memory,
        'widget': statuses_tagSelect
      });
      // run the function to fill the data for the first time
      statuses_field_updater({animate: false});
      
      // New Status Button
      var create_status_button = dialogCaller({
        label: 'New',
        dialog_id: 'create_status_dialog',
        content_creator: create_status_dialog_creator,
        attach_to: 'status_list_create_status_button',
        related_field_updater: statuses_field_updater
      });
      
      
      
      
      
      // **********************************************************************
      // Submit Button
      var submit_button = new Button({
        label: 'OK',
        type: 'button',
        disabled: false,
        onClick: function(){
          name_textBox.set('disabled', false);
          target_entity_type_select.set('disabled', false);
         submitForm({
            dialog: registry.byId('create_status_list_dialog'),
            form: create_status_list_form,
            additional_data: {submitted: 'create'},
            url: '{{ request.route_url('create_status_list') }}',
            method: 'POST'
          });
        }
      }, 'status_list_submit_button');

      
      // **********************************************************************
      // Cancel Button
      var cancel_button = new Button({
        label: 'Cancel',
        type: 'button',
        onClick: function(){
          registry.byId('create_status_list_dialog').destroyRecursive();
        }
      }, 'status_list_cancel_button');
      
      
      // Startups
      target_entity_type_select.startup();
      name_textBox.startup();
      statuses_tagSelect.startup();
      create_status_button.startup();
      submit_button.startup();
      cancel_button.startup();
      create_status_list_form.startup();
      
  });
</script>

