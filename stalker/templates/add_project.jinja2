<div class='dijitDialogPaneContentArea'> 
  <form id='add_project_form'>
    <table style='width: 100%;'>
      
      {# NAME #}
      <tr>
        <td class='label_column'>
          <label for='project_name'><strong>Name</strong></label>
        </td>
        <td class='input_column'>
          <input id='project_name'>
        </td>
      </tr>
      
      {# CODE #}
      <tr>
        <td class='label_column'>
          <label for='project_code'><strong>Code</strong></label>
        </td>
        <td class='input_column'>
          <input id='project_code'>
        </td>
      </tr>
  
      {# IMAGE FORMAT #}
      <tr>
        <td class='label_column'>
          <label for='project_image_format'>
            <strong>Image Format</strong>
          </label>
        </td>
        <td class='input_column'>
          <input id='project_image_format'>
        </td>
        <td class='button_column'>
          <button id='project_add_image_format_button'>Add</button>
          <button id='project_edit_image_format_button'>Edit</button>
        </td>
      </tr>
      
      {# FPS #}
      <tr>
        <td class='label_column'>
          <label for='project_fps'><strong>FPS</strong></label>
        </td>
        <td class='input_column'>
          <input id='project_fps'>
        </td>
      </tr>
      
      {# REPOSITORY #}
      <tr>
        <td class='label_column'>
          <label for='project_repository'><strong>Repository</strong></label>
        </td>
        <td class='input_column'>
          <input id='project_repository'>
        </td>
        <td class='button_column'>
          <button id='project_add_repository_button'>Add</button>
          <button id='project_edit_repository_button'>Edit</button>
        </td>
      </tr>
      
      {# STRUCTURE #}
      <tr>
        <td class='label_column'>
          <label for='project_structure'><strong>Structure</strong></label>
        </td>
        <td class='input_column'>
          <input id='project_structure'>
        </td>
        <td class='button_column'>
          <button id='project_add_structure_button'>Add</button>
          <button id='project_edit_structure_button'>Edit</button>
        </td>
      </tr>
      
      {# LEAD #}
      <tr>
        <td class='label_column'>
          <label for='project_lead'><strong>Lead</strong></label>
        </td>
        <td class='input_column'>
          <input id='project_lead'>
        </td>
        <td class='button_column'>
          <button id='project_add_lead_button'>Add</button>
          <button id='project_edit_lead_button'>Edit</button>
        </td>
      </tr>
      
      {# STATUS LIST #}
      <tr>
        <td class='label_column'>
          <label for='project_status_list'><strong>Status List</strong></label>
        </td>
        <td class='input_column'>
          <input id='project_status_list'>
        </td>
        <td class='button_column'>
          <button id='project_add_status_list_button'>Add</button>
          <button id='project_edit_status_list_button'>Edit</button>
        </td>
      </tr>

    </table>      
  </form>
</div>

<div class='dijitDialogPaneActionBar'>
  <button id='project_add_button'>Add</button>
  <button id='project_cancel_button'>Cancel</button>
</div>

<script type='text/javascript'>
  require(['dijit/registry', 'dojo/_base/xhr', 'dojo/on',
    'dojo/store/Memory', 'dijit/form/Form', 'dijit/form/ValidationTextBox',
    'dijit/form/TextBox', 'dijit/form/NumberTextBox',
    'dijit/form/FilteringSelect', 'dijit/form/Button', 'dojo/store/JsonRest',
    'dojo/ready'
  ],
  function(registry, xhr, on, Memory, Form, ValidationTextBox, TextBox,
           NumberTextBox, FilteringSelect, Button, JsonRest){
    
    // ********************************************************************
    // Form
    var add_project_form = new Form({
      id: 'add_project_form'
    }, 'add_project_form');
    
    
    
    
    // ********************************************************************
    // Name
    var name_textBox = new ValidationTextBox({
      name: 'name',
      label: 'Name',
      required: true,
      placeHolder: 'Enter a name'
    }, 'project_name');
    name_textBox.startup();
    
    
    
    
    // ********************************************************************
    // Code
    var code_textBox = new ValidationTextBox({
      name: 'code',
      label: 'Code',
      required: true,
      placeHolder: 'Enter a code'
    }, 'project_code');
    name_textBox.startup();
    
    
    
    
    // ********************************************************************
    // Image Format
    // 
    // The memory
    var imf_memory = new JsonRest({
      target: '/get/image_formats'
    });
    
    // The Field
    var imf_filteringSelect = new FilteringSelect({
      name: 'image_format',
      required: true,
      {% if not image_formats|length %}
        disabled: true,
        placeHolder: 'No Image Format in DB'
      {% endif %}
    }, 'project_image_format');
    imf_filteringSelect.startup();
    
    // The Updater
    // supply a function to refresh the content of the format
    var imf_field_updater = field_updater({
      'memory': imf_memory,
      'widget': imf_filteringSelect
    });
    // run the function to fill the data for the first time
    imf_field_updater({animate: false});
    
    // Add Image Format Button
    var add_image_format_button = create_add_edit_data_button({
      button_label: 'Add',
      dialog_id: 'add_image_format_dialog',
      content_creator: create_add_image_format_dialog,
      attach_to: 'project_add_image_format_button',
      related_field_updater: imf_field_updater
    });
    add_image_format_button.startup();
    
    // Edit Image Format Button
    var edit_image_format_button = create_add_edit_data_button({
      button_label: 'Edit',
      dialog_id: 'edit_image_format_dialog',
      content_creator: create_edit_image_format_dialog,
      attach_to: 'project_edit_image_format_button',
      related_field_updater: imf_field_updater,
      data_id: function(){
        return imf_filteringSelect.get('value');
      }
    });
    edit_image_format_button.startup();
    
    
    
    
    // ********************************************************************
    // FPS
    var fps_numberTextBox = new NumberTextBox({
      name: 'fps',
      label: 'FPS',
      value: 25,
      placeHolder: '',
      required: true
    }, 'project_fps');
    fps_numberTextBox.startup();
    
    
    
    
    // ********************************************************************
    // REPOSITORY
    // The Memory
    var repository_memory = new JsonRest({
      target: '/get/repositories'
    });
    
    var repository_filteringSelect = new FilteringSelect({
      name: 'repository',
      required: true,
      {% if not repositories|length %}
        disabled: true,
        placeHolder: 'No Repository in DB'
      {% endif %}
    }, 'project_repository');
    repository_filteringSelect.startup();
    
    // The Updater
    var repo_field_updater = field_updater({
      'memory': repository_memory,
      'widget': repository_filteringSelect
    });
    // run the function to fill the data
    repo_field_updater({animate: false});
   
    // Add Repository Button
    var add_repository_button = create_add_edit_data_button({
      button_label: 'Add',
      dialog_id: 'add_repository_dialog',
      content_creator: create_add_repository_dialog,
      attach_to: 'project_add_repository_button',
      related_field_updater: repo_field_updater
    });
    add_repository_button.startup();
    
    // Edit Repository Button
    var edit_repository_button = create_add_edit_data_button({
      button_label: 'Edit',
      dialog_id: 'edit_repository_dialog',
      content_creator: create_edit_repository_dialog,
      attach_to: 'project_edit_repository_button',
      related_field_updater: repo_field_updater,
      data_id: function(){
        return repository_filteringSelect.get('value');
      }
    });
    edit_repository_button.startup();
    
    
    
    
    // ********************************************************************
    // STRUCTURE
    // 
    // The memory
    var structure_memory = new JsonRest({
      target: '/get/structures'
    });
    
    // The Field
    var structure_filteringSelect = new FilteringSelect({
      name: 'structure',
      required: true,
      {% if not structures|length %}
        disabled: true,
        placeHolder: 'No Structure in DB'
      {% endif %}
    }, 'project_structure');
    structure_filteringSelect.startup();
    
    // The Updater
    var structure_field_updater = field_updater({
      'memory': structure_memory,
      'widget': structure_filteringSelect
    });
    // call the updater to fill the field for the first time
    structure_field_updater({animate: false});
    
    // Add Structure Button
    var add_structure_button = create_add_edit_data_button({
      button_label: 'Add',
      dialog_id: 'add_structure_dialog',
      content_creator: create_add_structure_dialog,
      attach_to: 'project_add_structure_button',
      related_field_updater: structure_field_updater
    });
    add_structure_button.startup();
    
    // EDIT STRUCTURE BUTTON
    var edit_structure_button = create_add_edit_data_button({
      button_label:'Edit',
      dialog_id: 'edit_structure_dialog',
      content_creator: create_edit_structure_dialog,
      attach_to: 'project_edit_structure_button',
      related_field_updater: structure_field_updater,
      data_id: function(){
        return structure_filteringSelect.get('value')
      }
    });
    edit_structure_button.startup();
    
    
    
    
    // ********************************************************************
    // LEAD
    var lead_memory = new JsonRest({
      target: '/get/users'
    });
    
    // The Field
    var lead_filteringSelect = new FilteringSelect({
      name: 'lead',
      required: true,
      {% if not users|length %}
        disabled: true,
        placeHolder: 'No Users in DB'
      {% endif %}
    }, 'project_lead');
    lead_filteringSelect.startup();
    
    // The Updater
    var lead_field_updater = field_updater({
      'memory': lead_memory,
      'widget': lead_filteringSelect
    });
    lead_field_updater({animate: false});
    
    // Add Lead Button
    var add_lead_button = create_add_edit_data_button({
      button_label: 'Add',
      dialog_id: 'add_user_dialog',
      content_creator: create_add_user_dialog,
      attach_to: 'project_add_lead_button',
      related_field_updater: lead_field_updater
    });
    add_lead_button.startup();
    
    // Edit Lead Button
    var edit_lead_button = create_add_edit_data_button({
      button_label: 'Edit',
      dialog_id: 'edit_user_dialog',
      content_creator: create_edit_user_dialog,
      attach_to: 'project_edit_lead_button',
      related_field_updater: lead_field_updater,
      data_id: function(){
        return lead_filteringSelect.get('value')
      }
    });
    edit_lead_button.startup();
    
    
    
    
    // ********************************************************************
    // Status List
    //
    // The Memory
    var status_list_memory = new JsonRest({
      target: 'get/status_lists_for/Project'
    });
    
    // The Field
    var status_list_select = new FilteringSelect({
      name: 'status_list',
      required: true,
      {% if not status_lists|length %}
        disabled: true,
        placeHolder: 'No StatusList in DB',
      {% endif %}
    }, 'project_status_list');
    status_list_select.startup();
    
    // The Updater
    var status_list_field_updater = field_updater({
      'memory': status_list_memory,
      'widget': status_list_select
    });
    status_list_field_updater({animate: true});
    
    console.log('this is here 0')
    
    // Add Status List Button
    var add_status_list_button = create_add_edit_data_button({
      button_label: 'Add',
      dialog_id: 'add_status_list_dialog',
      content_creator: create_add_status_list_dialog,
      attach_to: 'project_add_status_list_button',
      related_field_updater: status_list_field_updater,
      data_id: 'Project'
    });
    add_status_list_button.startup();
    
    // Edit Status List Button
    var edit_status_list_button = create_add_edit_data_button({
      button_label: 'Edit',
      dialog_id: 'edit_status_list_dialog',
      content_creator: create_edit_status_list_dialog,
      attach_to: 'project_edit_status_list_button',
      related_field_updater: status_list_field_updater,
      data_id: function(){
        return function(){
          return 'edit/status_list/' + status_list_select.get('value');
        }
      }
    });
    edit_status_list_button.startup();
    
    // ********************************************************************
    // ADD BUTTON
    var add_button = new Button({
      label: 'Add',
      type: 'button',
      onClick: function(){
        submit_form({
          dialog: dijit.byId('add_project_dialog'),
          form: add_project_form,
          additional_data: {submitted: 'add'},
          url: '{{ request.route_url("add_project") }}',
          method: 'POST'
        });
      }
    }, 'project_add_button');
    add_button.startup();
    
    // ********************************************************************
    // CANCEL BUTTON
    var cancel_button = new Button({
      label: 'Cancel',
      type: 'button',
      onClick: function(){
        dijit.byId('add_project_dialog').destroyRecursive();
      }
    }, 'project_cancel_button');
    cancel_button.startup();
    
    add_project_form.startup();
    
});
</script>

