{#{% extends 'form_base.jinja2' %}#}
{#{% block form_block %}#}
<div class='dijitDialogPaneContentArea'>
  <form id='edit_image_format_form'>
    <table style='width: 100%'>
    
      {# NAME #}
      <tr>
        <td class='label_column'>
          <label for='image_format_name'>
            Name
          </label>
        </td>
        <td class='input_column'>
          <input id='image_format_name'>
        </td>
      </tr>
      
      {# WIDTH #}
      <tr>
        <td class='label_column'>
          <label for='image_format_width'>
            Width
          </label>
        </td>
        <td class='input_column'>
          <input id='image_format_width'>
        </td>
      </tr>
      
      {# HEIGHT #}
      <tr>
        <td class='label_column'>
          <label for='image_format_height'>
            Height
          </label>
        </td>
        <td class='input_column'>
          <input id='image_format_height'>
        </td>
      </tr>
      
      <tr>
        <td class='label_column'>
          <label for='image_format_pixel_aspect'>
            Pixel Aspect
          </label>
        </td>
        <td class='input_column'>
          <input id='image_format_pixel_aspect'>
        </td>
      </tr>
      
    </table>
  </form>
</div>
<div class='dijitDialogPaneActionBar'>
  <button id='image_format_edit_button'
          value='Submit'
          name='edited'
          type='submit'></button>
  <button id='image_format_cancel_button'></button>
</div>
<script type='text/javascript'>
  require(['dijit/registry', 'dojo/_base/xhr', 'dojo/store/Memory',
    'dijit/form/Form', 'dijit/form/ValidationTextBox', 'dijit/form/TextBox',
    'dijit/form/NumberTextBox', 'dijit/form/Button', 'dojo/domReady!'
  ],
    function(registry, xhr, Memory, Form, ValidationTextBox, NumberTextBox,
             TextBox, Button){
      
      var edit_image_format_form = new Form({
        id: 'edit_image_format_form',
        method: 'POST',
        onSubmit: function(event){
          if (this.validate()){
            // just close the dialog and somehow change the referrer
            var deferred = xhr.post({
              content: {
                submitted: 'edit'
              },
              url: '{{ request.route_url("edit_image_format", imf_id=image_format.id) }}',
              form: dojo.byId('edit_image_format_form')
            });
            
            // update the caller dialog
            var dialog = dijit.byId('edit_image_format_dialog');
            var parent = dialog.get('parent');
            if (parent != null){
              // TODO: just update the image format field of the parent dialog
              parent.refresh()
            }
            
            // destroy the dialog
            dialog.destroyRecursive();
          }
          return false;
        }
      }, 'edit_image_format_form');
      edit_image_format_form.startup();
      
      // NAME
      var name_textBox = new ValidationTextBox({
        name: 'name',
        label: 'Name',
        placeHolder: 'Enter a name',
        value: '{{ image_format.name }}',
        required: true
      }, 'image_format_name');
      name_textBox.startup();
      
      // WIDTH
      var width_numberTextBox = new NumberTextBox({
        name: 'width',
        label: 'Width',
        placeHolder: '',
        value: {{ image_format.width }},
        required: true
      }, 'image_format_width');
      width_numberTextBox.startup();
      
      // HEIGHT
      var height_numberTextBox = new NumberTextBox({
        name: 'height',
        label: 'Height',
        placeHolder: '',
        value: {{ image_format.height }},
        required: true
      }, 'image_format_height');
      height_numberTextBox.startup();
      
      // PIXEL_ASPECT
      var pixel_aspect_numberTextBox = new NumberTextBox({
        name: 'pixel_aspect',
        label: 'Pixel Aspect',
        value: {{ image_format.pixel_aspect }},
        required: true
      }, 'image_format_pixel_aspect');
      pixel_aspect_numberTextBox.startup();
      
      // EDIT BUTTON
      var edit_button = new Button({
        name: 'edited',
        label: 'Edit',
        required: true,
        type: 'submit',
        value: 'Submit',
        onClick: function(){
          return edit_image_format_form.submit();
        }
      }, 'image_format_edit_button');
      edit_button.startup();
      
      // CANCEL BUTTON
      var cancel_button = new Button({
        label: 'Cancel',
        type: 'button',
        onClick: function(){
          var dialog = dijit.byId('edit_image_format_dialog');
          dialog.destroyRecursive();
        }
      }, 'image_format_cancel_button');
      cancel_button.startup();
      
  });
</script>
{#{% endblock %}#}

