{# Stalker a Production Asset Management System
 Copyright (C) 2009-2013 Erkan Ozgur Yilmaz
 
 This file is part of Stalker.
 
 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free Software Foundation;
 version 2.1 of the License.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.

 You should have received a copy of the GNU Lesser General Public
 License along with this library; if not, write to the Free Software
 Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
#}
<div class='dijitDialogPaneContentArea' style='height: 380px'>
  <form id='update_structure_form'>
    <table style='width: 100%'>
    
    {# Name #}
    <tr>
      <td class='label_column'>
        <label for='update_structure_name'>
          Name
        </label>
      </td>
      <td class='input_column'>
        <input id='update_structure_name'>
      </td>
    </tr>
    
    {# Custom Template #}
    <tr style='height: 260px'>
      <td class='label_column'>
        <label for='update_structure_custom_template'>
          Custom Template
        </label>
      </td>
      <td class='input_column'>
        <input id='update_structure_custom_template'>
      </td>
    </tr>
    
    {# Filename Templates #}
    <tr>
      <td class='label_column'>
        <label for='update_structure_filename_template'>
          Filename Templates
        </label>
      </td>
      <td class='input_column'>
        <select id='update_structure_filename_template'></select>
      </td>
      <td class='button_column'>
        <button id='update_structure_create_filename_template_button'>New</button>
{#        <button id='structure_update_filename_template_button'>Update</button>#}
      </td>
    </tr>
    </table>
  </form>
</div>

<div class='dijitDialogPaneActionBar'>
  <button id='update_structure_submit_button'></button>
  <button id='update_structure_cancel_button'></button>
</div>

<script type='text/javascript'>
  require(['dijit/registry', 'dojo/store/Memory', 'dijit/form/Form',
    'dijit/form/ValidationTextBox',  'dijit/form/SimpleTextarea',
    'dijit/form/Button', 'dijit/form/MultiSelect', 'dojo/store/JsonRest',
    'stalker/submitForm', 'stalker/fieldUpdater', 'stalker/dialogCaller',
    'dojo/domReady!'],
    function(registry, Memory, Form, ValidationTextBox, 
             SimpleTextarea, Button, MultiSelect, JsonRest, submitForm,
             fieldUpdater, dialogCaller){
      
      // **********************************************************************
      // Form
      var update_structure_form = new Form({
        id: 'update_structure_form'
      }, 'update_structure_form');
      update_structure_form.startup();
      
      
      
      
      // **********************************************************************
      // Name
      var name_textBox = new ValidationTextBox({
        name: 'name',
        label: 'Name',
        value: '{{ structure.name }}',
        placeHolder: 'Enter a name',
        required: true
      }, 'update_structure_name');
      name_textBox.startup();
      
      
      
      
      // **********************************************************************
      // Custom Template
      var custom_template_simpleTextarea = new SimpleTextarea({
        name: 'custom_template',
        label: 'Custom Template',
        value: '{{ structure.custom_template }}',
        placeHolder: 'Enter any custom template here',
        required: false,
        style: 'height: 250px; overflow:auto'
      }, 'update_structure_custom_template');
      custom_template_simpleTextarea.startup();
      
      
      
      
      // **********************************************************************
      // Filename Template
      var filename_template_memory = new JsonRest({
        target: '/get/filename_templates'
      });
      
      // The Widget
      var filename_template_multi_select = new MultiSelect({
        name: 'filename_templates',
        required: false
      }, 'update_structure_filename_template');
      filename_template_multi_select.startup();
      
      // The Updater
      var filename_template_field_updater = fieldUpdater({
        'memory': filename_template_memory,
        'widget': filename_template_multi_select,
        'selected': [
          {% for ft in structure.templates %}
            {{ ft.id}},
          {% endfor %}
        ]
      });
      // run the function to fill the data for the first time
      filename_template_field_updater({animate: false});
      
      // Add Filename Template Button
      var create_filename_template_button = dialogCaller({
        label: 'New',
        dialog_id: 'create_filename_template_dialog',
        content_creator: create_filename_template_dialog_creator,
        attach_to: 'update_structure_create_filename_template_button',
        related_field_updater: filename_template_field_updater
      });
      create_filename_template_button.startup();
      
      
      
      
      // **********************************************************************
      // Update Button
      var submit_button = new Button({
        label: 'OK',
        type: 'button',
        onClick: function(){
          submitForm({
            dialog: registry.byId('update_structure_dialog'),
            form: update_structure_form,
            additional_data: {submitted: 'update'},
            url: '{{ request.route_url('update_structure', structure_id=structure.id) }}',
            method: 'POST'
          });
        }
      }, 'update_structure_submit_button');
      submit_button.startup();
      
      
      
      
      // **********************************************************************
      // Cancel Button
      var cancel_button = new Button({
        label: 'Cancel',
        type: 'button',
        onClick: function(){
          var dialog = registry.byId('update_structure_dialog');
          dialog.destroyRecursive();
        }
      }, 'update_structure_cancel_button');
      cancel_button.startup();
      
      
  });
</script>

