<div class='dijitDialogPaneContentArea'> 
  <form id='create_asset_form'>
    <table style='width: 100%;'>
      
      {# NAME #}
      <tr>
        <td class='label_column'>
          <label for='asset_name'>Name</label>
        </td>
        <td class='input_column'>
          <input id='asset_name'>
        </td>
      </tr>
      
      {# CODE #}
      <tr>
        <td class='label_column'>
          <label for='asset_code'>Code</label>
        </td>
        <td class='input_column'>
          <input id='asset_code'>
        </td>
      </tr>
      
      {# DESCRIPTION #}
      <tr>
        <td class='label_column'>
          <label for='asset_description'>Description</label>
        </td>
        <td class='input_column'>
          <input id='asset_description'>
        </td>
      </tr>
      
      {# TYPE #}
      <tr>
        <td class='label_column'>
          <label for='asset_type'>Type</label>
        </td>
        <td class='input_column'>
          <input id='asset_type'>
        </td>
      </tr>
      
      {# PROJECT #}
      <tr>
        <td class='label_column'>
          <label for='asset_project'>Project</label>
        </td>
        <td class='input_column'>
          <input id='asset_project'>
        </td>
      </tr>
      
      {# STATUS LIST#}
      <tr>
        <td class='label_column'>
          <label for='asset_status_list'>Status List</label>
        </td>
        <td class='input_column'>
          <input id='asset_status_list'>
        </td>
        <td class='button_column'>
          <button id='asset_create_status_list_button'>New</button>
          <button id='asset_update_status_list_button'>Update</button>
        </td>
      </tr>
      
      {# STATUS #}
      <tr>
        <td class='label_column'>
         <label for='asset_status'>Status</label>
        </td>
        <td class='input_column'> 
          <input id='asset_status'>
        </td>
      </tr>
      
    </table>      
  </form>
</div>

<div class='dijitDialogPaneActionBar'>
  <button id='asset_submit_button'>OK</button>
  <button id='asset_cancel_button'>Cancel</button>
</div>

<script type='text/javascript'>
  require(['dijit/registry', 'dojo/store/Memory', 'dijit/form/Form',
    'dijit/form/ValidationTextBox', 'dijit/form/TextBox',
    'dijit/form/FilteringSelect', 'dijit/form/ComboBox', 'dijit/form/Button',
    'dojo/store/JsonRest', 'stalker/submitForm', 'stalker/fieldUpdater',
    'stalker/dialogCaller', 'dojo/ready'],
    function(registry, Memory, Form, ValidationTextBox, TextBox,
             FilteringSelect, ComboBox, Button, JsonRest, submitForm,
             fieldUpdater, dialogCaller){
      
      // ************************************************************************
      // Form
      var create_asset_form = new Form({
        id: 'create_asset_form'
      }, 'create_asset_form');
      
      
      
      
      // ************************************************************************
      // Name
      var name_textBox = new ValidationTextBox({
        name: 'name',
        label: 'Name',
        placeHolder: 'Enter a name',
        required: true
      }, 'asset_name');
      name_textBox.startup();
      
      
      
      
      // ************************************************************************
      // Code
      var code_textBox = new TextBox({
        name: 'code',
        label: 'Code',
        placeHolder: 'Enter a code'
      }, 'asset_code');
      name_textBox.startup();
      
      
      
      
      // ************************************************************************
      // Description
      var description_textBox = new TextBox({
        name: 'description',
        label: 'Description',
        placeHolder: 'Enter description'
      }, 'asset_description');
      description_textBox.startup();
      
      
      
      
      // ************************************************************************
      // Type
      var type_memory = new Memory({
        data: [
          {% for type_ in types %}
            {
              id: '{{ type_.id }}',
              name: '{{type_.name}}'
            },
          {% endfor %}
        ]
      });
      
      var type_comboBox = new ComboBox({
        name: 'type_name',
        required: true,
        store: type_memory,
        placeHolder: 'Enter A New Type or Select A Type'
      }, 'asset_type');
      
      // set value of Type
      
      if (type_memory.data[0] != undefined ){
        try {
          type_comboBox.attr('value', type_memory.data[0].name);
        } catch(e) {
          // don't do anything
        }
      }
      
      type_comboBox.startup();
      
      
      
      
    // ************************************************************************
    // Project

    var project_select;

    {% if project %}
        project_select = new TextBox({
             name: 'project_id',
             label: 'Project',
             value: '{{ project.name }} ({{ project.entity_type }})',
             disabled: true
        }, 'asset_project');
        project_select.startup();
    {% else %}
      var project_memory = new Memory({
        data: [
          {% for project in projects %}
            {
              name: '{{ project.name }}',
              id: '{{ project.id }}'
            },
          {% endfor %}
        ]
        });
        
        project_select = new FilteringSelect({
            name: 'project_id',
            required: true,
            store: project_memory,
            placeHolder: 'Select A Project'
        }, 'asset_project');
        project_select.startup();
    {% endif %}
      
      
      
      // ************************************************************************
      // Status List
      //
      // The Memory
      var status_list_memory = new JsonRest({
        target: 'get/status_lists_for/Asset'
      });
      
      // The Field
      var status_list_filtering_select = new FilteringSelect({
        name: 'status_list_id',
        label: 'Status List',
        required: true,
        onChange: function(){
          status_updater({animate: true});
        }
      }, 'asset_status_list');
      status_list_filtering_select.startup();
      
      // The Updater
      var status_list_field_updater = fieldUpdater({
        'memory': status_list_memory,
        'widget': status_list_filtering_select
      });
      status_list_field_updater({animate: false});
      
      // New Status List Button
      var create_status_list_button = dialogCaller({
        label: 'New',
        dialog_id: 'create_status_list_dialog',
        content_creator: create_status_list_dialog_creator,
        attach_to: 'asset_create_status_list_button',
        related_field_updater: status_list_field_updater,
        data_id: 'Asset'
      });
      create_status_list_button.startup();
      
      // Update Status List Button
      var update_status_list_button = dialogCaller({
        label: 'Update',
        dialog_id: 'update_status_list_dialog',
        content_creator: update_status_list_dialog_creator,
        attach_to: 'asset_update_status_list_button',
        related_field_updater: status_list_field_updater,
        data_id: function(){
          return status_list_filtering_select.get('value')
        }
      });
      update_status_list_button.startup();
      
      
      
      
      // ************************************************************************
      // Status 
      // 
      // The Memory
      var status_memory = new JsonRest({
        target: 'get/statuses_of/{{ status_list.id }}'
      });
      
      // The Field
      var status_filtering_select = new FilteringSelect({
        name: 'status_id',
        required: true,
        store: status_memory,
        disabled:true,
        placeHolder: 'Select A Status'
      }, 'asset_status');
      status_filtering_select.startup();


      // The Updater
      var status_updater = fieldUpdater({
        memory: status_memory,
        query_data: function(){
          status_filtering_select.set('disabled', false);
          var widget = registry.byId('asset_status_list');
          return widget.get('value');
        },
        widget: status_filtering_select
      });
      
      
      
      
      // ************************************************************************
      // Submit Button
      var submit_button = new Button({
        label: 'OK',
        type: 'button',
        onClick: function(){
          submitForm({
            dialog: registry.byId('create_asset_dialog'),
            form: create_asset_form,
            additional_data: {
              submitted: 'create',
              type_name: type_comboBox.get('value')
            },
            {% if project %}
              url: 'create/asset/{{project.id}}',
            {% else %}
              url: 'create/asset/' + project_select.value,
            {% endif %}
            method: 'POST'
          });
        }
      }, 'asset_submit_button');
      submit_button.startup();
      
      
      
      
      // ************************************************************************
      // Cancel Button
      var cancel_button = new Button({
        label: 'Cancel',
        type: 'button',
        onClick: function(){
          registry.byId('create_asset_dialog').destroyRecursive();
        }
      }, 'asset_cancel_button');
      cancel_button.startup();
      
      create_asset_form.startup();
      
  });
</script>

