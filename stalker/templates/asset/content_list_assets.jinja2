{# Stalker a Production Asset Management System
 Copyright (C) 2009-2013 Erkan Ozgur Yilmaz
 
 This file is part of Stalker.
 
 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free Software Foundation;
 version 2.1 of the License.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.

 You should have received a copy of the GNU Lesser General Public
 License along with this library; if not, write to the Free Software
 Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
#}
<div id='list_assets'>
  <button id='list_assets_create_asset_button'>New Asset</button>
  <div id='assets_data_grid'></div>
</div>

<script type='text/javascript'>
  require(['dijit/registry',
    'dojo/data/ObjectStore',
    'dojox/grid/DataGrid',
    'dojo/store/Memory',
    'dijit/form/FilteringSelect',
    'dojo/store/JsonRest',
    'stalker/fieldUpdater',
    'stalker/dialogCaller',
    'stalker/gotoLink',
    'dojo/on',
    'dojo/query',
    'dojo/domReady!'],
      function(registry,
               ObjectStore,
               DataGrid,
               Memory,
               FilteringSelect,
               JsonRest,
               fieldUpdater,
               dialogCaller,
               gotoLink,
               on,
               query){


        var asset_data_grid = new DataGrid({
          id: 'assets_data_grid',
              width: '100%',
              autoHeight: true,
              singleClickEdit: true,
              escapeHTMLInData: false,
              rowSelector: '20px'
            }, 'assets_data_grid');

        var create_asset_button = dialogCaller({
              label: 'New Asset',
              dialog_id: 'create_asset_dialog',
              content_creator: create_asset_dialog_creator,
              attach_to: 'list_assets_create_asset_button',
              related_field_updater: asset_data_grid_updater,
              data_id: '{{ project.id }}'
            });

        asset_data_grid.startup();
        create_asset_button.startup();

        //asset_data_grid_updater();

           var status_memory = new JsonRest({
              target: 'get/statuses_for/Asset'
            });

           status_memory.query().then(function(data){
              asset_data_grid_updater();
            });



        function asset_data_grid_updater(){

          var asset_memory = new JsonRest({
            target: '/get/assets/{{ project.id }}'
          });

          asset_memory.query().then(function(data){


           for(var i=0;i<data.length;i++ ){

             var assetName = data[i]["name"];
             var assetLink = '<a class="DataLink" href="#" stalker_href="view/asset/' + data[i]['id'] + '">' + assetName + '</a>';

             var userName = data[i]["user_name"];
             var userLink = '<a class="DataLink" href="#" stalker_href="view/user/' + data[i]['user_id'] + '">' + userName + '</a>';

             data[i]["asset_link"] = assetLink;
             data[i]["user_link"] = userLink;

           }


           var my_store =  new ObjectStore({ objectStore:new Memory({ data: data }) });

           var structure = [
             {name: 'Thumbnail',                         width: '100px'},
             {name: 'Name',        field: 'asset_link',  width: '100px'},
             {name: 'Type',        field: 'type',        width: '200px'},
             {name: 'Status',      field: 'status',      width: '150px', editable: true,
               widgetClass: FilteringSelect,
               widgetProps: {
                 store: status_memory
               }},
             {name: 'Created By',  field: 'user_link',     width: '150px'},
             {name: 'Description', field: 'description', width: 'auto'}
           ];

           asset_data_grid.set('store', my_store );
           asset_data_grid.set('structure', structure );




           gotoLink({target:'central_content'});

          });

        }

      });
</script>

