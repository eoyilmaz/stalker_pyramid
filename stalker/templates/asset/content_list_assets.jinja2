{# Stalker a Production Asset Management System
 Copyright (C) 2009-2013 Erkan Ozgur Yilmaz

 This file is part of Stalker.

 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free Software Foundation;
 version 2.1 of the License.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.

 You should have received a copy of the GNU Lesser General Public
 License along with this library; if not, write to the Free Software
 Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
#}
<div id='list_assets'>
    {% if has_permission('Create_Asset') %}
        <button id='list_assets_create_asset_button'>New Asset</button>
    {% endif %}
    <div id='assets_data_grid'></div>
</div>

<script type='text/javascript'>
    require([
        'dijit/registry',
        'dojo/data/ObjectStore',
        'dojo/aspect',
        "dgrid/List",
        "dgrid/Grid",
        "dgrid/Selection",
        "dgrid/Keyboard",
        "dojo/_base/declare",
        "dgrid/editor",
        'dojo/store/Memory',
        'dijit/form/Select',
        'dojo/store/JsonRest',
        'stalker/dialogs',
        'stalker/fieldUpdater',
        'stalker/dialogCaller',
        'dojo/domReady!'
    ], function (registry, ObjectStore, aspect, List, Grid, Selection,
                 Keyboard, declare, editor, Memory, Select, JsonRest, dialogs,
                 fieldUpdater, dialogCaller) {

        var StandardGrid = declare([Grid, Selection, Keyboard]);
        var asset_data_grid = new StandardGrid({
            id: 'assets_data_grid',
            width: '100%',
            autoHeight: true
        }, 'assets_data_grid');

        {% if has_permission('Create_Asset') %}
            var create_asset_button = dialogCaller({
                label: 'New Asset',
                dialog_id: 'create_asset_dialog',
                content_creator: dialogs.create_asset_dialog,
                attach_to: 'list_assets_create_asset_button',
                related_field_updater: asset_data_grid_updater,
                data_id: '{{ project.id }}'
            });
            create_asset_button.startup();
        {% endif %}


        var status_memory = new JsonRest({
            target: 'get/statuses_for/Asset'
        });

        var status_store;
        status_memory.query().then(function (data) {
            status_store = new ObjectStore({ objectStore: new Memory({ data: data }) });
            asset_data_grid_updater();
        });


        function asset_data_grid_updater() {

            var asset_memory = new JsonRest({
                target: '/get/assets/{{ project.id }}'
            });

            asset_memory.query().then(function (data) {

                var columns = [

                    {
                        label: "Thumbnail",
                        field: 'thumbnail',
                        sortable: false,
                        get: function (object) {
                            return object; // return entire item for formatter to use
                        },
                        formatter: function (object) {

                            var path = '{{ request.static_url("stalker:static/stalker/images/Placeholder_shot.png") }}';
                            if (object.thumbnail_path) {
                                path = object.thumbnail_path;
                            }
                            return '<img width= "60px"; src="' + path + '">';

                        }
                    },

                    {
                        field: 'status',
                        label: "Status",
                        get: function (object) {
                            return object; // return entire item for formatter to use
                        },
                        formatter: function (item) {

                            var bg_color = '#' + item.status_bg_color.toString(16);
                            var fg_color = '#' + item.status_fg_color.toString(16);


                            return '<span style="color:' + bg_color + '; background-color:' + bg_color + '; ">....</span><span style="color:' + bg_color + '; ">  ' + item.status + '</span>';
                        }

                    },
                    {
                        field: 'name',
                        label: "Name",
                        get: function (object) {
                            return object; // return entire item for formatter to use
                        },
                        formatter: function (value) {

                            {% if has_permission('Read_Asset')%}

                                var targetPane = "'assets_content_pane'";
                                var address = "'view/task/" + value.id + "'";
                                return '<a href="javascript:redirectLinkInParent(' + targetPane + ',' + address + ');">' + value.name + '</a>';

                            {% else %}

                                return  value.name;

                            {% endif %}

                        }
                    },
                    {
                        field: 'type',
                        label: "Type"
                    },
                    {
                        field: 'user_name',
                        label: "Created By",
                        get: function (object) {
                            return object; // return entire item for formatter to use
                        },
                        formatter: function (value) {

                            {% if has_permission('Read_User')%}


                                var targetPane = "'central_content'";
                                var address = "'view/user/" + value.user_id + "'";

                                return '<a href="javascript:redirectLink(' + targetPane + ',' + address + ');">' + value.user_name + '</a>';
                            {% else %}

                                return  value.user_name;

                            {% endif %}

                        }

                    },
                    {
                        field: 'description',
                        label: "Description"
                    }
                ];

                asset_data_grid.renderArray(data);
                asset_data_grid.set('columns', columns);

            });
        }


        var content_pane = registry.byId('assets_content_pane');


        aspect.after(content_pane, "resize", function () {

            console.log('asset_data_grid.resize();');
            asset_data_grid.resize();

        });

    });
</script>
