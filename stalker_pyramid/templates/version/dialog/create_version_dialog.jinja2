{# Stalker Pyramid a Web Base Production Asset Management System
 Copyright (C) 2009-2014 Erkan Ozgur Yilmaz

 This file is part of Stalker Pyramid.

 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free Software Foundation;
 version 2.1 of the License.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.

 You should have received a copy of the GNU Lesser General Public
 License along with this library; if not, write to the Free Software
 Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
#}

<div class="row-fluid">
    <form id='upload_version_form'
        class='form-horizontal'
        role='form'
        method='post'>
        <div class='control-group'>
            <label class='span2 control-label' for='input_version'>File</label>
            <div class='span10'>
                <input type="file" id="input_version" name="file_object" required>
            </div>
        </div>
        <div class="control-group">
            <label class="span2 control-label" for="version_take_name">Take Name</label>
            <div class="span10 controls">
                <input type="text"
                       id="version_take_name"
                       class='span9 input-block-level'
                       name='version_take_name'
                       required value="Main"/>&nbsp;&nbsp;
                <input class="ace" type="checkbox" id="is_published" />
                <label class="lbl" for="is_published"> Is Published</label>
            </div>
        </div>
        <div class='control-group'>
            <label class='span2 control-label' for='version_description'>Description</label>
            <div class='span10'>
                <textarea id='version_description'
                          name='version_description'
                          class='autosize-transition span12'
                          style='overflow: hidden; word-wrap: break-word;resize: horizontal;height: 150px;'></textarea>
            </div>
        </div>
        <div class='control-group'>
            <div class='span12 align-right'>
                <input class="ace" type="checkbox" id="bind_to_originals" />
                <label class="lbl" for="bind_to_originals"> Bind To Originals</label>
            </div>
        </div>
    </form>
    <div id="upload_progress_control" class="progress" data-percent="0%">
        <div id="upload_progress_bar" class="bar" style="width:0;"></div>
    </div>
    <div class="hr dotted"></div>
</div>

<script>

    function init_dialog(){
        // init dialog
        console.debug('init dialog from create_version_dialog.jinja2 running!');

        var task_id = {{ task.id }};
        
        $('.modal-header>h3').text('Create Version');

        $('#input_version').ace_file_input({
            no_file:'No File ...',
            btn_choose:'Choose',
            btn_change:'Change',
            droppable:false,
            onchange:null,
            thumbnail:false, //| true | large
            blacklist:'exe|php'
            //whitelist:'gif|png|jpg|jpeg'
        });



        var submit_button = $('#dialog_template_submit_button');

        // register submit event
        submit_button.on('click', function(e){
            e.preventDefault();
            e.stopPropagation();
            // disable it
            // disable the Submit button
            setTimeout(function(){
                submit_button.data('loading-text', 'Uploading Version, Please Wait...');
                submit_button.button('loading')}, 0
            );

            // prepare data
            var form_data = new FormData();

            var file_info = $('#input_version').data('ace_input_files');

            form_data.append('file_object', file_info[0]);
            form_data.append('task_id', task_id);
            form_data.append('take_name', $('#version_take_name').val());
            form_data.append('is_published', $('#is_published').val());
            form_data.append('description', $('#version_description').val());
            form_data.append('bind_to_originals', $('#bind_to_originals').val());

            $.ajax({
                url: '{{ request.route_url('create_version') }}',
                type: 'POST',
                processData: false,
                contentType: false,
{#                dataType: 'json',#}
                enctype: 'multipart/form-data',
                data: form_data,
                xhr: function() {
                    var xhr = new window.XMLHttpRequest();
                    //Upload progress
                    xhr.upload.addEventListener("progress", function(evt){
                        if (evt.lengthComputable) {
                            var percentComplete = evt.loaded / evt.total;
                            //Do something with upload progress
                            //console.log(percentComplete);
                            $('#upload_progress_control').attr('data-percent', (percentComplete * 100).toFixed(1) + '%');
                            $('#upload_progress_bar').css({'width': (percentComplete * 100) + '%'});
                        }
                    }, false);

{#                    //Download progress#}
{#                    xhr.addEventListener("progress", function(evt){#}
{#                        if (evt.lengthComputable) {#}
{#                            var percentComplete = evt.loaded / evt.total;#}
{#                            //Do something with download progress#}
{#                            console.log(percentComplete);#}
{#                        }#}
{#                    }, false);#}
                    return xhr;
                  }
            }).done(function (jqXHR) {
                // alert the user about the added files
                // reload outputs
                // get the data in jqXHR
                $('#dialog_template').modal('hide');
            }).fail(function (jqXHR) {
                // alert the user about what is failed
                console.debug('jqXHR:', jqXHR);
                bootbox.alert(jqXHR.responseText);
                // enable the Submit button
            }).always(function (jqXHR) {
                setTimeout(function () {
                    submit_button.button('reset')
                }, 0);
            });

        });
    }

    function destruct_dialog(){
{#        // reduce counter#}
{#        counter -= 1;#}
        // unbind events
        $("#input_version").unbind();
        $("#dialog_template_submit_button").unbind();

        // destroy dialog
        console.debug('destroy dialog from upload_output.jinja2 running!');
        $('#dialog_template').data('modal', null);
    }
</script>
