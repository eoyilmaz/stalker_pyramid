<div class='row-fluid'>
    <div class='span12'>
      <div id="selected_date"></div>

        <form id='time_log_form'
              class='form-horizontal'
              role='form'
              method='post'>


            {# Resource #}
            <div class='control-group'>
                <label class='span2 control-label' for='time_log_resource'>Resource</label>

                <div class='span10'>
                    <select id='time_log_resource'
                            class='input-block-level'
                            name='resource_id'
                            required></select>
                </div>
            </div>

            {# Task #}
            <div class='control-group'>
                <label class='span2 control-label'
                       for='time_log_task'>Task</label>

                <div class='span10'>
                    <select id='time_log_task'
                            name='task_id'
                            class='input-block-level'
                            data-placeholder='Task'></select>
                </div>
            </div>
            {# Start Time#}
            <div class="row-fluid">
                <div class="control-group">
                    <label class='span2 control-label'
                           for='start_time'>From</label>

                    <div class="span2 input-append bootstrap-timepicker">
                        <input id="start_time" name="start_time" type="text"
                               class="input-small"/>
                    <span class="add-on">
                        <i class="icon-time"></i>
                        </span>
                    </div>
                </div>

                {# End Time#}
                <div class="control-group">
                    <label class='span2 control-label' for="end_time">To</label>

                    <div class="span2 input-append bootstrap-timepicker">
                        <input id="end_time" name="end_time" type="text" class="input-small"/>
                    <span class="add-on">
                        <i class="icon-time"></i>
                        </span>
                    </div>
                </div>
            </div>
        </form>
        <div class="space-20"></div>
    </div>
</div>

<script src='{{ request.static_url("stalker_pyramid:static/ace/js/chosen.jquery.min.js") }}'></script>
<script src='{{ request.static_url("stalker_pyramid:static/ace/js/date-time/bootstrap-datepicker.min.js") }}'></script>
<script src='{{ request.static_url("stalker_pyramid:static/ace/js/date-time/moment.min.js") }}'></script>
<script src='{{ request.static_url("stalker_pyramid:static/ace/js/date-time/daterangepicker.min.js") }}'></script>
<script src='{{ request.static_url("stalker_pyramid:static/ace/js/date-time/bootstrap-timepicker.min.js") }}'></script>
<script src='{{ request.static_url("stalker_pyramid:static/ace/js/bootstrap-colorpicker.min.js") }}'></script>
<script src='{{ request.static_url("stalker_pyramid:static/ace/js/jquery.autosize-min.js") }}'></script>
<script src='{{ request.static_url("stalker_pyramid:static/ace/js/jquery.inputlimiter.1.3.1.min.js") }}'></script>
<script src='{{ request.static_url("stalker_pyramid:static/ace/js/jquery.maskedinput.min.js") }}'></script>
<script src='{{ request.static_url("stalker_pyramid:static/ace/js/bootstrap-tag.min.js") }}'></script>
<script src='{{ request.static_url("stalker_pyramid:static/ace/js/jquery.validate.min.js") }}'></script>
<script src='{{ request.static_url("stalker_pyramid:static/ace/js/additional-methods.min.js") }}'></script>
<script src='{{ request.static_url("stalker_pyramid:static/ace/js/fuelux/fuelux.spinner.min.js") }}'></script>


<script>
function init_time_log_dialog(start, end) {
    console.debug('starting to initialize time_log dialog!!!');

    {# ***************************************************************** #}

    $("#selected_date").empty();
    $("#selected_date").append('<h4 class="blue">' + start.format('dd:mm:yyyy')+'</h4>');


    var task_id;
    var task_url = '/tasks/'

    var resource_id;
    var resource_url = '/users/'

    var start_date_value = start;
    var end_date_value = end;

    var start_time_value = start_date_value.clearTime();
    var end_time_value = end_date_value.clearTime();

    start_time_value.setHours(10);
    end_time_value.setHours(19);


    {% if mode == 'create' %}

        $("#time_log_form").attr("action", "{{ request.route_url('create_time_log', id=entity.id) }}");

        {% if entity.entity_type  == 'User' %}

            {# ***************************************************************** #}
            {# Resource #}
            var time_log_resource = $('#time_log_resource');
            time_log_resource.append('<option value={{ entity.id }} selected>{{ entity.name }}</option>');

            {# ***************************************************************** #}
            {# Task #}
            {% raw %}
                var task_option_template = doT.template(
                        '<option value={{=it.id}}>{{=it.name}}</option>'
                );
            {% endraw %}

            var time_log_task = $('#time_log_task');
            time_log_task.find('option').remove();

            {% for task in entity.tasks %}

              var parent_name = '';

              {% for parent in task.parents %}

                parent_name+= " | "+ '{{parent.name }}'

              {% endfor %}

               var data = {id:'{{ task.id }}', name:'{{ task.name }}'+parent_name};
               time_log_task.append(task_option_template(data));

            {% endfor %}

            time_log_task.on('change', function () {

            });

        {% elif entity.entity_type  == 'Task'%}

          {# ***************************************************************** #}
            {# Resource #}
            var time_log_task = $('#time_log_task');
            var parent_name = '';

            {% for parent in entity.parents %}

                parent_name+= " | "+ '{{parent.name }}'

            {% endfor %}
            time_log_task.append('<option value={{ entity.id }} selected>{{ entity.name }}'+parent_name+'</option>');

            {# ***************************************************************** #}
            {# Resource #}
            {% raw %}
                var user_option_template = doT.template(
                        '<option value={{=it.id}}>{{=it.name}}</option>'
                );
            {% endraw %}

            var time_log_resource = $('#time_log_resource');
            time_log_resource.find('option').remove();

            {% for user in entity.users %}
               var data = {id:'{{ user.id }}', name:'{{ user.name }}'+parent_name};
               time_log_resource.append(user_option_template(data));

            {% endfor %}

            time_log_resource.on('change', function () {

            });



        {% endif %}

    {% elif mode == 'update' %}

        $("#time_log_form").attr("action", "{{ request.route_url('update_time_log', id=time_log.id) }}");

        var time_log_resource = $('#time_log_resource');
        time_log_resource.append('<option value={{ time_log.user.id }} selected>{{ time_log.user.name }}</option>');

        var time_log_task = $('#time_log_task');
        time_log_task.append('<option value={{ time_log.task.id }} selected>{{ time_log.task.name }}</option>');

        start_date_value = new Date(parseInt({{ milliseconds_since_epoch(time_log.start) }}));
        end_date_value = new Date(parseInt({{ milliseconds_since_epoch(time_log.end) }}));

        start_time_value = start_date_value;
        end_time_value = end_date_value;

    {% endif %}



    $(document).ready(function () {

        var start_time = $('#start_time');
        start_time.val(start_time_value.format('HH:MM'));
        start_time.timepicker({
            minuteStep: 1,
            showSeconds: false,
            showMeridian: false
        })

        start_time.on('change', function () {

        });

    })

    $(document).ready(function () {

        var end_time = $('#end_time');
        end_time.val(end_time_value.format('HH:MM'));
        end_time.timepicker({
            minuteStep: 1,
            showSeconds: false,
            showMeridian: false
        })

        end_time.on('change', function () {

        });

    })


    {# ***************************************************************** #}
    {# Submit Button #}
    $('#time_log_dialog_submit_button').on('click', function () {
        var time_log_form = $('#time_log_form');
        if (time_log_form.validate()) {

            $.post(
                    time_log_form.attr('action'),
                    time_log_form.serialize()+'&'+$.param({ 'start': start_date_value.toUTCString(),'end': end_date_value.toUTCString() })
            );

        }
    });

    $('#time_log_form').validate({
        errorElement: 'span',
        errorClass: 'help-inline',
        focusInvalid: true,
        rules: {
            resource_id: {
                required: true
            },
            task_id: {
                required: true
            },
            comment: {
                required: true
            }
        },

        messages: {
        },

        invalidHandler: function (event, validator) { //display error alert on form submit
            $('.alert-error', $('.login-form')).show();
        },

        highlight: function (e) {
            $(e).closest('.control-group').removeClass('info').addClass('error');
        },

        success: function (e) {
            $(e).closest('.control-group').removeClass('error').addClass('info');
            $(e).remove();
        },

        errorPlacement: function (error, element) {
            if (element.is(':checkbox') || element.is(':radio')) {
                var controls = element.closest('.controls');
                if (controls.find(':checkbox,:radio').length > 1) controls.append(error);
                else error.insertAfter(element.nextAll('.lbl:eq(0)').eq(0));
            }
            else if (element.is('.select2')) {
                error.insertAfter(element.siblings('[class*="select2-container"]:eq(0)'));
            }
            else if (element.is('.chosen-select')) {
                error.insertAfter(element.siblings('[class*="chosen-container"]:eq(0)'));
            }
            else error.insertAfter(element);
        },

        submitHandler: function (form) {
            form.submit();
        }

    });

    console.debug('finished initializing the time_log dialog!')
}
</script>

<script type="text/javascript">
    function destruct_time_log_dialog() {
        $('#time_log_dialog').data('modal', null);
    }
</script>
