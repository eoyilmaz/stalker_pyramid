<script class="dialog_loaded"></script>

<div class='row-fluid'>
    <div class="row-fluid">
        <div id="information" class="infobox-content"></div>
    </div>
    <div class="hr dotted"></div>
    <form id='time_log_form'
          class='form-horizontal'
          role='form'
          method='post'>
        <div class='row-fluid'>
            {# Task #}
            <div class='control-group'>
                <label class='span2 control-label'
                       for='timelog_tasks'>Task</label>

                <div class='span10'>
                     <select id='timelog_tasks'
                            multiple=''
                            class='input-block-level tag-input-style'
                            name='task_ids'
                            is_updating=false></select>
                </div>
            </div>

            {# Resource #}
            <div class='control-group'>
                <label class='span2 control-label'
                       for='time_log_resource'>Resource</label>

                <div class='span10'>
                    <select id='time_log_resource'
                            class='input-block-level'
                            name='resource_id'
                            required></select>
                </div>
            </div>

            {# Start & End Dates #}
            <div class="control-group">
                <label for="start_end_date_range_picker"
                       class="span2 control-label">Date</label>

                <div class="span10 input-prepend">
                    <input class="date-picker"
                           id='start_end_date_range_picker'
                           name='start_and_end_dates'
                           type="text"
                           data-date-format="dd-mm-yyyy"
                           placeholder="Start & End Dates"
                            >
                    <span class="add-on">
                        <i class="icon-calendar"></i>
                    </span>
                </div>
            </div>

            {# Start Time#}
            <div class="control-group">
                <label class='span2 control-label' for='start_time'>Start</label>

                <div class="span10 input-append bootstrap-timepicker">
                    <input id="start_time" name="start_time" type="text"
                           class="input-small"/>
                    <span class="add-on">
                        <i class="icon-time"></i>
                    </span>
                </div>
            </div>

            <div class='control-group'>
                <label class='span2 control-label'
                       for='task_schedule_timing'>Schedule Timing</label>

                <div class='span10'>
                    <div class='span2'>
                        <input id='task_schedule_timing'
                               class='input-block-level'
                               name='schedule_timing'
                               type='text'
                               value=10
                               min=1
                               required>
                    </div>
                    <div class='span4'>
                        <select id='task_schedule_unit'
                                class='input-block-level'
                                name='schedule_unit'>
                            <option value='min'>Minutes</option>
                            <option value='h'>Hours</option>
                            <option value='d'>Days</option>
                            <option value='w'>Weeks</option>
                            <option value='m'>Months</option>
                            <option value='y'>Years</option>
                        </select>
                    </div>
                </div>
            </div>

{#            <div class="row-fluid">#}
{#                <label class='span2 control-label'>#}
{#                </label>#}
{#                <div id="alert_information" class="infobox-content span10"></div>#}
{#                <div class="space-2"></div>#}
{#                <div id="percent_bar_container" class="progress progress progress-success span10" data-percent="0%">#}
{#                    <div id="percent_bar" class="bar" style="width: 0;" ></div>#}
{#                </div>#}
{#            </div>#}


            <div id="revision_type_cg" class='control-group hide'>
                <label class='span2 control-label' for='revision_type'>Revision Type</label>
                <div class='span10'>
                    <select id='revision_type'
                            class='input-block-level'
                            name='revision_type'
                            required>
                        <option value="Suresi_az">Suresi az verilmis</option>
                        <option value="Yetistiremedim">Yetistiremedim</option>
                        <option value="Ajans">Ajans</option>
                        <option value="Yonetmen">Yonetmen</option>
                        <option value="Ic_Revizyon">Ic Revizyon</option>
                    </select>
                </div>
            </div>

            {# Description #}
            <div class="control-group">
                <label class="span2 control-label" for="time_log_description">
                    Description
                </label>

                <div class="span10">
                    <textarea id="time_log_description"
                              name="description" rows="3"
                              style="width: inherit"></textarea>
                </div>
            </div>

            <div class="control-group">
                <label class="span2 control-label">Select</label>
                <div index="final_action_rb" class="span10 controls">

                    <label>
                        <input name="final_action" type="radio" class="ace" value="wip" checked="checked"/>
                        <span class="lbl" > Not Finished Yet </span>
                    </label>

                    <label>
                        <input name="final_action" type="radio" class="ace" value="force_complete"/>
                        <span class="lbl" > Set As Completed </span>
                    </label>

                    <label>
                        <input name="final_action" type="radio" class="ace" value="request_final_review"/>
                        <span class="lbl" > Submit For Final Review </span>
                    </label>
                </div>
            </div>

        </div>

    </form>

    <div class="space-5"></div>
    <div class="hr dotted"></div>
    <div class="space-5"></div>

    <div class='row-fluid'>
        {% if time_log %}
        <p>This timelog is created by <a href="/users/{{ time_log.created_by.id }}/view "> {{ time_log.created_by.name }}</a> and updated by  <a href="/users/{{ time_log.updated_by.id }}/view "> {{ time_log.updated_by.name }}</a>
                </p>
        {% endif %}
    </div>

</div>

<script src='{{ request.static_url("stalker_pyramid:static/ace/js/chosen.jquery.min.js") }}'></script>
<script src='{{ request.static_url("stalker_pyramid:static/ace/js/date-time/bootstrap-datepicker.min.js") }}'></script>
<script src='{{ request.static_url("stalker_pyramid:static/ace/js/date-time/daterangepicker.min.js") }}'></script>
<script src='{{ request.static_url("stalker_pyramid:static/ace/js/date-time/bootstrap-timepicker.min.js") }}'></script>
<script src='{{ request.static_url("stalker_pyramid:static/ace/js/jquery.autosize-min.js") }}'></script>
<script src='{{ request.static_url("stalker_pyramid:static/ace/js/jquery.inputlimiter.1.3.1.min.js") }}'></script>
<script src='{{ request.static_url("stalker_pyramid:static/ace/js/jquery.validate.min.js") }}'></script>
{#<script src='{{ request.static_url("stalker_pyramid:static/ace/js/jquery.easy-pie-chart.min.js") }}'></script>#}


<script>
function init_dialog() {
    console.debug('starting to initialize time_log dialog!!!');

{#    console.log('mode {{ mode }}')#}


    var dialog_template_label = $('#dialog_template_label');
    dialog_template_label.find('span').remove();
    dialog_template_label.append('<span>Timelog</span>');

    var submit_button = $('#dialog_template_submit_button');
    var information = $('#information');
    submit_button.attr('disabled', false);

    var submit_finalize_form_url = null;
    var status_code = '';
    var remaining_minutes_after_this_time_log_string = "";

    {# ***************************************************************** #}
    var event_dialog = $('#dialog_template');
    var start_date_value;
    if(event_dialog.attr('start') ){
        start_date_value = new Date(event_dialog.attr('start'));
    }
    else{
        start_date_value = new Date();
        event_dialog.attr('allDay', 'true');
    }

    var start_time_value = start_date_value;

    if (event_dialog.attr('allDay') == 'true') {
        start_time_value.setHours(10);
        start_time_value.setMinutes(0);
    }
    {# ***************************************************************** #}
    {# Schedule Unit and Model #}
    var task_schedule_unit = $('#task_schedule_unit');
    var task_schedule_timing = $('#task_schedule_timing');

    var time_log_form = $("#time_log_form");
    var timelog_tasks = $('#timelog_tasks');
    var time_log_resource = $('#time_log_resource');
    var parent_name = '';
    var parent = '';
    var timeout_buffer;

    information.append(
        '<span class="pull_left"><div id="message" class="alert alert-info bigger-110">' +
        '<i class="icon-exclamation-sign bigger-120 red"></i> Please select a task' +
        '</div></span>'
    );
    {# ***************************************************************** #}
    {# Resource #}
    time_log_resource.append('<option value={{ entity.id }} selected>{{ entity.name }}</option>');

    {# ***************************************************************** #}
    {# Task #}
    {% raw %}
        var task_option_template = doT.template(
            '<option value={{=it.id}}>{{=it.short_name}}</option>'
        );
    {% endraw %}


    $.getJSON('/users/{{ entity.id }}/tasks/?status=RTS&status=WIP&status=HREV&status=DREV').then(function (data) {
        // append an empty one first

        timelog_tasks.chosen({
            search_contains: true,
            enable_split_word_search: true
        });

        timelog_tasks.find('option').remove();
        timelog_tasks.append('<option value="-1">&nbsp;</option>');
        for (var i = 0; i < data.length; i++) {
            timelog_tasks.append(task_option_template(data[i]));
        }

        var selected_tasks = [];
        selected_tasks = [
                {% for task in tasks %}
                    {{ task.id }},
                {% endfor %}
            ];

        if (selected_tasks.length > 0){
            timelog_tasks.val(selected_tasks);
        }

        timelog_tasks.trigger('liszt:updated');

    });

    {# ***************************************************************** #}
    {# Get Start End  #}

    var get_start = function () {

        var date_string = $('#start_end_date_range_picker').datepicker().val().split('-');
        var start_time_string = $('#start_time').val().split(':');

        var start = new Date(
            parseInt(date_string[2]),
            parseInt(date_string[1]) - 1,
            parseInt(date_string[0]),
            parseInt(start_time_string[0]),
            parseInt(start_time_string[1]),
            0, 0
        );

        return start;
    };

    {# ***************************************************************** #}
    {# Start & End Date Picker #}
    // initialize date picker
    var start_end_date_range_picker = $('#start_end_date_range_picker');
    $('.date-picker').datepicker('setEndDate', new Date());
    start_end_date_range_picker.datepicker('setDate', start_date_value);

    $('.date-picker').datepicker().next().on(ace.click_event, function(){
                $(this).prev().focus();
            });
{#    $( "#start_end_date_range_picker" ).datepicker({maxDate: "+1M +10D" });#}

    start_end_date_range_picker.on('shown', function (e) {
        e.stopPropagation();
    });
    start_end_date_range_picker.on('hidden', function (e) {
        e.stopPropagation();
    });

    {# ***************************************************************** #}
    {# Start Time #}
    var start_time = $('#start_time');
    start_time.val(start_time_value.format('HH:MM'));
    start_time.timepicker({
        minuteStep: 10,
        showSeconds: false,
        showMeridian: false
    });


    // TODO: Change the listener action type


    {# ***************************************************************** #}
    {# Radio Select #}
    $('.controls input[type="radio"]').on('change', function(){


        submit_finalize_form_url = null;

        var final_action = $('input[name="final_action"]:checked', '.controls').val();

        switch(final_action){
            case 'force_complete':
                submit_finalize_form_url = '/tasks/force_status/CMPL';
                break;
            case 'request_final_review':
                submit_finalize_form_url = '/tasks/request_reviews?request_review_mode=Final';
                break;
            case 'wip':
                submit_finalize_form_url = null;
                break;
        }

    });

    var post_finalize_action = function () {

        console.log("post_finalize_action");

        submit_button.button('loading');
        var time_log_form = $('#time_log_form');

        $.post(
            submit_finalize_form_url,
            time_log_form.serialize()
        ).done(function (response_text) {
            refresh_page();
        }).fail(function (jqXHR) {
            bootbox.alert('<div id="message" class="alert alert-danger bigger-110">'+jqXHR.responseText+'</div>');
            refresh_page();
{#            submit_button.button('reset');#}
        });
    };

    var refresh_page = function(){

        setTimeout(function () { // wait for hide event to finish
            window.location.reload();
        }, 0);
        submit_button.button('reset');
        $('#dialog_template').modal('hide');

    };

    {# ***************************************************************** #}
    {# Submit Button #}
    submit_button.on('click', function (e) {
        e.stopPropagation();
        e.preventDefault();

        // disable the submit_button
        var time_log_form = $('#time_log_form');
        submit_button.button('loading');
        // merge end_date and end_time
        var start = get_start();

        // validate the data first
        var form_is_valid, error_messages;
        error_messages = [];
        form_is_valid = true;

        if (form_is_valid) {
            $.post(
                "/timelogs/multi/create",
                time_log_form.serialize() + '&' +
                $.param({
                    'start': start.toUTCString(),
                    'revision_type': $('#revision_type').val(),
                    'schedule_model':'effort'
                })
            ).done(function (response_text) {
                if (submit_finalize_form_url){
                    setTimeout(function () { // wait for hide event to finish
                        post_finalize_action();
                    }, 0);
                } else {
                    refresh_page();
                }
            }).fail(function (jqXHR) {
                bootbox.alert('<div id="message" class="alert alert-danger bigger-110">'+jqXHR.responseText+'</div>');
                submit_button.button('reset');
            });
        } else {
            var combined_error_messages = '';
            for (var i=0; i < error_messages.length; i++){
                combined_error_messages += error_messages[i] + '<br/>';
            }

            bootbox.alert('<div id="message" class="alert alert-danger bigger-110">' + combined_error_messages + '</div>');
            submit_button.button('reset');
        }

    });

    $('#time_log_form').validate({
        errorElement: 'span',
        errorClass: 'help-inline',
        focusInvalid: true,
        rules: {
            resource_id: {
                required: true
            },
            task_id: {
                required: true
            },
            comment: {
                required: true
            }
        },

        messages: {
        },

        invalidHandler: function (event, validator) { //display error alert on form submit
            $('.alert-error', $('.login-form')).show();
        },

        highlight: function (e) {
            $(e).closest('.control-group').removeClass('info').addClass('error');
        },

        success: function (e) {
            $(e).closest('.control-group').removeClass('error').addClass('info');
            $(e).remove();
        },

        errorPlacement: function (error, element) {
            if (element.is(':checkbox') || element.is(':radio')) {
                var controls = element.closest('.controls');
                if (controls.find(':checkbox,:radio').length > 1) controls.append(error);
                else error.insertAfter(element.nextAll('.lbl:eq(0)').eq(0));
            }
            else if (element.is('.select2')) {
                error.insertAfter(element.siblings('[class*="select2-container"]:eq(0)'));
            }
            else if (element.is('.chosen-select')) {
                error.insertAfter(element.siblings('[class*="chosen-container"]:eq(0)'));
            }
            else error.insertAfter(element);
        },

        submitHandler: function (form) {
            form.submit();
        }

    });

    console.debug('finished initializing the time_log dialog!')
}
</script>

<script type="text/javascript">
    function destruct_dialog() {
        console.debug('started un-initializing the time_log dialog!');

        $('#time_log_task').unbind();
        $('#time_log_resource').unbind();
        $('#start_end_date_range_picker').unbind();
        $('#start_time').unbind();
        $('#end_time').unbind();
        $('#dialog_template_submit_button').unbind();

        $('#dialog_template').data('modal', null);

        console.debug('finished un-initializing the time_log dialog!');
    }
</script>
