<div id='list_sequences'>
    {% if has_permission('Create_Sequence') %}
        <button id='list_sequences_create_sequence_button'>New Sequence
        </button>
    {% endif %}
    <div style='width:100%; height: 100%; position: absolute;'>
        <div id='sequences_data_grid'></div>
    </div>
</div>
<script type='text/javascript'>
    require([
        "dojo/_base/declare",
        'dojo/data/ObjectStore',
        'dojo/store/Memory',
        'dojo/store/JsonRest',

        'dijit/registry',
        'dijit/Menu',
        'dijit/MenuItem',
        'dijit/MenuSeparator',

        "dgrid/List",
        "dgrid/Grid",
        "dgrid/Selection",
        "dgrid/Keyboard",
        'dgrid/extensions/ColumnResizer',
        "dgrid/editor",

        'stalker/js/fieldUpdater',
        'stalker/js/dialogs',
        'stalker/js/dialogCaller',
        'stalker/js/dialogCreator',

        'dojo/domReady!'
    ], function (declare, ObjectStore, Memory, JsonRest, registry, Menu,
                 MenuItem, MenuSeparator, List, Grid, Selection, Keyboard,
                 ColumnResizer, editor, fieldUpdater, dialogs, dialogCaller,
                 dialogCreator) {

        var StandardGrid = declare([Grid, Selection, Keyboard, ColumnResizer]);
        var sequences_data_grid = new StandardGrid({
            id: 'sequences_data_grid',
            width: '100%',
            autoHeight: true
        }, 'sequences_data_grid');

        {% if has_permission('Create_Sequence') %}
            var create_sequence_button = dialogCaller({
                label: 'New Sequence',
                dialog_id: 'sequence_dialog',
                content_creator: dialogs.create_sequence_dialog,
                attach_to: 'list_sequences_create_sequence_button',
                related_field_updater: sequence_data_grid_updater,
                data_id: '{{ entity.id }}'
            });
            create_sequence_button.startup();
        {% endif %}


        //asset_data_grid_updater();

        var status_memory = new JsonRest({
            target: 'statuses/Sequence/'
        });

        status_memory.query().then(function (data) {
            sequence_data_grid_updater();
        });

        var sequenceData;

        function sequence_data_grid_updater() {

            var sequence_memory = new JsonRest({
                target: '{{ request.route_url('get_project_sequences', id=entity.id) }}'
            });

            sequence_memory.query().then(function (data) {

                sequenceData = data;

                var columns = [
                    {
                        label: "Thumbnail",
                        field: 'thumbnail',
                        sortable: false,
                        get: function (object) {
                            return object; // return entire item for formatter to use
                        },
                        formatter: function (object) {

                            var path = '{{ request.static_url("stalker_pyramid:static/stalker/images/Placeholder_shot.png") }}';
                            if (object.thumbnail_path) {
                                path = object.thumbnail_path;
                            }
                            return '<img width= "60px"; src="' + path + '">';

                        }
                    },
                    {
                        field: 'status',
                        label: "Status",
                        get: function (object) {
                            return object; // return entire item for formatter to use
                        },
                        formatter: function (item) {

                            var bg_color = '#' + item.status_bg_color.toString(16);
                            var fg_color = '#' + item.status_fg_color.toString(16);


                            return '<span style="color:' + bg_color + '; background-color:' + bg_color + '; ">....</span><span style="color:' + bg_color + '; ">  ' + item.status + '</span>';
                        }

                    },
                    {
                        field: 'name',
                        label: "Name",
                        get: function (object) {
                            return object; // return entire item for formatter to use
                        },
                        formatter: function (value) {
                            {% if has_permission('Read_Sequence')%}
                                var targetPane = "'sequences_content_pane'";
                                var address = "'tasks/" + value.id + "/view'";
                                return '<a href="javascript:redirectLink(' + targetPane + ',' + address + ');">' + value.name + '</a>';
                            {% else %}
                                return  value.name;
                            {% endif %}
                        }
                    },
                    {
                        field: 'user_name',
                        label: "Created By",
                        get: function (object) {
                            return object; // return entire item for formatter to use
                        },
                        formatter: function (value) {
                            {% if has_permission('Read_User')%}

                                var targetPane = "'central_content'";
                                var address = "'users/" + value.user_id + "/view'";

                                return '<a href="javascript:redirectLink(' + targetPane + ',' + address + ');">' + value.user_name + '</a>';
                            {% else %}

                                return  value.user_name;

                            {% endif %}
                        }
                    }
                ];

                sequences_data_grid.renderArray(data);
                sequences_data_grid.set('columns', columns);

                var right_click_menu = new Menu({
                    targetNodeIds: ['sequences_data_grid'],
                    selector: '.dgrid-row'
                });

                var create_update_sequence_menuItem_creator = function () {
                    return new MenuItem({
                        label: 'Update Sequence',
                        onClick: function () {
                            var node = this.getParent().currentTarget;
                            var nodeId = node.getAttribute('id');
                            var rowId = sequences_data_grid.id + '-row-';
                            var sequenceId = sequenceData[parseInt(nodeId.substring(rowId.length, nodeId.length))].id;


                            var dialog = dialogCreator({
                                dialog_id: 'sequence_dialog',
                                content_creator: dialogs.update_sequence_dialog,
                                related_field_updater: sequence_data_grid_updater,
                                data_id: sequenceId
                            });
                            dialog.show();

                        }
                    });
                };

                right_click_menu.addChild(create_update_sequence_menuItem_creator());
                right_click_menu.startup();

            });
        }
    });
</script>

