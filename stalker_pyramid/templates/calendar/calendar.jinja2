<script src='{{ request.static_url("stalker_pyramid:static/ace/js/jquery-ui-1.10.3.custom.min.js") }}'></script>
<script src='{{ request.static_url("stalker_pyramid:static/ace/js/jquery.ui.touch-punch.min.js") }}'></script>
<script src='{{ request.static_url("stalker_pyramid:static/ace/js/fullcalendar.min.js") }}'></script>
<script src='{{ request.static_url("stalker_pyramid:static/ace/js/bootbox.min.js") }}'></script>


<!--inline scripts related to this page-->

<script type="text/javascript">
    $(function () {





        {##}
        {#        /* initialize the external events#}
        {#         -----------------------------------------------------------------*/#}
        {##}
        {#        $('#external-events div.external-event').each(function () {#}
        {##}
        {#// create an Event Object (http://arshaw.com/fullcalendar/docs/event_data/Event_Object/)#}
        {#// it doesn't need to have a start or end#}
        {#            var eventObject = {#}
        {#                title: $.trim($(this).text()) // use the element's text as the event title#}
        {#            };#}
        {##}
        {#// store the Event Object in the DOM element so we can get to it later#}
        {#            $(this).data('eventObject', eventObject);#}
        {##}
        {#// make the event draggable using jQuery UI#}
        {#            $(this).draggable({#}
        {#                zIndex: 999,#}
        {#                revert: true,      // will cause the event to go back to its#}
        {#                revertDuration: 0  //  original position after the drag#}
        {#            });#}
        {##}
        {#        });#}


        $.getJSON($('#calendar').attr('address')).then(function (data) {


            var events = [];
            for (var i = 0; i < data.length; i++) {


                var start_date = new Date(parseInt(data[i].start));
                var end_date = new Date(parseInt(data[i].end));


                var event = {
                    eId: data[i].id,
                    entity_type: data[i].entity_type,
                    title: data[i].title,
                    start: start_date,
                    end: end_date,
                    className: data[i].className,
                    allDay: data[i].allDay
                };


                events.push(event);

            }




            var update_event_action = function(eType, eId){

                $('#dialog_template').modal({'remote': "/" + eType+ "/" + eId + "/update/dialog?came_from={{ request.current_route_path() }}"});

            }
            /* initialize the calendar
             -----------------------------------------------------------------*/

            var calendar = $('#calendar').fullCalendar({
                {% if event_type %}
                    {% if has_permission('Create_'+event_type) %}

                        select: function (start, end, allDay) {

                            var event_dialog = $('#dialog_template');

                            event_dialog.attr('start', start);
                            event_dialog.attr('end', end);
                            event_dialog.attr('allDay', allDay);

                            event_dialog.modal({'remote': "/{{ entity.plural_class_name.lower() }}/{{ entity.id }}/{{ event_type.lower() }}s/create/dialog?came_from={{ request.current_route_path() }}"});

                            calendar.fullCalendar('unselect');

                        },

                    {% endif %}
                {% endif %}



                eventClick: function (calEvent, jsEvent, view) {

                    if (calEvent.entity_type == 'vacations') {

                        {% if has_permission('Update_Vacation') %}

                            if (calEvent.title == 'StudioWide') {

                                {% if has_permission('Update_Studio') %}

                                  update_event_action(calEvent.entity_type, calEvent.eId);

                                {% endif %}

                            }
                            else {

                                 update_event_action(calEvent.entity_type, calEvent.eId);

                            }

                        {% endif %}

                    }
                    else if (calEvent.entity_type == 'timelogs') {

                        {% if has_permission('Update_TimeLog') %}

                             update_event_action(calEvent.entity_type, calEvent.eId);

                        {% endif %}

                    }

                },


                buttonText: {
                    prev: '<i class="icon-chevron-left"></i>',
                    next: '<i class="icon-chevron-right"></i>'
                },

                header: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'month,agendaWeek,agendaDay'
                },
                events: events,
                editable: true,
                droppable: false, // this allows things to be dropped onto the calendar !!!

                selectable: true,
                selectHelper: true



            });


        });
    });
</script>
