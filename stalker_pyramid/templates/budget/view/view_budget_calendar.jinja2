{# Stalker Pyramid a Web Base Production Asset Management System
 Copyright (C) 2009-2014 Erkan Ozgur Yilmaz

 This file is part of Stalker Pyramid.

 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free Software Foundation;
 version 2.1 of the License.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.

 You should have received a copy of the GNU Lesser General Public
 License along with this library; if not, write to the Free Software
 Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
#}


{% extends "base.jinja2" %}

{% block pre_header %}
    <link rel="stylesheet"
          href='{{ request.static_url("stalker_pyramid:static/dhtmlx/dhtmlxgantt.css") }}'/>
    <link rel="stylesheet" href='{{ request.static_url("stalker_pyramid:static/dhtmlx/skins/dhtmlx_terrace.css") }}' type="text/css" media="screen" title="no title" charset="utf-8">
{% endblock pre_header %}

{# BREADCRUMBS #}
{% block breadcrumbs %}
    {% include 'breadcrumb/breadcrumbs.jinja2' %}
{% endblock breadcrumbs %}

{#SIDEBAR#}
{% block sidebar %}
    {% include 'sidebar.jinja2' %}
{% endblock sidebar %}

{#PAGE-CONTENT#}
{% block page_content %}
    <div class="widget-box transparent invoice-box">
        {% set budget=entity %}
        {% include 'budget/view/budget_header.jinja2' %}
        <div class="widget-body">
            <div class="widget-main padding-24">
                {% set client=budget.project.client %}
                {% include 'client/view/client_info.jinja2' %}
                <div class="row-fluid">

                    <div id="gantt_here" style='width:100%; height:500px; background-color: #EFF5FD;'></div>
                </div>
                <div class="space-6"></div>
                <div class="row-fluid">
                    <button id='export_button'
                                class="btn btn-small btn-info pull-right"
                                data-placement="bottom"
                                title="Export"
                                data-keyboard="false"
                                href="#"
                                >
                        <i class="icon-save bigger-130"></i> Export</button>
                    {% if entity.type.name == 'Planning'  %}
                        <button id='save_button'
                                class="btn btn-small btn-danger pull-right"
                                data-placement="bottom"
                                title="Save"
                                data-keyboard="false"
                                href="#"
                                >
                        <i class="icon-save bigger-130"></i> Save</button>
                    {% endif %}
                </div>
            </div>
        </div>
    </div>
{% endblock page_content %}

{% block extrascripts %}
    <style type="text/css">
        html, body { height: 100%; padding:0px; margin:0px;  overflow: hidden; }
        .gantt_task_cell.week_end{
            background-color: #EFF5FD;
        }
        .gantt_task_row.gantt_selected .gantt_task_cell.week_end{
            background-color: #F8EC9C;
        }
        .fa{
            cursor: pointer;
            font-size: 14px;
            text-align: center;
            opacity: 0.2;
            padding: 5px;
        }
        .fa:hover{
            opacity: 1;
        }
        .fa-pencil{
            color: #ffa011;
        }
        .fa-plus{
            color: #328EA0;
        }
        .fa-times{
            color: red;
        }

</style>
    <script type="text/javascript">
        if("ontouchend" in document) document.write("<script src='{{ request.static_url("stalker_pyramid:static/ace/js/jquery.mobile.custom.min.js") }}'>"+"<"+"/script>");
    </script>
    <script src='{{ request.static_url("stalker_pyramid:static/jqGrid/js/i18n/grid.locale-en.js") }}'></script>
    <script src='{{ request.static_url("stalker_pyramid:static/dhtmlx/dhtmlxgantt.js") }}'></script>
    <script src='{{ request.static_url("stalker_pyramid:static/moment/moment.min.js") }}'></script>

    <script type="text/javascript">


        var clickGridButton = function (id, action) {
                switch (action) {
                    case "edit":
                        gantt.showLightbox(id);
                        break;
                    case "add":
                        gantt.createTask(null, id);
                        break;
                    case "delete":
                        dhtmlx.confirm({
                            title: gantt.locale.labels.confirm_deleting_title,
                            text: gantt.locale.labels.confirm_deleting,
                            callback: function(res){
                                if(res)
                                    gantt.deleteTask(id);
                            }
                        });
                        break;
                }
            };
        $(document).ready(function () {
            gantt.config.auto_scheduling = true;
            gantt.config.work_time = true;
            gantt.config.scale_unit = "day";
            gantt.config.date_scale = "%D, %d";
            gantt.config.min_column_width = 60;
            gantt.config.duration_unit = "day";
            gantt.config.scale_height = 20*3;
            gantt.config.row_height = 30;
            gantt.config.grid_width = 450;
            gantt.setWorkTime({day : 6, hours : [8,12]});

            var weekScaleTemplate = function(date){
                var dateToStr = gantt.date.date_to_str("%d %M");
                var weekNum = gantt.date.date_to_str("(week %W)");
                var endDate = gantt.date.add(gantt.date.add(date, 1, "week"), -1, "day");
                return dateToStr(date) + " - " + dateToStr(endDate) + " " + weekNum(date);
            };

            gantt.config.subscales = [
                {unit:"month", step:1, date:"%F, %Y"},
                {unit:"week", step:1, template:weekScaleTemplate}
            ];

            gantt.templates.task_cell_class = function(task, date){
                if(!gantt.isWorkTime(date))
                    return "week_end";
                return "";
            };

            var colHeader = '<div class="gantt_grid_head_cell gantt_grid_head_add" onclick="gantt.createTask()"></div>',
                colContent = function(task){
                        return ('<i class="fa gantt_button_grid gantt_grid_edit icon-pencil" onclick="clickGridButton('+task.id+', \'edit\')"></i>' +
                                '<i class="fa gantt_button_grid gantt_grid_delete icon-trash" onclick="clickGridButton('+task.id+', \'delete\')"></i>');
                    };

            gantt.config.columns = [
                {name:"text", label:"Task name", width:"*", tree:true },
                {name:"duration", label:"Duration", align:"center", width:55},
                {name:"resources", label:"Resource", align:"center", width:65},
                {
                    name:"buttons",
                    label:colHeader,
                    resize:true,
                    template:colContent,
                    width:60
                }
            ];

            var project_start = moment('{{ entity.project.start }}');
            var project_end = moment('{{ entity.project.end }}');
            var duration = project_end.diff(project_start, 'days');
            var tasks = {
                  data:[
                        {
                            id:"p_1",
                            text:"{{ entity.project.name }}",
                            start_date:"01-08-2015",
                            duration:25,
                            resources:5,
                            open:true
                        }
                   ]
                };
            var tasks_data_string = '{{entity.generic_text  }}';
            var task_data = tasks_data_string.split('&amp;');

            for (var i=0; i<task_data.length;i++){
                var props = task_data[i].split('-');

                var task = {};
                for (var j=0; j<props.length;j++){
                    var prop = props[j].split('_');
                    task[prop[0]] = prop[1];
                }
                task.start_date = (moment(parseInt(task.sdate))).format('DD MM YYYY');
                task.parent = 'p_1';
                task.good = task.text+'/-/'+task.good;
                tasks.data.push(task);
            }

            $.getJSON('/goods/').then(function (good_data) {

                var lightBox_goods =[];
                for(var m=0; m<good_data.length; m++ ){
                    if (good_data[m].unit == 'HOUR' || good_data[m].unit == 'DAY' ){
                        lightBox_goods.push({key:good_data[m].name+'/-/'+good_data[m].id, label: good_data[m].name});
                    }
                }
                var resource_number_options = [];
                for (var k=0; k<11;k++){
                    resource_number_options.push({key:k,label:k});
                }

                gantt.config.lightbox.sections = [
                    {name: "good", height: 22, map_to: "good", type: "select", options: lightBox_goods},
                    {name: "resources", height: 22, map_to: "resources", type: "select", options: resource_number_options},
                    {name: "time", type: "duration", map_to: "auto"}
                ];

                gantt.locale.labels["section_good"] = "Good";
                gantt.locale.labels["section_resources"] = "Resources";
                gantt.init("gantt_here", new Date(2015,3,1), new Date(2015,11,1));
                gantt.parse(tasks);

                gantt.attachEvent("onLightboxSave", function(id, task, is_new){
                    task.text = task.good.split('/-/')[0];
                    if(is_new){
                        task.parent = 'p_1';
                    }
                    return true;
                });
            });

            $('#save_button').on('click', function (e) {
                e.preventDefault();
                e.stopPropagation();

                var children = gantt.getChildren('p_1');
                var _query ='type=Calendar';
                for(var i=0;i<children.length;i++){
                    var task = gantt.getTask(children[i]);
                    var good= task.good.split('/-/')[1];
                    var sdate= (new Date(task.start_date)).getTime();
                    var duration = task.duration;

                    _query +='&budgetentries_data=id_'+task.id+'-text_'+task.text+'-good_'+good+'-sdate_'+sdate+'-duration_'+duration+'-resources_'+task.resources;
                }
                console.log(_query);
                $.post('/budgets/{{entity.id}}/save/calendar?'+_query).done(function (response_text) {
                        window.location.reload();
                    }).fail(function (jqXHR) {
                        bootbox.alert(jqXHR.responseText);
                    });

            });
            $('#export_button').on('click', function (e) {
                e.preventDefault();
                e.stopPropagation();

                gantt.exportToPDF();


            });

        });
    </script>
{% endblock extrascripts %}
