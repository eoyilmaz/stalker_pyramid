{# Stalker Pyramid a Web Base Production Asset Management System
 Copyright (C) 2009-2014 Erkan Ozgur Yilmaz

 This file is part of Stalker Pyramid.

 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free Software Foundation;
 version 2.1 of the License.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.

 You should have received a copy of the GNU Lesser General Public
 License along with this library; if not, write to the Free Software
 Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
#}


{% extends "base.jinja2" %}

{% block pre_header %}
    <link rel="stylesheet"
          href='{{ request.static_url("stalker_pyramid:static/dhtmlx/dhtmlxgantt.css") }}'/>
{% endblock pre_header %}

{# BREADCRUMBS #}
{% block breadcrumbs %}
    {% include 'breadcrumb/breadcrumbs.jinja2' %}
{% endblock breadcrumbs %}

{#SIDEBAR#}
{% block sidebar %}
    {% include 'sidebar.jinja2' %}
{% endblock sidebar %}

{#PAGE-CONTENT#}
{% block page_content %}

{#    {% set page_title=entity.name %}#}
{#    {% include 'page_header.jinja2' %}#}

    <div class="space-6"></div>
    <div class="row-fluid">
        <div class="span12">
            <div class="widget-box transparent invoice-box">
                <div class="widget-header widget-header-large">
                    {% set client=entity.project.client %}
                    {% include 'client/view/client_card.jinja2' %}
                    <h3 class="grey lighter pull-left position-relative">
                        {{  entity.project.client.name }}
                    </h3>

                    <div class="widget-toolbar no-border invoice-info">
                        <span class="invoice-info-label">Bugdet:</span>
                        <span class="red">{{ entity.name }}</span>
                        <br />
                        <span class="invoice-info-label">Date:</span>
                        <span class="blue">{{ entity.date_updated }}</span>
                    </div>

                    <div class="widget-toolbar hidden-480">
                        <a href="#">
                            <i class="icon-print"></i>
                        </a>
                    </div>
                </div>

                <div class="widget-body">
                    <div class="widget-main padding-24">

                        <div class="row-fluid">
                            <div id="gantt_here" style='width:100%; height:300px;'></div>
                        </div>
                        <div class="space"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock page_content %}

{% block extrascripts %}
    <style type="text/css">
        html, body { height: 100%; padding:0px; margin:0px; overflow: hidden; }
        .gantt_task_cell.week_end{
            background-color: #EFF5FD;
        }
        .gantt_task_row.gantt_selected .gantt_task_cell.week_end{
            background-color: #F8EC9C;
        }
        .fa{
            cursor: pointer;
            font-size: 14px;
            text-align: center;
            opacity: 0.2;
            padding: 5px;
        }
        .fa:hover{
            opacity: 1;
        }
        .fa-pencil{
            color: #ffa011;
        }
        .fa-plus{
            color: #328EA0;
        }
        .fa-times{
            color: red;
        }

</style>
    <script type="text/javascript">
        if("ontouchend" in document) document.write("<script src='{{ request.static_url("stalker_pyramid:static/ace/js/jquery.mobile.custom.min.js") }}'>"+"<"+"/script>");
    </script>
    <script src='{{ request.static_url("stalker_pyramid:static/jqGrid/js/i18n/grid.locale-en.js") }}'></script>
    <script src='{{ request.static_url("stalker_pyramid:static/jqGrid/js/jquery.jqGrid.js") }}'></script>
    <script src='{{ request.static_url("stalker_pyramid:static/stalker/js/accounting.min.js") }}'></script>
    <script src='{{ request.static_url("stalker_pyramid:static/dhtmlx/dhtmlxgantt.js") }}'></script>

    <script type="text/javascript">


        var clickGridButton = function (id, action) {
                switch (action) {
                    case "edit":
                        gantt.showLightbox(id);
                        break;
                    case "add":
                        gantt.createTask(null, id);
                        break;
                    case "delete":
                        dhtmlx.confirm({
                            title: gantt.locale.labels.confirm_deleting_title,
                            text: gantt.locale.labels.confirm_deleting,
                            callback: function(res){
                                if(res)
                                    gantt.deleteTask(id);
                            }
                        });
                        break;
                }
            };
        $(document).ready(function () {
            gantt.config.auto_scheduling = true;
            gantt.config.work_time = true;
            gantt.config.scale_unit = "day";
            gantt.config.date_scale = "%D, %d";
            gantt.config.min_column_width = 60;
            gantt.config.duration_unit = "day";
            gantt.config.scale_height = 20*3;
            gantt.config.row_height = 30;
            gantt.config.grid_width = 390;
            gantt.setWorkTime({day : 6, hours : [8,12]});

            var weekScaleTemplate = function(date){
                var dateToStr = gantt.date.date_to_str("%d %M");
                var weekNum = gantt.date.date_to_str("(week %W)");
                var endDate = gantt.date.add(gantt.date.add(date, 1, "week"), -1, "day");
                return dateToStr(date) + " - " + dateToStr(endDate) + " " + weekNum(date);
            };

            gantt.config.subscales = [
                {unit:"month", step:1, date:"%F, %Y"},
                {unit:"week", step:1, template:weekScaleTemplate}

            ];

            gantt.templates.task_cell_class = function(task, date){
                if(!gantt.isWorkTime(date))
                    return "week_end";
                return "";
            };

            var colHeader = '<div class="gantt_grid_head_cell gantt_grid_head_add" onclick="gantt.createTask()"></div>',
                colContent = function(task){
                        return ('<i class="fa gantt_button_grid gantt_grid_edit icon-pencil" onclick="clickGridButton('+task.id+', \'edit\')"></i>' +
                                '<i class="fa gantt_button_grid gantt_grid_delete icon-trash" onclick="clickGridButton('+task.id+', \'delete\')"></i>');
                    };

{#            gantt.config.columns = [#}
{#                {name:"text", tree:false, width:'*',align: "center" , resize:true },#}
{#                {name:"duration", align: "center" },#}
{#                {#}
{#                    name:"buttons",#}
{#                    label:colHeader,#}
{#                    resize:true,#}
{#                    template:colContent#}
{#                }#}
{#            ];#}
            gantt.config.columns = [
                {name:"text", label:"Task name", width:"*", tree:true },
                {name:"start_time", label:"Start time", template:function(obj){
                    return gantt.templates.date_grid(obj.start_date);
                }, align: "center", width:70 },
                {name:"duration", label:"Duration", align:"center", width:40},
                {
                    name:"buttons",
                    label:colHeader,
                    resize:true,
                    template:colContent,
                    width:60
                }
            ];



            $.getJSON('/studios/{{ entity.id }}/goods/').then(function (good_data) {

                var lightBox_goods =[];
                for(var m=0; m<good_data.length; m++ ){
                    lightBox_goods.push({key:good_data[m].name+'/-/'+good_data[m].id, label: good_data[m].name});
                }
                gantt.config.lightbox.sections = [
                        {name: "good", height: 22, map_to: "good", type: "select", options: lightBox_goods},
                        {name: "time", type: "duration", map_to: "auto"}
                ];
                gantt.locale.labels["section_good"] = "Good";
                gantt.init("gantt_here");

                gantt.attachEvent("onLightboxSave", function(id, task, is_new){
                    task.text = task.good.split('/-/')[0];
                    gantt.autoSchedule();
                    gantt.render();
                    return true;
                });
            });
        });
    </script>
{% endblock extrascripts %}
