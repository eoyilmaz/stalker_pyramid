{# Stalker Pyramid a Web Base Production Asset Management System
 Copyright (C) 2009-2014 Erkan Ozgur Yilmaz

 This file is part of Stalker Pyramid.

 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free Software Foundation;
 version 2.1 of the License.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.

 You should have received a copy of the GNU Lesser General Public
 License along with this library; if not, write to the Free Software
 Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
#}


{% extends "base.jinja2" %}

{% block pre_header %}

{% endblock pre_header %}

{# BREADCRUMBS #}
{% block breadcrumbs %}
    {% include 'breadcrumb/breadcrumbs.jinja2' %}
{% endblock breadcrumbs %}

{#SIDEBAR#}
{% block sidebar %}
    {% include 'sidebar.jinja2' %}
{% endblock sidebar %}

{#PAGE-CONTENT#}
{% block page_content %}

{#    {% set page_title=entity.name %}#}
{#    {% include 'page_header.jinja2' %}#}

    <div class="space-6"></div>
    <div class="row-fluid">
        <div class="span10 offset1">
            <div class="widget-box transparent invoice-box">
                <div class="widget-header widget-header-large">
                    {% set client=entity.project.client %}
                    {% include 'client/view/client_card.jinja2' %}
                    <h3 class="grey lighter pull-left position-relative">
                        {{  entity.project.client.name }}
                    </h3>

                    <div class="widget-toolbar no-border invoice-info">
                        <span class="invoice-info-label">Bugdet:</span>
                        <span class="red">{{ entity.name }}</span>
                        <br />
                        <span class="invoice-info-label">Date:</span>
                        <span class="blue">{{ entity.date_updated }}</span>
                    </div>

                    <div class="widget-toolbar hidden-480">
                        <a href="#">
                            <i class="icon-print"></i>
                        </a>
                    </div>
                </div>

                <div class="widget-body">
                    <div class="widget-main padding-24">
                        <div class="row-fluid">
                            <div class="span6">
                                <button id='add_project_entries_to_budget_button'
                                        class="btn btn-small btn-info hide"
                                        data-placement="bottom"
                                        data-target="#dialog_template"
                                        data-toggle="modal"
                                        data-keyboard="false"
                                        >
                                    <i class="icon-refresh bigger-130"></i>Get
                                    Calendar Data </button>
                                <button id='duplicate_budget_button'
                                        class="btn btn-small btn-success"
                                        data-placement="bottom"
                                        data-target="#dialog_template"
                                        data-toggle="modal"
                                        data-keyboard="false"
                                        href="{{ request.route_url("duplicate_budget_dialog", id=entity.id)}}"
                                        >
                                    <i class="icon-copy bigger-130"></i>Duplicate Budget</button>
                            </div>
                            <div class="span6 ">
                                <div class="pull-right">
                                    <span class="label label-large"> {{ entity.type.name }}</span>
                                    <div class="inline position-relative">
                                        <button class="btn btn-minier bigger dropdown-toggle"
                                                data-toggle="dropdown">
                                            <i class="icon-angle-down icon-only bigger-120"></i>
                                        </button>
                                        <ul class="dropdown-menu dropdown-icon-only dropdown-yellow pull-right dropdown-caret dropdown-close">
                                            <li>
                                                <a href="/budgets/{{entity.id}}/type/APPROVED/dialog?came_from={{ request.current_route_path() }}"
                                                   class="tooltip-success"
                                                   data-target="#dialog_template"
                                                   data-toggle="modal"
                                                   data-keyboard=false
                                                   data-placement="top">
                                                       <span class="status_cmpl-text">
                                                           <i class="icon-ok bigger-110"></i>APPROVED
                                                       </span>
                                                </a>
                                            </li>
                                            <li>
                                                <a href="/budgets/{{entity.id}}/type/REJECTED/dialog?came_from={{ request.current_route_path() }}"
                                                   class="tooltip-success"
                                                   data-target="#dialog_template"
                                                   data-toggle="modal"
                                                   data-keyboard=false
                                                   data-placement="top">
                                                       <span class="status_stop-text">
                                                           <i class="icon-stop bigger-110"></i>REJECTED
                                                       </span>
                                                </a>
                                            </li>
                                            <li>
                                                <a href="/budgets/{{entity.id}}/type/CALENDER FIXED/dialog?came_from={{ request.current_route_path() }}"
                                                   class="tooltip-success"
                                                   data-target="#dialog_template"
                                                   data-toggle="modal"
                                                   data-keyboard=false
                                                   data-placement="top">
                                                       <span class="status_oh-text">
                                                           <i class="icon-pause bigger-110"></i>CALENDER FIXED
                                                       </span>
                                                </a>
                                            </li>
                                            <li>
                                                <a href="/budgets/{{entity.id}}/type/CLOSED/dialog?came_from={{ request.current_route_path() }}"
                                                   class="tooltip-success"
                                                   data-target="#dialog_template"
                                                   data-toggle="modal"
                                                   data-keyboard=false
                                                   data-placement="top">
                                                       <span class="wip-text">
                                                           <i class="icon-play bigger-110">CLOSED</i>
                                                       </span>
                                                </a>
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                            </div>

                        </div>

                        <div class="space"></div>

                        <div class="row-fluid">
                            <table id="grid-table"></table>
{#                                <div id="grid-pager"></div>#}
                            <script type="text/javascript">
                                var $path_base = "/";//this will be used in gritter alerts containing images
                            </script>
                        </div>

                        <div class="hr hr8 hr-double hr-dotted"></div>

                        <div class="row-fluid">
                            <div class="span5 pull-right">
                                <h4 class="pull-right">
                                    Total amount :
                                    <span class="red" id="total_price"></span>
                                </h4>
                            </div>
                        </div>

                        <div class="space-6"></div>

                        <div class="row-fluid">
                            <div class="row-fluid">
                                <div class="span6">
                                    <div class="row-fluid">
                                        <div class="span12 label label-large label-success arrowed-in arrowed-right">
                                            <b>Client Info</b>
                                        </div>
                                    </div>
                                    <div class="row-fluid">
                                        <ul class="unstyled spaced">
                                            {% for user_role in  client.user_role %}
                                            <li>
                                                <i class="icon-caret-right blue"></i>
                                                {{ user_role.user.name }},  {{ user_role.role.name }}
                                            </li>
                                            {% endfor %}
                                        </ul>
                                    </div>
                                </div><!--/span-->
                                <div class="span6">
                                    <div class="row-fluid">
                                        <button id='send_button'
                                                class="btn btn-small btn-danger pull-right"
                                                data-placement="bottom"
                                                title="Send to Client"
                                                data-target="#dialog_template"
                                                data-toggle="modal"
                                                data-keyboard="false"
                                                href="#"
                                                >
                                        <i class="icon-envelope bigger-130"></i> Send to Client</button>
                                    </div>
                                </div><!--/span-->
                            </div>
                        </div>
                    </div>
            </div>
            </div>
        </div>
    </div>
{% endblock page_content %}

{% block extrascripts %}
    <script type="text/javascript">
			if("ontouchend" in document) document.write("<script src='{{ request.static_url("stalker_pyramid:static/ace/js/jquery.mobile.custom.min.js") }}'>"+"<"+"/script>");
		</script>
    <script src='{{ request.static_url("stalker_pyramid:static/jqGrid/js/i18n/grid.locale-en.js") }}'></script>
    <script src='{{ request.static_url("stalker_pyramid:static/jqGrid/js/jquery.jqGrid.js") }}'></script>
    <script src='{{ request.static_url("stalker_pyramid:static/stalker/js/accounting.min.js") }}'></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('#add_project_entries_to_budget_button').hide();


            $.getJSON('/budgets/{{ entity.id }}/entries/').then(function (entry_data) {

                var grid_data = entry_data;
                var total_cost = 0;
                var total_msrp = 0;
                var total_price = 0;

                for(var j=0; j<grid_data.length; j++ ){
                    grid_data[j].msrp = grid_data[j].msrp*grid_data[j].amount;
                    total_msrp += parseInt(grid_data[j].msrp);
                    grid_data[j].cost = grid_data[j].cost*grid_data[j].amount;
                    total_cost += parseInt(grid_data[j].cost);
                    total_price += parseInt(grid_data[j].price);
                }
                $('#total_price').text(accounting.formatMoney(total_price, { symbol: "TL",  format: "%v %s" }));
                {% if entity.type.name == 'Planning'  %}
                    $('#add_project_entries_to_budget_button').show();
                    $('#add_project_entries_to_budget_button').on('click', function (e) {
                        e.preventDefault();
                        e.stopPropagation();

                        $.post('{{ request.route_url("add_project_entries_to_budget", id=entity.project.id, bid=entity.id)}}').done(function (response_text) {
                            window.location.reload();
                        }).fail(function (jqXHR) {
                            bootbox.alert(jqXHR.responseText);
                        });
                    });

                    $.getJSON('/studios/{{ entity.id }}/goods/').then(function (good_data) {

                        for(var k=0; k<good_data.length; k++ ){

                            var add_grid_data = true;
                            for(var m=0; m<grid_data.length; m++ ){
                                if(good_data[k].name == grid_data[m].name ){
                                    add_grid_data = false;
                                }
                            }
                            if(add_grid_data){
                                grid_data.push({    'budget_id': '{{ entity.id }}',
                                                    'good_id':good_data[k].id,
                                                    'id':good_data[k].id,
                                                    'type':good_data[k].price_list_name,
                                                    'name':good_data[k].name,
                                                    'amount':0,
                                                    'unit':good_data[k].unit,
                                                    'msrp':0,
                                                    'cost':0,
                                                    'realized Total':0,
                                                    'price':0,
                                                    'note':'',
                                                    'addition_type':'-----------'})
                            }
                        }
                        jQuery(function($) {
                            var grid_selector = "#grid-table";

                            jQuery(grid_selector).jqGrid({
                                //direction: "rtl",
                                data: grid_data,
                                datatype: "local",
                                colNames:[' ',  'Addition Type', 'Type', 'Name','Amount', 'Unit', 'Msrp', 'Cost',  'Price', 'Id','Notes'],
                                colModel:[
                                    {
                                        name:'myac',
                                        index:'',
                                        width:80,
                                        fixed:true,
                                        sortable:false,
                                        resize:false,
                                        formatter:'actions',
                                        formatoptions:{
                                                    keys:false,
                                                    delbutton:true,
                                                    delOptions:{recreateForm: true, beforeShowForm:beforeDeleteCallback}
                                                }
                                    },
                                    {name:'addition_type', index:'addition_type', width:100, editable: false},
                                    {name:'type', index:'type', width:220, editable: false},
                                    {name:'name', index:'name', width:220, editable: false},
                                    {name:'amount', index:'amount', width:60, editable: true, formatter:editFmatter},
                                    {name:'unit', index:'unit', width:100, editable: false},
                                    {name:'msrp', index:'msrp', width:150, editable: false, formatter:currencyFmatter, summaryTpl: "{0}", summaryType: "sum" },
                                    {name:'cost', index:'cost', width:150, editable: false, formatter:currencyFmatter, summaryTpl: "{0}", summaryType: "sum" },
    {#                                {name:'realized_total',index:'realized_total',  width:150, editable: false,formatter:currencyFmatter, summaryTpl: "{0}", summaryType: "sum" },#}
                                    {name:'price', index:'price', width:150, editable: true, edittype:"textarea", editoptions:{size:"20",maxlength:"80"} , formatter:currencyFmatter, unformat:unformatCurrency, summaryTpl: "{0}", summaryType: "sum" },
                                    {name:'id', index:'id', width:82, editable: false },
                                    {name:'note', index:'note', width:200, sortable:false, editable: true, edittype:"textarea", editoptions:{size:"20", maxlength:"80"}}
                                ],
                                viewrecords : true,
                                rowNum:grid_data.length,
                                rowList:[grid_data.length, 10, 10],
                                pager : false,
                                altRows: true,
                                multiselect: false,
                                loadonce: true,
                                sortname: 'type',
                                height: 700,
                                footerrow: true, // set a footer row
                                userDataOnFooter: true, // the calculated sums and/or strings from server are put at footer row.
                                grouping: true,
                                groupingView: {
                                    groupField: ["addition_type"],
                                    groupColumnShow: [false],
                                    groupText: ["<b>{0}</b>"],
                                    groupOrder: ["desc"],
                                    groupSummary: [true],
                                    groupCollapse: false
                                },
                                gridview: true,
                                editurl: '/budgetentries/edit?budget_id={{ entity.id }}',
                                caption: "",
                                onSelectRow: function(id){

                                            var ret = jQuery(grid_selector).jqGrid('getRowData',id);
                                    console.log(ret.addition_type)
                                            if (ret.addition_type == 'Calendar')
                                             {
                                                jQuery(grid_selector).setColProp('amount',{editable:false});}
                                            else {  jQuery(grid_selector).setColProp('amount',{editable:true});}},
                                loadComplete : function() {
                                    var $self = $(this);
                                    $self.jqGrid("footerData", "set", {
                                                                       msrp: total_msrp,
                                                                       cost: total_cost,
                                                                       price: total_price,
                                                                       unit:'TOTAL'
                                    });

                                    if(total_cost>total_price){
                                        $self.jqGrid('setCell', 'TOTAL', 'price','',{color:'red'});
                                    }
                                    else if(total_cost<total_price){
                                        $self.jqGrid('setCell', 'TOTAL', 'price','',{color:'green'});
                                    }

                                    for(var t=0; t<grid_data.length; t++ ){
                                        if(grid_data[t].cost>grid_data[t].price){
                                            $self.jqGrid('setCell', grid_data[t].id, 'price','',{color:'red'});
                                        }
                                        else if(grid_data[t].cost<grid_data[t].price){
                                            $self.jqGrid('setCell', grid_data[t].id, 'price','',{color:'green'});
                                        }
                                    }

                                    $self.jqGrid('hideCol',["id"]);

                                    var table = this;
                                    setTimeout(function(){
    {#                                    styleCheckbox(table);#}
    {#                                    updateActionIcons(table);#}
    {#                                    updatePagerIcons(table);#}

                                        $('#lui_grid-table').hide();
                                    }, 0);
                                }
                            });

                        });
                    });
                {% else  %}

                    $('#send_button').hide();

                    jQuery(function($) {
                        var grid_selector = "#grid-table";

                        jQuery(grid_selector).jqGrid({
                            //direction: "rtl",
                            data: grid_data,
                            datatype: "local",
                            colNames:['Addition Type', 'Type', 'Name','Amount', 'Unit', 'Msrp', 'Cost',  'Price', 'Id','Notes'],
                            colModel:[
                                {name:'addition_type', index:'addition_type', width:100, editable: false},
                                {name:'type', index:'type', width:220, editable: false},
                                {name:'name', index:'name', width:220, editable: false},
                                {name:'amount', index:'amount', width:60, editable: false, formatter:editFmatter},
                                {name:'unit', index:'unit', width:100, editable: false},
                                {name:'msrp', index:'msrp', width:150, editable: false, formatter:currencyFmatter, summaryTpl: "{0}", summaryType: "sum" },
                                {name:'cost', index:'cost', width:150, editable: false, formatter:currencyFmatter, summaryTpl: "{0}", summaryType: "sum" },
{#                                {name:'realized_total',index:'realized_total',  width:150, editable: false,formatter:currencyFmatter, summaryTpl: "{0}", summaryType: "sum" },#}
                                {name:'price', index:'price', width:150, editable: false, edittype:"textarea", editoptions:{size:"20",maxlength:"80"} , formatter:currencyFmatter, unformat:unformatCurrency, summaryTpl: "{0}", summaryType: "sum" },
                                {name:'id', index:'id', width:82, editable: false },
                                {name:'note', index:'note', width:200, sortable:false, editable: false, edittype:"textarea", editoptions:{size:"20", maxlength:"80"}}
                            ],
                            viewrecords : true,
                            rowNum:grid_data.length,
                            rowList:[grid_data.length, 10, 10],
                            pager : false,
                            altRows: true,
                            multiselect: false,
                            loadonce: true,
                            height: 700,
                            sortname: 'type',
                            footerrow: true, // set a footer row
                            userDataOnFooter: true, // the calculated sums and/or strings from server are put at footer row.
                            grouping: true,
                            groupingView: {
                                groupField: ["addition_type"],
                                groupColumnShow: [false],
                                groupText: ["<b>{0}</b>"],
                                groupOrder: ["desc","desc","desc"],
                                groupSummary: [true],
                                groupCollapse: false
                            },
                            gridview: true,
                            editurl: '/budgetentries/edit?budget_id={{ entity.id }}',
                            caption: "",
                            loadComplete : function() {
                                var $self = $(this);
                                $self.jqGrid("footerData", "set", {
                                                                   msrp: total_msrp,
                                                                   cost: total_cost,
                                                                   price: total_price,
                                                                   unit:'TOTAL'
                                });

                                if(total_cost>total_price){
                                    $self.jqGrid('setCell', 'TOTAL', 'price','',{color:'red'});
                                }
                                else if(total_cost<total_price){
                                    $self.jqGrid('setCell', 'TOTAL', 'price','',{color:'green'});
                                }
                                console.log('asdasdasd');
                                for(var t=0; t<grid_data.length; t++ ){
                                    console.log(grid_data[t].cost);

                                    if(grid_data[t].cost>grid_data[t].price){
                                        $self.jqGrid('setCell', grid_data[t].id, 'price','',{color:'red'});
                                    }
                                    else if(grid_data[t].cost<grid_data[t].price){
                                        $self.jqGrid('setCell', grid_data[t].id, 'price','',{color:'green'});
                                    }

{#                                    if(grid_data[t].addition_type == 'Calendar'){#}
{#                                        console.log($self.jqGrid('getCell', grid_data[t].id, 'amount'));#}
{#                                        $self.jqGrid('getCell', grid_data[t].id, 'amount').attr('disabled', true);#}
{#                                    }#}
                                }

                                $self.jqGrid('hideCol',["id"]);

                                var table = this;
                                setTimeout(function(){
{#                                    styleCheckbox(table);#}
{#                                    updateActionIcons(table);#}
{#                                    updatePagerIcons(table);#}

                                    $('#lui_grid-table').hide();
                                }, 0);
                            }
                    });
                    });
                {% endif %}

                function rowAddTypeFmatter(cellvalue, options, rowObject){
                            return rowObject.addition_type;
                        }

                        function editFmatter(cellvalue, options, rowObject){
                            console.log(cellvalue);
                            console.log(options);
                            console.log(rowObject);
{#                            if(rowObject.addition_type == 'Calendar'){#}
{#                                options.colModel.editable = false;#}
{#                            }#}

                            return cellvalue;
                        }

                        function currencyFmatter (cellvalue, options, rowObject)
                        {
                           return accounting.formatMoney(cellvalue, { symbol: "TL",  format: "%v %s" });
                        }

                        function  unformatCurrency (cellvalue, options)
                        {
                           return accounting.unformat(cellvalue);
                        }
            function beforeDeleteCallback(e) {
                        var form = $(e[0]);
                        if(form.data('styled')) return false;

                        form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
{#                        style_delete_form(form);#}

                        form.data('styled', true);
                    }
            function beforeEditCallback(e) {
                        var form = $(e[0]);
                        if(form.data('styled')) return false;

                        form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
{#                        style_delete_form(form);#}

                        form.data('styled', true);
                    }
            });




        });
    </script>
{% endblock extrascripts %}
