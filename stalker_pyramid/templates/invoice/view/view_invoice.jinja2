{% extends "base.jinja2" %}


{# BREADCRUMBS #}
{% block breadcrumbs %}
    {% include 'breadcrumb/breadcrumbs.jinja2' %}
{% endblock breadcrumbs %}

{#SIDEBAR#}
{% block sidebar %}
    {% include 'sidebar.jinja2' %}
{% endblock sidebar %}

{#PAGE-CONTENT#}
{% block page_content %}

    <div class="widget-box transparent invoice-box">
       {% set invoice=entity %}
       {% include 'invoice/view/invoice_header.jinja2' %}
        <div class="widget-body">
            <div class="widget-main padding-24">
                <div class="row-fluid">
                    <div class="span12">
                        <h4>
                            Total cost :
                            <span id="total_cost_top">{{ entity.amount }} {{ entity.unit }}</span>
                        </h4>


                    </div>
                </div>
                <div class="widget-box span7">
                    <div class="widget-header widget-header-small header-color-payment">
                        <h5 id="items_header" class="smaller">PAYMENTS</h5>
                        <div class="widget-toolbar">
                            <a data-target="#dialog_template"
                                   data-toggle="modal"
                                   data-keyboard=false
                                   href="/payments/create/dialog?invoice_id={{entity.id}}"
                                   class="white">
                                    <i class="icon-plus"></i>
                                    New Payment
                                </a>

                        </div>
                    </div>
                    <div class="widget-body">
                        <div class="widget-main" style="padding: 0px">
                            <div class="row-fluid">
                                <table id="grid-table"></table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock page_content %}

{% block extrascripts %}
    <script type="text/javascript">
        if("ontouchend" in document) document.write("<script src='{{ request.static_url("stalker_pyramid:static/ace/js/jquery.mobile.custom.min.js") }}'>"+"<"+"/script>");
    </script>
    <script src='{{ request.static_url("stalker_pyramid:static/jqGrid/js/i18n/grid.locale-en.js") }}'></script>
    <script src='{{ request.static_url("stalker_pyramid:static/jqGrid/js/jquery.jqGrid.js") }}'></script>
    <script src='{{ request.static_url("stalker_pyramid:static/stalker/js/accounting.min.js") }}'></script>
    <script src='{{ request.static_url("stalker_pyramid:static/codebase/dhtmlxgantt.js") }}'></script>
    <link src='{{ request.static_url("stalker_pyramid:static/jqGrid/css/ui.jqgrid-bootstrap.css") }}'/>
    <script>
        $.jgrid.defaults.autowidth = true;
        $.jgrid.defaults.responsive = true;
        $.jgrid.defaults.styleUI = 'Bootstrap';
    </script>
    <script type="text/javascript">
        $(document).ready(function () {

            $('#add_project_entries_to_invoice_button').hide();

            var grid_data;

            var grid_selector = "#grid-table";
            var grid = jQuery(grid_selector);
            var total_payment = 0;
            var lastSelection = -1;



            function unitFmatter (cellvalue, options, rowObject){
                var index = findArrayElement(grid_data,'id', options.rowId);
                if (index!=-1){
                    return grid_data[index].amount+" "+ grid_data[index].unit;
                }
                else{
                    return cellvalue
                }
            }

            function  unformatUnit (cellvalue, options, rowObject){
                var index = findArrayElement(grid_data,'id', options.rowId);
                return grid_data[index].amount;
            }

            function editRow(id) {
                if (id && id !== lastSelection) {

                    grid.restoreRow(lastSelection);
                    var editParameters = {
                        keys: true,
                        successfunc: editSuccessful,
                        errorfunc: editFailed,
                        restoreAfterError : false
                    };

                    grid.jqGrid('editRow', id, editParameters);
                    lastSelection = id;
                }
            }
            function getCellValue(rowId, cellId) {
                var cell = jQuery('#' + rowId + '_' + cellId);
                var val = cell.val();
                return val;
            }

            function editSuccessful(data, stat) {
                var amount = parseFloat(getCellValue(lastSelection, 'amount'));
                var unit = getCellValue(lastSelection, 'unit');

                var index = findArrayElement(grid_data, 'id', lastSelection);

                var selected_data = grid_data[index];
                selected_data.amount = amount;
                selected_data.unit = unit;
                grid_data[index] = selected_data;


                grid.jqGrid('setGridParam',
                                    {
                                        datatype: 'local',
                                        data:grid_data
                                    })
                                .trigger("reloadGrid");

                flash_message({
                    type: "success",
                    title: "Success!",
                    message: data.responseText
                });

                grid.restoreRow(lastSelection);
                return [true,"",""];
            }

            function editFailed(rowID, response) {
{#                $.jgrid.info_dialog($.jgrid.errors.errcap,'<div class="ui-state-error">RowID:'+rowID+ ' :  '+ response.responseJSON.error +'</div>', $.jgrid.edit.bClose,{buttonalign:'right'})#}
                alert(response.responseJSON.error);
            }

            function gridLoadComplete() {

                if(grid_data.length>0){
                    grid.jqGrid("footerData", "set", { date_created: "TOTAL",
                                                   amount: total_payment+" "+grid_data[grid_data.length-1].unit
                    });
                }

                setTimeout(function(){
                    $('#lui_grid-table').hide();
                }, 0);
            }

            $.getJSON('/invoices/{{ entity.id }}/payments/').then(function (entry_data) {
                console.log('entry_data: '+ entry_data.length)
                grid_data = entry_data;

                for(var j=0; j<grid_data.length; j++ ){
                    if (grid_data[j].date_created) {
                            grid_data[j].date_created = new Date(grid_data[j].date_created).format('yyyy-mm-dd HH:MM');
                    }
                    grid_data[j].delete_action = "<a data-target='#dialog_template' data-toggle='modal' data-keyboard=false href='/entities/"+grid_data[j].id+"/delete/dialog'> <i class='icon-trash'></i></a>"
                    total_payment += grid_data[j].amount;
{#                    grid_data[j].amount = grid_data[j].amount +' ' + grid_data[j].unit;#}

                }

                jQuery(function($) {

                    grid.jqGrid({
                        //direction: "rtl",
                        data: grid_data,
                        datatype: "local",
                        colNames:['Date', 'Amount','Unit', 'Note', ''],
                        colModel:[
                            {name:'date_created', index:'date_created', editable: false},
                            {name:'amount', index:'amount', edittype:"text", editable: true, formatter:unitFmatter,unformat:unformatUnit},
                            {
                                name:'unit',
                                index:'unit',
                                edittype:"text",
                                editable: true,
                                editoptions: {
                                    dataInit: function (element) {
                                        window.setTimeout(function () {
                                            $(element).autocomplete({
                                                id: 'AutoComplete',
                                            source: ['TL', "$"],
                                            autoFocus: true
                                            });
                                        }, 100);
                                    }
                                }},
                            {
                                name:'description',
                                index:'description',
                                sortable:false,
                                editable: true,
                                edittype:"textarea",
                                editoptions:{
                                    size:"20",
                                    maxlength:"80"
                                }
                            },
                            {
                                name:'delete_action',
                                index:'delete_action',
                                editable: false}
                         ],
                        viewrecords : true,
                        rowNum:grid_data.length,
                        rowList:[grid_data.length, 10, 10],
                        pager : false,
                        altRows: true,
                        multiselect: false,
                        loadonce: false,
                        sortname: 'date_created',
                        height: 'auto',
                        width: 'auto',
                        footerrow: true,
                        userDataOnFooter: true,
                        grouping: false,
                        editurl: '/payments/update?invoice_id={{ entity.id }}',
                        caption: "",
                        onSelectRow: editRow,
                        loadComplete : gridLoadComplete
                    });
                });
            });
        });
    </script>
{% endblock extrascripts %}

