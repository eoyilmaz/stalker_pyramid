<div class="row-fluid">
    {% if entity.entity_type == 'Task' %}
        <label class="pull-left">
            <input id='is_published' type="checkbox" class="ace">
            <span class="lbl"> Only Published Versions</span>
        </label>
    {% endif %}
    {% if entity.entity_type == 'Version' and not viewmode%}
        <button data-target="#dialog_template"
            data-toggle="modal"
            data-keyboard="false"
            href="{{ request.route_url('upload_entity_output_dialog', id=version.id) }}"
            class="pull-left btn btn-small btn-primary">
            <i class="icon-cloud-upload bigger-120"></i>
            Upload Output
        </button>
    {% endif %}
</div>
<div class="space-8"></div>
<div class="row-fluid">
    <div class="row-fluid ">
        <div class="span6">
            <div class="pagination" style="margin: 0"></div>
        </div>
        <div class="span6">
            <div class="search pull-right" id="output-search">
                <form class="form-search">
                    <input id="output_search_field" type="text" class="input-medium search-query"/>
                    <button class="btn btn-purple btn-small"
                            id="output_do_search_button">
                        Search
                        <i class="icon-search icon-on-right bigger-110"></i>
                    </button>
                </form>
            </div>
        </div>
    </div>
    <div class="row-fluid">
        <div id="new_outputs_storage" class="hidden"></div>
        <ul class="ace-thumbnails"></ul>
    </div>
</div>

<script type="text/javascript"
        src='{{ request.static_url("stalker_pyramid:static/stalker/js/bootstrap-tag.js") }}'></script>
<script type="text/javascript"
        src='{{ request.static_url("stalker_pyramid:static/ace/js/dropzone.min.js") }}'></script>
<script type="text/javascript"
        src='{{ request.static_url("stalker_pyramid:static/stalker/js/Paginator.js") }}'></script>

{% raw %}
<script id="tmpl_output_item" type="text/x-dot-template">
    <li id="Output_{{=it.id}}">

        <a href="/{{=it.webres_full_path}}"

           thumbnail_full_path="{{=it.thumbnail_full_path}}"
           webres_full_path="{{=it.webres_full_path}}"
           hires_full_path="{{=it.hires_full_path}}"

           webres_download_path="{{=it.webres_download_path}}"
           hires_download_path="{{=it.hires_download_path}}"

           original_filename="{{=it.original_filename}}"

           tags="{{=it.tags }}"

           date_created="{{=it.date_created }}"

           title="{{=it.original_filename}}&#013;{{=it.tags }}&#013;{{=it.version_take_name }} | {{='000'.substring(0, 3 - it.version_number.toString().length) + it.version_number.toString() }}"
           data-rel="colorbox"
           class="cboxElement">
            <div style="text-align: center; overflow: hidden; width: 150px; height: 150px;">
                <img alt="150x150"
                     style="height: 150px; width: auto; max-width: none;
                        position: relative; left: 100%; margin-left: -200%;"
                     src="/{{=it.thumbnail_full_path ? it.thumbnail_full_path : 'static/stalker/images/Placeholder_0.png' }}">

                <div class="tags">
                    <!--{{~ it.tags :t}}-->
                    <!--<span class="label label-info">{{=t}}</span>-->
                    <!--{{~}}-->
                    {{? it.date_created }}
                        <span class="label label-warning arrowed-in">{{=it.date_created }}</span>
                    {{?}}
                    {{? it.daily_id }}
                        <span class="label label-warning arrowed-in">{{=it.daily_name }}</span>
                    {{?}}
                    {{? it.version_published }}
                        <span class="label label-success arrowed-in">published</span>
                    {{?}}
                    {{? it.webres_full_path.indexOf('.webm') !== -1 }}
                    <span class="label label-success">
                        <i class="icon-film"></i>
                    </span>
                    {{?}}
                    <span class="label label-info">{{=it.version_take_name }} | {{='000'.substring(0, 3 - it.version_number.toString().length) + it.version_number.toString() }}</span>
                </div>
            </div>
        </a>
        <!--<span class="pull-right"><a href="/versions/{{=it.version_id}}/view">{{=it.version_take_name }} | {{=it.version_number }}</span>-->

        <div class="tools">
            <a href="/FD{{=it.webres_download_path}}" title="Download Web Version"><i class="icon-cloud-download green"></i></a>
            <a href="/FD{{=it.hires_download_path}}" title="Download Original"><i class="icon-cloud-download blue"></i></a>

            <a href="/versions/{{=it.version_id}}/view" title="View Version"><i class="icon-zoom-in"></i></a>

            {{if (it.daily_id) { }}
                <a data-target="#dialog_template"
                   data-toggle="modal"
                   data-keyboard=false
                   href="/links/{{=it.id}}/dailies/{{=it.daily_id}}/remove/dialog"
                   title="Remove From Daily">
                   <i class="icon-eye-close"></i>
                </a>
             {{ } else { }}
                <a data-target="#dialog_template"
                   data-toggle="modal"
                   data-keyboard=false
                   href="/links/{{=it.id}}/dailies/append/dialog?task_id={{=it.task_id}}"
                   title="Add To A Daily">
                   <i class="icon-eye-open"></i>
                </a>
            {{ } }}

            <a class='output-deleter'
               ref_id="{{=it.id}}"
               ref_file_name="{{=it.original_filename}}"
               href="#"
               title="Delete"><i class="icon-trash red"></i></a>
        </div>
    </li>
</script>
{% endraw %}

<script type="text/javascript">

    {% if entity.entity_type == 'Task' or entity.entity_type == 'Asset' or entity.entity_type == 'Shot' or entity.entity_type == 'Sequence' %}
        {% set task=entity %}
    {% else %}
        {% set task=entity.task %}
    {% endif %}
    let task_id = '{{task.id}}';

    let items_per_page = 40;
    let total_number_of_items;
    let count_url = '/tasks/{{ entity.id }}/outputs/';


    let colorbox_params = {
        rel: 'Outputs',
        loop: false,
        reposition: true,
        scalePhotos: true,
        scrolling: true,
        previous: '<i class="icon-arrow-left"></i>',
        next: '<i class="icon-arrow-right"></i>',
        close: '&times;',
        current: '{current} of {total}',
        maxWidth: '100%',
        maxHeight: '100%',
        width: '100%',
        height: '100%',
        transition: 'none',
        title: function () {
            // Filename (Tags)| Hires (DL)

            let url = $(this).attr('href');

            let original_title = $(this).attr('original_filename');

            let tags = $(this).attr('tags');

            let view_hires_url = '/' + $(this).attr('hires_full_path');
            let download_hires_url = '/FD' + $(this).attr('hires_download_path');

            let view_webres_url = '/' + $(this).attr('webres_full_path');
            let download_webres_url = '/FD' + $(this).attr('webres_download_path');

            let open_hires_in_new_tab_link = '<a title="View Original in new Tab"  href="' + view_hires_url + '" target="_blank">Original</a></span>';
            let download_hires_link = '<span><a title="Download Original" class="icon-cloud-download blue" href="' + download_hires_url + '">&nbsp</a></span>';

            let open_webres_in_new_tab_link = '<a title="View Web Version in new Tab"  href="' + view_webres_url + '" target="_blank">Web Version</a></span>';
            let download_webres_link = '<span><a title="Download Web Version" class="icon-cloud-download green" href="' + download_webres_url + '">&nbsp</a></span>';
            let date_created = $(this).attr('date_created');



            return original_title + '&nbsp(' + tags + ')&nbsp|&nbsp' +
                   open_webres_in_new_tab_link + ' &nbsp ' + download_webres_link + '&nbsp|&nbsp' +
                   open_hires_in_new_tab_link + ' &nbsp ' + download_hires_link + ' &nbsp ' + date_created;
        },
        onOpen: function () {
            document.body.style.overflow = 'hidden';
            // get the element and check if it is the last element
        },
        onClosed: function () {
            document.body.style.overflow = 'auto';
        },
        onComplete: function () {
            // fit image to colorBox
            let photo = $('.cboxPhoto');
            let photo_width = photo.width();
            let photo_height = photo.height();
            let photo_ratio = photo_width / photo_height;

            let cbox = $('#cboxContent');
            let cbox_width = cbox.width();
            let cbox_height = cbox.height();
            let cbox_ratio = cbox_width / cbox_height;

            let multiplier;
            let css_options = {
                'margin-left': 0,
                'margin-right': 0,
                'margin-top': 0,
                'margin-bottom': 0,
                position: 'relative'
            };

            if (photo_ratio > cbox_ratio) {
                multiplier = cbox_width / photo_width;
                photo_height *= multiplier;

                photo.css($.extend(css_options, {
                    width: '100%',
                    height: 'auto',
                    left: 0,
                    top: (cbox_height - photo_height) * 0.5 - 20 + 'px'
                }));
            } else {
                multiplier = cbox_height / photo_height;
                photo_width *= multiplier;

                photo.css($.extend(css_options, {
                    width: 'auto',
                    height: '100%',
                    left: (cbox_width - photo_width) * 0.5 + 'px',
                    top: 0
                }));
            }
        }
    };


    /**
     * Draws output items
     */
    let draw_output_items = function (options) {
        let outputItemTemplate = doT.template(document.getElementById('tmpl_output_item').text);

        options = $.extend({
            current_page: 1,
            items_per_page: 40,
            url: '/tasks/{{ entity.id }}/outputs/',
            search: ''
        }, options);

        let current_page = options.current_page;
        let items_per_page = options.items_per_page;

        let offset = (current_page - 1) * items_per_page;
        // now generate the template items
        $.getJSON(options.url,
                  $.param({
                      'offset': offset,
                      'limit': items_per_page,
                      'search': options.search,
                      'is_published': $('#is_published').prop('checked')?'t':''
                  })).then(function (data) {
            let ref_count = data.length;
            // remove any thumbnails first

            let cbox_element = $('.ace-thumbnails');

            remove_thumbnails({
                container: cbox_element
            });
            for (let i = 0; i < ref_count; i++) {
                data[i].task_id = task_id;
                data[i].date_created = new Date(data[i].date_created).format('yyyy-mm-dd HH:MM');
                append_thumbnail({
                    data: data[i],
                    template: outputItemTemplate,
                    colorbox_params: colorbox_params,
                    container: cbox_element
                });
            }

            $("#cboxLoadingGraphic").append("<i class='icon-spinner orange'></i>");

            $('.output-deleter').on('click', function (e) {
                e.preventDefault();
                e.stopPropagation();
                let self = $(this);
                let ref_id = self.attr('ref_id');
                let ref_file_name = self.attr('ref_file_name');

                let confirm_message = 'Delete ' + ref_file_name + ' ?';

                bootbox.confirm(confirm_message, function (response) {
                    if (response) {
{#                            console.debug('will delete ' + ref_id);#}
                        // remove the output in the server
                        let url = '/outputs/' + ref_id + '/delete';
                        $.post(url).done(function (response_text) {
                            // use he response text and give info
                            // and also delete the HTML element
                            $('#Output_' + ref_id).toggle('slow', function () {
                                $(this).remove();
                            })
                        }).fail(function (jqXHR) {
                            // use the jqXHR.response_text and inform user about what went wrong
                        });
                    }
                });
            });
        });
    };

    /**
     * Creates the paginator
     *
     * @param options
     *   Options for this function
     */
    let create_paginator = function (options) {
        console.log('create_paginator');
        options = $.extend({
            total_number_of_items: 0,
            items_per_page: 40,
            current_page: 1
        }, options);

        $('.pagination').paginator({
            'number_of_items': options.total_number_of_items,
            'items_per_page': options.items_per_page,
            'current_page': options.current_page,
            'callback': function(current_page_number){
                // get search string
                let search_string = $('#output_search_field').val();

                draw_output_items({
                    current_page: current_page_number,
                    items_per_page: options.items_per_page,
                    search: search_string
                });
            }
        });
    };

    let get_output_items = function(c_url){
        count_url = c_url;

        // get total number of outputs
        $.getJSON(count_url, function(data){

            console.log('count_url: '+count_url)
            total_number_of_items = data;

            create_paginator({
                total_number_of_items: total_number_of_items,
                items_per_page: items_per_page
            });
        });

        // for initial one
        draw_output_items({
            current_page: 1,
            items_per_page: items_per_page
        });

    };

    $(function () {
        // create pagination


        get_output_items(count_url);

        // and add the new thumbnails when uploaded through Dropzone
        $('#dialog_template').on('hidden', function () {
            // get the data from the storage

            let repo_id = {{ task.project.repository.id }};
            let repo_prepend = 'repositories/' + repo_id + '/';
            let new_outputs_storage = $('#new_outputs_storage');
            let data = $.parseJSON(new_outputs_storage.text());
            // empty the storage
            new_outputs_storage.text('');
            let outputItemTemplate = doT.template(document.getElementById('tmpl_output_item').text);
            for (let i = 0; i < data.length; i++) {
                // prepend repositories/{id}/ to make it compatible with the
                // new style outputs
                data[i].thumbnail_full_path = repo_prepend + data[i].thumbnail_full_path;
                data[i].date_created = new Date(data[i].date_created).format('yyyy-mm-dd HH:MM');

                data[i].full_path = repo_prepend + data[i].full_path;
                data[i].task_id = task_id;
                console.log('date_created :' + data[i].date_created);

                append_thumbnail({
                    data: data[i],
                    template: outputItemTemplate,
                    colorbox_params: colorbox_params,
                    animate: true,
                    container: $('.ace-thumbnails')
                });
            }
        });

        $('#is_published').on('change', function(e) {
            e.preventDefault();
            e.stopPropagation();
{#                console.log($('#is_published').prop('checked'));#}

            let search_string = $('#output_search_field').val();
            $.getJSON(count_url,
                $.param({
                  'search': search_string,
                  'is_published': $('#is_published').prop('checked')?'t':''
                })).then(function (data) {

                create_paginator({
                    total_number_of_items: data,
                    items_per_page: items_per_page
                });

                draw_output_items({
                    current_page: 1,
                    items_per_page: items_per_page,
                    search: search_string
                });
            });

        });

        $('#output_do_search_button').on('click', function(e){
            e.preventDefault();
            e.stopPropagation();

            // get search string
            let search_string = $('#output_search_field').val();
            $.getJSON(count_url,  $.param({
                  'search': search_string,
                  'is_published': $('#is_published').prop('checked')?'t':''
                })).then(function (data) {

                create_paginator({
                    total_number_of_items: data,
                    items_per_page: items_per_page
                });

                draw_output_items({
                    current_page: 1,
                    items_per_page: items_per_page,
                    search: search_string
                });
            });
        });

    });
</script>
