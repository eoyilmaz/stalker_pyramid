<div class='dijitDialogPaneContentArea'>
    <form accept-charset="utf-8" id='upload_reference_form'>
    {#      enctype='multipart/form-data'>#}
        
        <div class='dijitDialogPaneContentArea'>
            <table style='width: 100%'>
    
                {# Entity Name #}
                <tr>
                    <td class='label_column'>
                        <label for='entity_name'>Entity</label>
                    </td>
                    <td class='input_column'>
                        <input id='entity_name'>
                    </td>
                </tr>
                
                Reference 
                <tr>
                    <td class='label_column'>
                        <label for='reference'>Reference</label>
                    </td>
                    <td class='input_column'>
                        <div id='reference_list'></div>
                        <div id='reference'></div>
                    </td>
                </tr>
            </table>
        </div>
    </form>
</div>

<div class='dijitDialogPaneActionBar'>
    <button id='reference_ok_button' >Ok</button>
    <button id='reference_cancel_button'>Cancel</button>
</div>

<script type='text/javascript'>
    require([
        'dijit/form/Form',
        'dijit/form/Button',
        'dijit/form/ValidationTextBox',

        'dojox/form/FileInput',
        'dojox/form/Uploader',
        'dojox/form/uploader/FileList',
            
        'stalker/submitForm',

        'dojo/domReady!'
    ], function (Form, Button, ValidationTextBox, FileInput, Uploader,
                 FileList, submitForm) {
        
        // ********************************************************************
        // Some important vars
        var is_upload_finished = false;
        var entity_id = {{ entity.id }};
        var link_id = -1;
        
        // ********************************************************************
        // Form
        var upload_reference_form = new Form({}, 'upload_reference_form');

        var dialog = upload_reference_form.getParent();
        

        // ********************************************************************
        // Name
        var name_textBox = new ValidationTextBox({
            name: 'name',
            label: 'Entity',
            required: true,
            value: '{{ entity.name }} ({{ entity.entity_type }})',
            disabled: true
        }, 'entity_name');
        name_textBox.startup();

        // ********************************************************************
        // Reference
        var reference_uploader = new dojox.form.Uploader({
            label: 'Browse...',
            multiple: false,
            uploadOnSelect: true,
            enctype: 'multipart/form-data',
            url: 'upload_file   ',
            onBegin: function(data){
                // reset data
                is_upload_finished = false;
                link_id = -1;
            },
            onComplete: function(data){
                // store the link.id
                console.debug(data);
                is_upload_finished = true;
                link_id = data.link_id;
                console.debug('link_id :', link_id);
            }
        }, 'reference');
        reference_uploader.startup();

        var reference_list = new dojox.form.uploader.FileList({
            uploader: reference_uploader
        }, 'reference_list');
        reference_list.startup();

        // ********************************************************************
        // Ok Button
        var ok_button = new Button({
            label: 'OK',
            type: 'button',
            onClick: function () {
                if (is_upload_finished && link_id != -1){
                    console.debug('is_upload_finished : ', is_upload_finished);
                    console.debug('link_id            : ', link_id);
                    console.debug('dialog             : ', dialog);
                    submitForm({
                        dialog: dialog,
                        form: upload_reference_form,
                        additional_data: {
                            entity_id: entity_id,
                            link_id: link_id
                        },
                        url: '{{ request.route_url('assign_reference') }}',
                        method: 'POST'
                    });
                }else{
                    alert('Upload has not finished yet!');
                }
            }
        }, 'reference_ok_button');
        ok_button.startup();

        // ********************************************************************
        // Cancel Button
        var cancel_button = new Button({
            label: 'Cancel',
            type: 'button',
            onClick: function () {
                dialog.destroyRecursive();
            }
        }, 'reference_cancel_button');
        cancel_button.startup();

        upload_reference_form.startup();

    });
</script>
