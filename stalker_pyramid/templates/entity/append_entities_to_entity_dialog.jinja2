<div class="row-fluid" >
    <form id='append_form'
              class='form-horizontal no-padding no-scroll'
              role='form'
              method='post'>
            <table id="multiple_select_list" class="table table-striped table-bordered table-hover no-margin-bottom no-border-top" >
                <thead>
                    <tr>
                        <th>Thumbnail</th>
                        <th>Name</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
    </form>

</div>
{% raw %}
<script id="tmpl_append_item" type="text/x-dot-template">

    <tr id="stack_item_{{=it.id}}">
        <td>
            <img style='width:auto; height: 40px;'
                     class="img-thumbnail"
                 src="{{=it.thumbnail_full_path }}">
        </td>
        <td>
            <span>{{=it.name }}</span><br/>
            <span>{{=it.description}}</span>
        </td>
        <td>
            <input id="selected_{{=it.id}}"
                       name="selected_ids"
                       type="checkbox"
                       class="ace ace-checkbox-2">
                <span class="lbl"></span>
        </td>

   </tr>
</script>
{% endraw %}

<script src='{{ request.static_url("stalker_pyramid:static/ace/js/jquery.dataTables.min.js") }}'></script>
<script src='{{ request.static_url("stalker_pyramid:static/ace/js/jquery.dataTables.bootstrap.js") }}'></script>
<script src='{{ request.static_url("stalker_pyramid:static/stalker/js/dataTable_num-html_sort.js") }}'></script>

<script type="text/javascript">

{#    var data_ids = [];#}
{##}
{#    function submitStackData() {#}
{#        // gather info#}
{#        // and send#}
{##}
{#        var selected_items = [];#}
{#        for (var i = 0; i < data_ids.length; i++) {#}
{#            var selected = $('#stack_item_' + data_ids[i]).attr('sel');#}
{##}
{#            if (selected != "") {#}
{#                selected_items.push(data_ids[i]);#}
{#            }#}
{#        }#}
{##}
{#        $.post(#}
{#            "{{ request.route_url('append_entities_to_entity', id=entity.id) }}",#}
{#            {'selected_items': selected_items}#}
{#        ).done(function(){#}
{#            window.location.assign('{{ came_from }}');#}
{#        });#}
{#    }#}
{##}
{##}
{#    function clicked(id) {#}
{##}
{#        var selected = $('#stack_item_' + id).attr('sel');#}
{##}
{#        if (selected == "") {#}
{#            $('#stack_item_' + id).attr('sel', 'ok');#}
{##}
{#            $('#stack_item_' + id + '-ok').show();#}
{##}
{#        }#}
{#        else {#}
{#            $('#stack_item_' + id).attr('sel', '')#}
{#            $('#stack_item_' + id + '-ok').hide();#}
{#        }#}
{##}
{#    }#}
    function init_dialog() {
        console.debug('starting to initialize append_class_to_entity dialog!!!');


        $('#dialog_template_label').find('span').remove();
        $('#dialog_template_label').append('<span>Append {{ entities_name }}</span>')


        {# ***************************************************************** #}
        $(document).ready(function () {


            $.getJSON('/entities/{{ entity.id }}/{{ entities_name }}/out_stack/').then(function (data) {

                var item_template = doT.template($('#tmpl_append_item').html());
                var table_body = $('#multiple_select_list>tbody');

                // append new options to the select
                for (var i = 0; i < data.length; i++) {

{#                    data_ids.push(data[i].id)#}

                    if (data[i].thumbnail_full_path == null) {
                        data[i].thumbnail_full_path = '{{ request.static_url("stalker_pyramid:static/stalker/images/T_NO_IMAGE.gif") }}';
                    }
                    else {
                        data[i].thumbnail_full_path = '/' + data[i].thumbnail_full_path;
                    }


                    if (data[i].description == null) {
                        data[i].description = '';
                    }
                    else {
                        data[i].description = '<i class="icon-file-text-alt"></i> ' + data[i].description;
                    }

                    table_body.append(item_template(data[i]));
                }

                 var oTable = $('#multiple_select_list').dataTable({
                                                                        "sScrollY": "400px",
                                                                        "bPaginate": false,
                                                                        "bInfo": false,
                                                                        "bScrollInfinite": true,
                                                                        "bScrollCollapse": true,
                                                                        "iScrollLoadGap": 50
                                                                    });

{#                 oTable.fnSort(sortingParameters);#}

                $('.ace-checkbox-2').on('click', function () {

                    if (!this.checked) {
                        this.value = '';
                        return;
                    }
                    this.value = (this.id).split('_')[1];
                    console.log(this.value)

                });

            });


        });

        $(document).ready(function () {

            var submit_button = $('#dialog_template_submit_button');
            submit_button.on('click', function (e) {

                e.stopPropagation();
                e.preventDefault();
                submit_button.button('loading');

                var append_form = $("#append_form");


                $.post('/entities/{{ entity.id }}/append', append_form.serialize()
                                        ).done(function (response_text) {
                                            window.location.assign('{{ came_from }}');
                                            submit_button.button('reset');
                                            $('#dialog_template').modal('hide');

                                        }).fail(function (jqXHR) {
                                            bootbox.alert(jqXHR.responseText);
                                            submit_button.button('reset');
                                        });
            });
        });




        console.debug('finished initializing the append_class_to_entity dialog!')
    }
</script>

<script type="text/javascript">
    function destruct_dialog() {
        $('#dialog_template_submit_button').unbind();
        $('#dialog_template').data('modal', null);
    }
</script>
