<div class="row-fluid">
     <div class="left">
        <div class="btn-toolbar">
            <div class="input-prepend" style="height: 30px;
                                    margin-bottom: 0px;
                                    margin-left: 7px;
                                    margin-right: 7px;
                                    ">
                <select id='task_type' class='input-block-level'>
                        <option value="Animation">Animation</option>
                        <option value="Lighting">Lighting</option>
                        <option value="Comp">Comp</option>
                        <option value="Camera">Camera</option>
                        <option value="Scene Assembly">Scene Assembly</option>
                        <option value="Shot Previs">Shot Previs</option>
                </select>
            </div>
        </div>
    </div>
    <div class="span8" id="result_chart" style="margin-left: 0px">

    </div>
</div>
<div class="space-20"></div>
<div class="row-fluid">
    <div class="span12" id="result_table">
<table id="grid-table"></table><div id="grid-pager"></div>
    </div>
</div>

<script class="include" type="text/javascript"
            src='{{ request.static_url("stalker_pyramid:static/jqPlot/jquery.jqplot.min.js") }}'></script>
<!-- End Don't touch this! -->

<!-- Additional plugins go here -->

<script class="include" type="text/javascript"
        src='{{ request.static_url("stalker_pyramid:static/jqPlot/plugins/jqplot.categoryAxisRenderer.min.js") }}'></script>
<script class="include" type="text/javascript"
        src='{{ request.static_url("stalker_pyramid:static/jqPlot/plugins/jqplot.barRenderer.min.js") }}'></script>
<script class="include" type="text/javascript"
        src='{{ request.static_url("stalker_pyramid:static/jqPlot/plugins/jqplot.dateAxisRenderer.min.js") }}'></script>
<script class="include" type="text/javascript"
        src='{{ request.static_url("stalker_pyramid:static/jqPlot/plugins/jqplot.logAxisRenderer.min.js") }}'></script>
<script class="include" type="text/javascript"
        src='{{ request.static_url("stalker_pyramid:static/jqPlot/plugins/jqplot.canvasAxisTickRenderer.min.js") }}'></script>
<script class="include" type="text/javascript"
        src='{{ request.static_url("stalker_pyramid:static/jqPlot/plugins/jqplot.canvasTextRenderer.min.js") }}'></script>
<script class="include" type="text/javascript"
        src='{{ request.static_url("stalker_pyramid:static/jqPlot/plugins/jqplot.pointLabels.min.js") }}'></script>
<script class="include" type="text/javascript"
        src='{{ request.static_url("stalker_pyramid:static/jqPlot/plugins/jqplot.highlighter.min.js") }}'></script>
<script class="include" type="text/javascript"
        src='{{ request.static_url("stalker_pyramid:static/jqPlot/plugins/jqplot.cursor.min.js") }}'></script>
<script src='{{ request.static_url("stalker_pyramid:static/jqGrid/js/i18n/grid.locale-en.js") }}'></script>
<script src='{{ request.static_url("stalker_pyramid:static/jqGrid/js/jquery.jqGrid.min.js") }}'></script>



<script type="text/javascript">
    function loadShotTaskData(t_type){
        console.log('loadShotTaskData: '+t_type);
        jQuery("#grid-table").jqGrid('GridUnload');
        var result_chart = $('#result_chart');
        result_chart.find("#chart_shot").remove();

        $.getJSON('/entities/{{ entity.id }}/'+t_type+'/result').then(function (data) {
            console.log('loadShotTaskData: '+data.length);
                if (data.length>0){
                    var shot_data = data;

                    result_chart.append('<div id="chart_shot" style="height:500px; background: rgb(57,57,57)"></div>');

                    var total_seconds = 0;
                    var max_seconds = 0;
                    var weekly_shot_seconds = [];
                    for (var i=0; i<shot_data.length; i+=1){
                        var shot_names = '';
                        for (var m=0; m<shot_data[i]['shot_names'].length; m+=1){
                            shot_names += shot_data[i]['shot_names'][m]+'<br/>';
                        }
                        shot_data[i]['shot_names'] = shot_names;
                        var resource_ids = '';
                        for (var m=0; m<shot_data[i]['resource_ids'].length; m+=1){
                            resource_ids += "<a href='/users/"+shot_data[i]['resource_ids'][m]+"/view'>"+get_user_name(shot_data[i]['resource_ids'][m])+"</a><br/>";
                        }
                        shot_data[i]['resource_ids'] = resource_ids;
    {#                    shot_data[i]['month'] = new Date(data[i]['start_date'] * 1000).format('yyyy-mm').toString();#}
                        shot_data[i]['start_date'] = new Date(data[i]['start_date'] * 1000).format('yyyy-mm-dd').toString();
                        total_seconds += shot_data[i]['total_seconds'];
                        shot_data[i]['total_seconds'] = shot_data[i]['total_seconds'].toFixed(2);
                        weekly_shot_seconds.push([shot_data[i]['start_date'], shot_data[i]['total_seconds']]);
                        max_seconds = parseFloat(shot_data[i]['total_seconds'])>max_seconds?parseFloat(shot_data[i]['total_seconds']):max_seconds;
                    }


                    $.jqplot('chart_shot', [weekly_shot_seconds], {
                                seriesColors: ["rgba(78, 135, 194, 0.7)"],
                                title: {
                                    text:'Weekly '+t_type+' Seconds',
                                    textColor: '#dddddd'
                                },
                                highlighter: {
                                    show: true,
                                    sizeAdjust: 10
                                },
                                grid: {
                                    background: 'rgba(57,57,57,0.5)',
                                    drawBorder: false,
                                    shadow: false,
                                    gridLineColor: '#666666',
                                    gridLineWidth: 2
                                },
                                axes:{
                                   xaxis: {
                                        renderer: $.jqplot.DateAxisRenderer,
                                        tickRenderer: $.jqplot.CanvasAxisTickRenderer,
                                        tickOptions: {
                                            formatString: "%d %b",
                                            angle: -30,
                                            textColor: '#dddddd'
                                        },

                                        tickInterval: "1 week",
                                        drawMajorGridlines: false
                                    },
                                    yaxis: {
                                        renderer: $.jqplot.LinearAxisRenderer,
                                        pad: 0,
                                        rendererOptions: {
                                            minorTicks: 1
                                        },
                                        max:max_seconds,
                                        tickOptions: {
                                            formatString: "  %d seconds",
                                            showMark: false
                                        }
                                    }
                                },
                                seriesDefaults: {
                                    showMarker: true
                                }
                    });


                    var grid_selector = "#grid-table";
                    var pager_selector = "#grid-pager";



                    jQuery(grid_selector).jqGrid({
                        data: shot_data,
                        datatype: "local",
                        colModel: [
    {#                        { label: 'Month', name: 'month', width: 150 },#}
                            { label: 'Start Date', name: 'start_date', width: 150 },
                            { label: 'Shot Name', name: 'shot_names', key: true, width: 300 },
                            { label: 'Resource Name', name: 'resource_ids', key: true, width: 300 },
                            { label: 'Total Seconds', name: 'total_seconds', width: 200 }

                        ],
                        loadonce:true, // just for demo purpose
    {#                    width: 780,#}
                        height: 750,
                        rowNum: 10,
                        rowList:[10,25,50],
                        sortname: 'start_date',
                        sortorder: "desc",
                        pager: pager_selector,
                        viewrecords: true,
                        footerrow: true, // set a footer row
                        userDataOnFooter: true,
                        grouping: false,
    {#                    groupingView: {#}
    {#                        groupField: ["month"],#}
    {#                        groupColumnShow: [true],#}
    {#                        groupText: ["<b>{0}</b>"],#}
    {#                        groupOrder: ["desc"],#}
    {#                        groupSummary: [true],#}
    {#                        groupCollapse: false#}
    {##}
    {#                    },#}
                        loadComplete : function() {
                            var $self = $(this);
    {#                        var total_seconds= $self.jqGrid('getCol', 'total_seconds', false, 'sum');#}
                            var total_minutes = total_seconds/60;
                            $self.jqGrid("footerData", "set", {resource_ids: 'TOTAL',
                                                               total_seconds: total_seconds.toFixed(2)+'s = '+total_minutes.toFixed(2)+' m',
                                                               start_date: 'AVARAGE',
                                                               shot_names: (total_seconds/shot_data.length).toFixed(2)+'s'
                                                               });

                        }
                    });
    {#                jQuery(grid_selector).jqGrid("navGrid",pager_selector,{add:false, edit:false, del:false});#}

                }
            });


    }
    $(document).ready(function () {
        $.jqplot._noToImageButton = true;
        $.jqplot.config.enablePlugins = true;

        var task_type = $('#task_type');
        var task_type_str = task_type.val();
        loadShotTaskData(task_type_str);

        task_type.on('change', function () {

            task_type_str = $(this).val();
            loadShotTaskData(task_type_str);
        });



    });
</script>
