{# Stalker Pyramid a Web Base Production Asset Management System
 Copyright (C) 2009-2013 Erkan Ozgur Yilmaz
 
 This file is part of Stalker Pyramid.
 
 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free Software Foundation;
 vacation 2.1 of the License.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.

 You should have received a copy of the GNU Lesser General Public
 License along with this library; if not, write to the Free Software
 Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
#}
<div class='dijitDialogPaneContentArea'>
    <form id='vacation_form'>
        <table style='width: 100%'>

            {# TASK #}
            <tr>
                <td class='label_column'>
                    <label for='vacation_user'>User</label>
                </td>
                <td class='input_column'>
                    <input id='vacation_user'>
                </td>
            </tr>

            {# TYPE #}
            <tr>
                <td class='label_column'>
                    <label for='vacation_type'>Type</label>
                </td>
                <td class='input_column'>
                    <input id='vacation_type'>
                </td>
            </tr>


            {# START #}
            <tr>
                <td class='label_column'>
                    <label for='vacation_start_date'>Start Date</label>
                </td>
                <td class='input_column'>
                    <input id='vacation_start_date'>
                    <input id='vacation_start_time'>
                </td>
            </tr>

            {# END #}
            <tr>
                <td class='label_column'>
                    <label for='vacation_end_date'>End Date</label>
                </td>
                <td class='input_column'>
                    <input id='vacation_end_date'>
                    <input id='vacation_end_time'>
                </td>
            </tr>


            {# NOTES #}
            <tr>
                <td class='label_column'>
                    <label for='vacation_notes'>Notes</label>
                </td>
                <td class='input_column'>
                    <input id='vacation_notes'>
                </td>
            </tr>

        </table>
    </form>
</div>

<div class='dijitDialogPaneActionBar'>
    <button id='vacation_ok_button'>Ok</button>
    <button id='vacation_cancel_button'>Cancel</button>
</div>

<script type="text/javascript">
require([
    'dijit/form/Form',
    'dijit/form/TextBox',
    'dijit/form/FilteringSelect',

    'dijit/form/ComboBox',
    'dijit/form/Button',
    'dijit/form/TextBox',
    'dijit/form/SimpleTextarea',
    'dijit/form/NumberSpinner',
    'dijit/form/CheckBox',
    'dijit/form/DateTextBox',
    'dijit/form/TimeTextBox',

    'dojo/store/Memory',
    'dojo/date/stamp',

    'stalker/submitForm',
    'stalker/util',

    'dojo/domReady!'
], function (Form, TextBox, FilteringSelect, ComboBox, Button, TextBox,
             SimpleTextarea, NumberSpinner, CheckBox, DateTextBox, TimeTextBox,
             Memory, stamp, submitForm, util) {
    // ********************************************************************
    // Generate default values
    var url;
    var type_name;
    var start_date_value;
    var end_date_value;
    var start_time_value;
    var end_time_value;
    {# fill values based on the dialog mode #}
    {% if mode == 'CREATE' %}
        url = '{{ request.route_url("create_vacation") }}';

        start_date_value = new Date();// set it today by default
        end_date_value = new Date();// set it today by default
        start_time_value = start_date_value.clearTime();
        end_time_value = end_date_value.clearTime();
        // now set the hour values
        start_time_value.setHours(10);
        end_time_value.setHours(19);


    {% elif mode == 'UPDATE' %}
        url = '{{ request.route_url("update_vacation", id=vacation.id) }}';

        start_date_value = new Date(parseInt({{ milliseconds_since_epoch(vacation.start) }}));
        end_date_value = new Date(parseInt({{ milliseconds_since_epoch(vacation.end) }}));

        start_time_value = start_date_value;
        end_time_value = end_date_value;

        type_name = '{{ vacation.type.name }}';

    {% endif %}



    // ****************************************************************
    // Form
    var vacation_form = new Form({}, 'vacation_form');
    var dialog = vacation_form.getParent();

    // ****************************************************************
    // Task
    var user_textBox = new TextBox({
        name: 'user_name',
        label: 'User',
        value: '{{ user.name }}',
        disabled: true,
        required: true
    }, 'vacation_user');
    user_textBox.startup();

    // ****************************************************************
    // Type
    var type_memory = new Memory({
        data: [
            {% for type_ in types %}
                {
                    id: '{{ type_.id }}',
                    name: '{{type_.name}}'
                },

            {% endfor %}
        ]
    });

    var type_box

    {% if types  %}
        var type_widget_type;
        var type_place_holder;

        {% if has_permission('Create_Type') %}
            type_widget_type = ComboBox;
            type_place_holder = 'Enter A New Type or Select A Type';
        {% else %}
            type_widget_type = FilteringSelect;
            type_place_holder = 'Select A Type';
        {% endif %}

        type_box = new type_widget_type({
            name: 'type_name',
            required: true,
            store: type_memory,
            placeHolder: type_place_holder,
            value: type_name
        }, 'vacation_type');
        type_box.startup();

        type_box.attr('value', type_name);

    {% else %}
        type_name = 'StudioWide'

        var type_box = new TextBox({
            name: 'type_name',
            value: type_name,
            disabled: true
        }, 'vacation_type');
        type_box.startup();

    {% endif %}


    // ****************************************************************
    // Start Date

    // Date
    var start_dateTextBox = new DateTextBox({
        name: 'start_date',
        label: 'Start Date',
        value: start_date_value,
        required: true,
        datePattern: 'dd-mm-yyyy',
        style: 'width: 90px;'
    }, 'vacation_start_date');
    start_dateTextBox.startup();

    // Time
    var start_time_timeTextBox = new TimeTextBox({
        name: 'start_time',
        {#        value: start_time_value,#}
        style: 'width: 85px;',
        constraints: {
            timePattern: 'HH:mm:ss',
            clickableIncrement: 'T01:00:00',
            visibleIncrement: 'T01:00:00',
            visibleRange: 'T01:00:00'
        }
    }, 'vacation_start_time');
    start_time_timeTextBox.startup();
    start_time_timeTextBox.set('value', start_time_value);


    // ****************************************************************
    // End Date

    // Date
    var end_dateTextBox = new DateTextBox({
        name: 'end_date',
        label: 'End Date',
        value: end_date_value,
        required: true,
        datePattern: 'dd-mm-yyyy',
        style: 'width: 90px;'

    }, 'vacation_end_date');
    end_dateTextBox.startup();

    // Time
    var end_time_timeTextBox = new TimeTextBox({
        name: 'end_time',
        {#        value: end_time_value,#}
        style: 'width: 85px',
        constraints: {
            timePattern: 'HH:mm:ss',
            clickableIncrement: 'T01:00:00',
            visibleIncrement: 'T01:00:00',
            visibleRange: 'T01:00:00'
        }
    }, 'vacation_end_time');
    end_time_timeTextBox.startup();
    end_time_timeTextBox.set('value', end_time_value);

    // ****************************************************************
    // Notes
    var notes = new SimpleTextarea({
        name: 'notes',
        style: 'width: 176px;'
    }, 'vacation_notes');
    notes.startup();

    // ****************************************************************
    // Ok Button
    var ok_button = new Button({
        label: 'Ok',
        type: 'button',
        onClick: function () {

            // merge start_date and start_time
            var start_datetime_value = start_dateTextBox.value;
            start_datetime_value.clearTime();
            start_datetime_value.setHours(
                    start_time_timeTextBox.value.getHours(),
                    start_time_timeTextBox.value.getMinutes(),
                    start_time_timeTextBox.value.getSeconds()
            );

            // merge end_date and end_time
            var end_datetime_value = end_dateTextBox.value;
            end_datetime_value.clearTime();
            end_datetime_value.setHours(
                    end_time_timeTextBox.value.getHours(),
                    end_time_timeTextBox.value.getMinutes(),
                    end_time_timeTextBox.value.getSeconds()
            );
            console.debug('start_time_timeTextBox :', start_time_timeTextBox.value);
            console.debug('end_time_timeTextBox   :', end_time_timeTextBox.value);

            console.debug('start_datetime_value :', start_datetime_value);
            console.debug('end_datetime_value   :', end_datetime_value);


            {% if types %}
                if (type_box.get('value') == 'StudioWide') {
                    alert('You can not create a vacation with type StudioWide ');
                    return;
                }
            {% endif %}

            submitForm({
                dialog: dialog,
                form: vacation_form,
                additional_data: {
                    start: start_datetime_value.toUTCString(),
                    end: end_datetime_value.toUTCString(),
                    {% if mode == 'UPDATE' %}
                        vacation_id: '{{ vacation.id }}',
                    {% endif %}
                    user_id: '{{user.id }}'

                },
                url: url,
                method: 'POST'
            });
        }
    }, 'vacation_ok_button');
    ok_button.startup();


    // ****************************************************************
    // Cancel Button
    var cancel_button = new Button({
        label: 'Cancel',
        type: 'button',
        onClick: function () {
            dialog.destroyRecursive();
        }
    }, 'vacation_cancel_button');
    cancel_button.startup();


    vacation_form.startup();


});
</script>
