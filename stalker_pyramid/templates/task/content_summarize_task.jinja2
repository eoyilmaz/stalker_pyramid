<div id='task_details_content_pane'>
    <div style="background-color: #9d9d9d" class="page_title"></div>
    {# Avatar #}
    <div id='task_avatar'
         class='thumbnail'>
        {% if not task.thumbnail %}
            <img src='{{ request.static_url("stalker:static/stalker/images/Placeholder_shot.png") }}'
                 alt=''
                 style='width:auto; height:150px;'>
        {% else %}
            <img src='{{ task.thumbnail.full_path }}'
                 alt=''
                 style='width:auto; height:150px;'>
        {% endif %}
        <div class='thumbnail_menu'>&nbsp</div>
    </div>

    <div id='task_summary_chart1'
         style='width: 200px;
                height: 200px;
                position: absolute;
                top: 10px;
                right: 0;'></div>

    {# Basic Info #}
    <div id='task_info' class='summary_info'>
        <h4 style='margin: 0; text-align: left'>{{ task.name }}</h4>
        <table>
            <tr>
                <td style='text-align: right'><b>Project</b></td>
                <td>&nbsp;</td>
                <td>
                    {% if has_permission('Read_Project') %}
                        <a href="javascript:redirectLink('central_content',
                        'view/project/{{ task.project.id }}');">
                            {{ task.project.name }}
                        </a>
                    {% else %}
                        {{ task.project.name }}
                    {% endif %}
                </td>
            </tr>
            <tr>
                <td style='text-align: right'><b>Status</b></td>
                <td>&nbsp;</td>
                <td>{{ task.status.name }}</td>
            </tr>
            <tr>
                <td style='text-align: right'><b>Created By</b></td>
                <td>&nbsp;</td>
                <td>
                    {% if has_permission('Read_User') %}
                        <a href="javascript:redirectLink('central_content',
                        'view/user/{{ task.created_by.id }}');">
                            {{ task.created_by.name }}
                        </a>
                    {% else %}
                        {{ task.created_by.name }}
                    {% endif %}

                </td>
            </tr>
            <tr>
                <td style='text-align: right'><b>Description</b></td>
                <td>&nbsp;</td>
                <td>{{ task.description }}</td>
            </tr>
            <tr>
                <td style='text-align: right'><b>Starts</b></td>
                <td>&nbsp;</td>
                <td>{{ task.start }}</td>
            </tr>
            <tr>
                <td style='text-align: right'><b>Ends</b></td>
                <td>&nbsp;</td>
                <td>{{ task.end }}</td>
            </tr>

        </table>
        {% if has_permission('Update_Task') %}
            <button id='update_task_button'>Update</button>
        {% endif %}
    </div>
    {#  Charts  #}

</div>

<script type="text/javascript">
    require([
        'dojox/charting/Chart',
        'dojox/charting/themes/MiamiNice',
        'dojox/charting/plot2d/Pie',
        'dojox/charting/action2d/MoveSlice',
        'dijit/form/Button',
        'stalker/thumbnailMenu',

        'stalker/dialogs',
        'stalker/dialogCaller',

        'dojo/domReady!'
    ], function (Chart, theme, PiePlot, MoveSlice, Button, thumbnailMenu,
                 dialogs, dialogCaller) {

        // Create the chart within it's "holding" node
        var pieChart = new Chart('task_summary_chart1');

        // Add the only/default plot
        pieChart.setTheme(theme);

        // Add the only/default plot
        pieChart.addPlot("default", {
            type: PiePlot, // our plot2d/Pie module reference as type value
            radius: 80,
            fontColor: "black",
            labelOffset: 0
        });

        var chartData = [
            {{ task.total_logged_seconds }},
            {{ task.remaining_seconds }}];
        {#        ,#}
        {#            { stroke: { color: "green" }, fill: "lightgreen" },#}
        {#            { stroke: { color: "red" }, fill: "lightred" }#}
        {#        ];#}

        // Add the series of data
        pieChart.addSeries('January', chartData);

        // Create the slice mover
        var mag = new MoveSlice(pieChart, 'default');

        // Render the chart!
        pieChart.render();

        var task_summary_updater = function () {
            // refresh the content pane
            // get the content pane by id, alternatively we can use the parent of the button
            var content_pane = update_task_button.getParent();
            // refresh the pane
            content_pane.refresh();
        };

        {% if has_permission('Update_Task') %}
            // UPDATE TASK BUTTON
            var update_task_button = dialogCaller({
                label: 'Update',
                dialog_id: 'update_task_dialog',
                content_creator: dialogs.update_task_dialog,
                attach_to: 'update_task_button',
                data_id: {{ task.id }},
                related_field_updater: task_summary_updater
            });
            update_task_button.startup();

            thumbnailMenu({
                targetNodeIds: ['task_avatar'],
                selector: '.thumbnail_menu',
                entity_id: {{ task.id }},
                related_field_updater: function () {
                    var content_pane = update_task_button.getParent();
                    if (content_pane != null) {
                        content_pane.refresh();
                    }
                }
            });
        {% endif %}


    });
</script>
