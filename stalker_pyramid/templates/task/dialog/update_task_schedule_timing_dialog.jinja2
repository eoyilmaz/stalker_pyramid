<script class="dialog_loaded"></script>

<div class='row-fluid'>
    <div class='span12'>

        <form id='task_form'
              class='form-horizontal'
              role='form'
              method='post'
              action="">

                {# Schedule Timing #}
                <div class='control-group'>
                    <label class='span3 control-label' for='task_schedule_timing'>Schedule Timing</label>
                    <div class='span9'>
                        <div class='span2'>
                            <input id='task_schedule_timing'
                                   class='input-block-level'
                                   name='schedule_timing'
                                   type='text'
                                   value={{ entity.schedule_timing }}
                                   min=1
                                   required>
                        </div>
                        <div class='span3'>
                            <select id='task_schedule_unit'
                                   class='input-block-level'
                                   name='schedule_unit'>
                                <option value='min'>Minutes</option>
                                <option value='h'>Hours</option>
                                <option value='d'>Days</option>
                                <option value='w'>Weeks</option>
                                <option value='m'>Months</option>
                                <option value='y'>Years</option>
                            </select>
                        </div>
                        <div class='span3'>
                            <select id='task_schedule_model'
                                    class='input-block-level'
                                    name='schedule_model'>
                                <option value='effort'>Effort</option>
                                <option value='duration'>Duration</option>
                                <option value='length'>Length</option>
                            </select>
                        </div>
                    </div>
                </div>

                {# Update Bid #}
                <div class='control-group'>
                    <label class="span3 control-label" for="task_update_bid">Update Bid</label>
                    <div class="span9">
                        <input id="task_update_bid"
                               type="checkbox"
                               name="update_bid"
                               />
                    </div>
                </div>
        </form>

    </div>
</div>

<script src='{{ request.static_url("stalker_pyramid:static/ace/js/chosen.jquery.min.js") }}'></script>
<script src='{{ request.static_url("stalker_pyramid:static/ace/js/date-time/bootstrap-datepicker.min.js") }}'></script>
<script src='{{ request.static_url("stalker_pyramid:static/ace/js/date-time/moment.min.js") }}'></script>
<script src='{{ request.static_url("stalker_pyramid:static/ace/js/date-time/daterangepicker.min.js") }}'></script>
<script src='{{ request.static_url("stalker_pyramid:static/ace/js/bootstrap-colorpicker.min.js") }}'></script>
<script src='{{ request.static_url("stalker_pyramid:static/ace/js/jquery.autosize-min.js") }}'></script>
<script src='{{ request.static_url("stalker_pyramid:static/ace/js/jquery.inputlimiter.1.3.1.min.js") }}'></script>
<script src='{{ request.static_url("stalker_pyramid:static/ace/js/jquery.maskedinput.min.js") }}'></script>
<script src='{{ request.static_url("stalker_pyramid:static/stalker/js/bootstrap-tag.js") }}'></script>
<script src='{{ request.static_url("stalker_pyramid:static/ace/js/jquery.validate.min.js") }}'></script>
<script src='{{ request.static_url("stalker_pyramid:static/ace/js/additional-methods.min.js") }}'></script>
<script src='{{ request.static_url("stalker_pyramid:static/ace/js/fuelux/fuelux.spinner.min.js") }}'></script>


<script>
    function init_dialog(){
        console.log('initialize task dialog start');

        // update dialog header
        $('#dialog_template_label').text('Update Schedule Timing Dialog');



        var priority = 500;
        var schedule_timing = 1;
        var schedule_unit = 'h';
        var schedule_model = 'effort';





        schedule_timing = {{ entity.schedule_timing }};
        schedule_unit = '{{ entity.schedule_unit }}';
        schedule_model = '{{ entity.schedule_model }}';



        var submit_button = $('#dialog_template_submit_button');





        {# ***************************************************************** #}
        {# Schedule Unit and Model #}
        $('#task_schedule_unit').val(schedule_unit);
        $('#task_schedule_model').val(schedule_model);



        {# ***************************************************************** #}
        {# Submit Button #}

        submit_button.on('click', function(e){
            e.stopPropagation();
            e.preventDefault();

            // disable submit button
            setTimeout(function(){submit_button.button('loading')}, 0);

            // enable fields
            var entity_type_value = $('#task_entity_type').val();

            var task_form = $('#task_form');
            var form_data = task_form.serialize();
{#            console.log('form_data :', form_data);#}

            if ( task_form.validate() ){
                // prevent multiple sends
                if (task_form.attr('is_sending') == 'true'){
                    return;
                } else {
                    task_form.attr('is_sending', true);
                }
                $.post(
                    '/tasks/{{ entity.id }}/update/schedule_timing',
                    form_data
                ).done(function(){

                    $('#dialog_template').modal('hide');

                    $('#schedule_timing_{{ entity.id }}').text($('#task_schedule_timing').val())
                    $('#schedule_unit_{{ entity.id }}').text($('#task_schedule_unit').val())

{#                    console.log($('#task_update_bid').prop('checked'))#}

                    if($('#task_update_bid').prop('checked')){
                        $('#bid_timing_{{ entity.id }}').text($('#task_schedule_timing').val())
                        $('#bid_unit_{{ entity.id }}').text($('#task_schedule_unit').val())
                    }


                }).fail(function(jqXHR){
                    task_form.attr('is_sending', false);
                    bootbox.alert(jqXHR.responseText);
                    setTimeout(function(){submit_button.button('reset')}, 0);
                });
            }
        });

        $('#task_form').validate({
            errorElement: 'span',
            errorClass: 'help-inline',
            focusInvalid: true,
            rules: {
                name: {
                    required: true
                },
                code: {
                    required: true
                },
                depends_to: {
                    required: false
                },
                comment: {
                    required: true
                },
                state: {
                    required: true
                },
                platform: {
                    required: true
                },
                subscription: {
                    required: true
                },
                gender: 'required',
                agree: 'required'
            },

            messages: {
            },

            invalidHandler: function (event, validator) { //display error alert on form submit
                $('.alert-error', $('.login-form')).show();
            },

            highlight: function (e) {
                $(e).closest('.control-group').removeClass('info').addClass('error');
            },

            success: function (e) {
                $(e).closest('.control-group').removeClass('error').addClass('info');
                $(e).remove();
            },

            errorPlacement: function (error, element) {
                if (element.is(':checkbox') || element.is(':radio')) {
                    var controls = element.closest('.controls');
                    if (controls.find(':checkbox,:radio').length > 1) controls.append(error);
                    else error.insertAfter(element.nextAll('.lbl:eq(0)').eq(0));
                }
                else if (element.is('.select2')) {
                    error.insertAfter(element.siblings('[class*="select2-container"]:eq(0)'));
                }
                else if (element.is('.chosen-select')) {
                    error.insertAfter(element.siblings('[class*="chosen-container"]:eq(0)'));
                }
                else error.insertAfter(element);
            }

        });

        console.log('initialize task dialog end')
    }
</script>

<script type="text/javascript">
    function destruct_dialog(){
        console.log('destruct task dialog start');
        // unbind events

        $('#dialog_template_submit_button').button('reset')
        $('#dialog_template_submit_button').unbind();

        // remove dialog
        $('#dialog_template').data('modal', null);
        console.log('destruct task dialog end');
    }
</script>
