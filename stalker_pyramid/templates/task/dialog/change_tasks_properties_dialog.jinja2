<script class="dialog_loaded"></script>

<div class="row-fluid" >
    <div class="row-fluid" >
        <form id='change_properties_task_form'
          class='form-horizontal'
          role='form'
          method='post' >
            <div class="control-group">
                    <label class="span3 control-label" for="task_action">Choose an action</label>
                    <div class="span9">
                        <select id='task_action'
                                class='input-block-level'>
                                <option value="change_resources">Change Resource</option>
                                <option value="change_responsible">Change Responsible</option>
                                <option value="force_status">Force Complete</option>
                                <option value="request_revisions">Request Revision</option>
                                <option value="fix_task">Fix Task</option>
                        </select>
                    </div>
            </div>
            {# Change Resources Controls #}
            <div class='control-group' id="change_users_control">
                <label class='span3 control-label' for='task_users'>Users</label>
                <div class='span9'>
                    <select id='task_users'
                            multiple=''
                            class='input-block-level tag-input-style'
                            name='user_ids'
                            data-placeholder='Resources'
                            is_updating=false></select>
                </div>
            </div>
            {# Force Status Controls #}
            <div class='control-group hide' id="force_status_control">
                <label class='span3 control-label'
                       for='force_status_note'>Note:</label>

                <div class='span9'>
                    <textarea id="force_status_note"
                              name='note'
                              class="autosize-transition span12"
                              style="overflow: hidden;
                                         word-wrap: break-word;
                                         resize: horizontal;
                                         height: 150px;"
                            ></textarea>
                </div>
            </div>
            {# Schedule Timing #}
            <div class='control-group hide' id="request_revision_control">
                <label class='span3 control-label'
                       for='task_schedule_timing'>Schedule Timing</label>

                <div class='span9'>
                    <div class='span2'>
                        <input id='task_schedule_timing'
                               class='input-block-level'
                               name='schedule_timing'
                               type='text'
                               value=1
                               min=1
                               required>
                    </div>
                    <div class='span3'>
                        <select id='task_schedule_unit'
                                class='input-block-level'
                                name='schedule_unit'>
                            <option value='min'>Minutes</option>
                            <option value='h'>Hours</option>
                            <option value='d'>Days</option>
                            <option value='w'>Weeks</option>
                            <option value='m'>Months</option>
                            <option value='y'>Years</option>
                        </select>
                    </div>
                    <div class='span3'>
                        <select id='task_schedule_model'
                                class='input-block-level'
                                name='schedule_model'>
                            <option value='effort'>Effort</option>
                            <option value='duration'>Duration</option>
                            <option value='length'>Length</option>
                        </select>
                    </div>
                </div>
            </div>
        </form>
        <div class="space-5"></div>
        <div class="hr dotted"></div>
        <div class="space-5"></div>
        <table id="grid-table"></table>
    </div>
</div>
<script src='{{ request.static_url("stalker_pyramid:static/jqGrid/js/i18n/grid.locale-en.js") }}'></script>
    <script src='{{ request.static_url("stalker_pyramid:static/jqGrid/js/jquery.jqGrid.js") }}'></script>
    <script src='{{ request.static_url("stalker_pyramid:static/stalker/js/accounting.min.js") }}'></script>

<script type="text/javascript">

    function init_dialog() {
        console.debug('starting to initialize add_task_user_dialog dialog!!!');

        $(function () {
            var label = $('#dialog_template_label');
            label.find('span').remove();
            label.append('<span>{{ tasks[0].type.name }}</span>');
            $('#dialog_template_body').attr('style', "height: auto");

            var tasks_names = [];

            tasks_names = [
                {% for task in tasks %}
                    {'id':'{{ task.id }}',
                     'name':'{{ task.parent.name}}',
                     'status_code':'{{ task.status.code}}',
                     'resources':'{% for resource in task.resources %}<a href="/users/{{ resource.id}}/view">{{resource.name}}</a><br/>{% endfor %}',
                     'responsible':'{% for resp in task.responsible %}<a href="/users/{{ resp.id}}/view">{{resp.name}}</a><br/>{% endfor %}'
                    },
                {% endfor %}
            ];

            {% for task in tasks %}
                  console.log('{{ task.status.code}}');
                {% endfor %}


            var grid_data = tasks_names;

            jQuery(function($) {
                var grid_selector = "#grid-table";

                     jQuery(grid_selector).jqGrid({
                        //direction: "rtl",
                        data: grid_data,
                        datatype: "local",
                        colNames:['Id', 'Name', 'Status', 'Resources', 'Responsible'],
                        colModel:[

                            {name:'id', index:'id', width:50, editable: false},
                            {name:'name', index:'name', width:180, editable: false, formatter:taskLabelFormatter},
                            {name:'status_code', index:'status_code',width:70, editable: false, formatter:statusLabelFormatter},
                            {name:'resources', index:'resources',width:170, editable: false},
                            {name:'responsible', index:'responsible',width:150, editable: false}

                        ],
                        viewrecords : true,
                        rowNum:grid_data.length,
                        rowList:[grid_data.length, 10, 10],
                        pager : false,
                        altRows: true,
                        multiselect: true,
                        loadonce: true,
                        height: grid_data.length*50,
                        sortname:'name',
                        footerrow: false, // set a footer row
                        userDataOnFooter: false, // the calculated sums and/or strings from server are put at footer row.
                        grouping: false,
                        gridview: true,
                        editurl: '',
                        caption: ""
                });
            });

            function taskLabelFormatter(cellvalue, options, rowObject){
                console.log(rowObject);
{#                return cellvalue;#}
                return '<a href="/tasks/'+rowObject.id+'/view">'+cellvalue+'</a>';
            }
            function statusLabelFormatter(cellvalue, options, rowObject){
                return '<span class="label label-large label-status_'+cellvalue.toLowerCase()+'">'+cellvalue+'</span>';
            }

            var task_action = $('#task_action');
            var submit_form_url = '/tasks/change/resources';
            var change_users_control =  $('#change_users_control');
            var force_status_control =  $('#force_status_control');
            var request_revision_control =  $('#request_revision_control');

            task_action.on('change', function () {

                var action = $(this).val();
                switch (action){
                    case 'change_resources':
                        submit_form_url =  '/tasks/change/resources';
                        change_users_control.show();
                        force_status_control.hide();
                        request_revision_control.hide();
                        break;
                    case 'change_responsible':
                        submit_form_url =  '/tasks/change/responsible';
                        change_users_control.show();
                        force_status_control.hide();
                        request_revision_control.hide();
                        break;
                    case 'force_status':
                        submit_form_url =  '/tasks/force_status/CMPL';
                        change_users_control.hide();
                        force_status_control.show();
                        request_revision_control.hide();
                        break;
                    case 'request_revisions':
                        submit_form_url =  '/tasks/request_revisions';
                        change_users_control.hide();
                        force_status_control.show();
                        request_revision_control.show();
                        break;
                    case 'fix_task':
                        submit_form_url =  '/tasks/fix/statuses/';
                        change_users_control.hide();
                        force_status_control.hide();
                        request_revision_control.hide();
                        break;
                }

            });

            var task_users = $('#task_users');
            task_users.chosen({
                search_contains: true,
                enable_split_word_search: true
            });

            {% raw %}
                var user_template = doT.template('<option value={{=it.id}}>{{=it.name}}</option>');
            {% endraw %}

            $.getJSON('/projects/{{ tasks[0].project.id }}/users/?simple=1').then(function(data){
                task_users.find('option').remove();

                var data_count = data.length;
                for (var i=0; i < data_count; i++){
                    task_users.append(user_template(data[i]));
                }
                task_users.trigger('liszt:updated');
             });


            var submit_button = $('#dialog_template_submit_button');
            submit_button.on('click', function (e) {

                e.stopPropagation();
                e.preventDefault();
                submit_button.button('loading');
                var task_ids = jQuery('#grid-table').jqGrid('getGridParam','selarrrow');
                var change_properties_task_form = $("#change_properties_task_form");

                $.post(
                    submit_form_url,
                    change_properties_task_form.serialize()+ '&' + $.param({'task_ids':task_ids})
                ).done(function (response_text) {
                    submit_button.button('reset');
                    $('#dialog_template').modal('hide');
                    // reload page
                    setTimeout(function () { // wait for hide event to finish
                        window.location.reload();
                    }, 0);
                }).fail(function (jqXHR) {
                    bootbox.alert(jqXHR.responseText);
                    submit_button.button('reset');
                });
            });




        });
        console.debug('finished initializing the add_task_user_dialog dialog!')
    }
</script>

<script type="text/javascript">
    function destruct_dialog() {
        $('#dialog_template_submit_button').unbind();
        $('#grid-table').unbind();
        $('#dialog_template').data('modal', null);
    }
</script>
