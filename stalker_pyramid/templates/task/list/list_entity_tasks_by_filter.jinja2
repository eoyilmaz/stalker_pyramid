<div id="loading_spinner" class="well well-sm">

    <div class="inline middle blue bigger-110"><i
            class="icon-spinner icon-spin orange bigger-125"></i>
        Loading
        content...
    </div>
</div>

<div class="row-fluid">

    <table id="items_table"
           class="table table-striped table-bordered table-hover hide">

        <thead>

        </thead>

        <tbody>

        </tbody>

    </table>
</div>


<script src='{{ request.static_url("stalker_pyramid:static/ace/js/jquery.dataTables.min.js") }}'></script>
<script src='{{ request.static_url("stalker_pyramid:static/ace/js/jquery.dataTables.bootstrap.js") }}'></script>
<script src='{{ request.static_url("stalker_pyramid:static/stalker/js/dataTable_num-html_sort.js") }}'></script>


<script>
    function init_html_modal() {
        console.debug('starting to initialize init_html_modal dialog!!!');

        {% if filter.entity_type=='Status' %}

            $('#html_template_label').find('span').remove();
            $('#html_template_label').append('<span>{{ filter.name }}</span>')

            $('#html_template_header').attr('class', 'table-header header-color-' + '{{ filter.html_class }}')


        {% endif %}



        $(document).ready(function () {

            var query_str = '';

            {% if entity.entity_type == 'User' %}

                query_str = 'resource_id={{ entity.id }}'

            {% elif entity.entity_type == 'Project'%}

                query_str = 'project_id={{ entity.id }}'

            {% endif %}

            {% if filter.entity_type == 'User' %}

                query_str = 'responsible_id={{ filter.id }}'

            {% elif filter.entity_type == 'Status'%}

                query_str += '&status={{ filter.code }}'

            {% endif %}

            console.log('/tasks/?'+query_str)


            // fill items table with dynamic data
            $.getJSON('/tasks/?has_resource=1&leaf_only=1&'+query_str).then(function (data) {

                var thead_template = doT.template($('#tmpl_itemThead').html());
                var table_head = $('#items_table>thead');
                table_head.append(thead_template({}));


                var items = data;
                var row_template = doT.template($('#tmpl_itemRow').html());


                // wait until document is ready
                $(function () {

                    var i;
                    var table_body = $('#items_table>tbody');
                    for (i = 0; i < data.length; i++) {
                        // fix dates
                        data[i].start = new Date(data[i].start).format('yyyy-mm-dd HH:MM');

                        if (data[i].thumbnail_full_path == null) {
                            data[i].thumbnail_full_path = '{{ request.static_url("stalker_pyramid:static/stalker/images/T_NO_IMAGE.gif") }}';
                        }
                        else {
                            data[i].thumbnail_full_path = '/' + data[i].thumbnail_full_path;
                        }

                        data[i].hour_based_on_bid = time_to_complete(calculate_seconds(data[i].bid_timing, data[i].bid_unit),data[i].total_logged_seconds,'h')
                        data[i].hour_to_complete = time_to_complete(data[i].schedule_seconds, data[i].total_logged_seconds,'h')

                        if(data[i].status == 'wip'){
                            var resources = data[i].resources;
                            for(var r=0;r<resources.length; r++){
                                if(resources[r].id == '{{ logged_in_user.id }}' ){
                                    data[i].request_review ="/tasks/"+data[i].id+"/request_review/dialog?came_from={{ request.current_route_path() }}&request_review_mode=Final"
                                }

                            }
                        }
                        if(data[i].status == 'prev'){
                            var responsible = data[i].resources;
                            for(var r=0;r<responsible.length; r++){
                                if(responsible[r].id == '{{ logged_in_user.id }}' ){
                                    data[i].review ="/tasks/"+data[i].id+"/review/dialog?came_from={{ request.current_route_path() }}"
                                }

                            }
                        }

                        if(data[i].status == 'wip' && data[i].completed == 100){
                            var resources = data[i].resources;
                            for(var r=0;r<resources.length; r++){
                                if(resources[r].id == '{{ logged_in_user.id }}' ){
                                    data[i].request_extra_time ="/tasks/"+data[i].id+"/request_extra_time/dialog?came_from={{ request.current_route_path() }}"
                                }

                            }
                        }




                        data[i].came_from = '{{ request.current_route_path() }}'

                        // append it to the table
                        table_body.append(row_template(data[i]));
                    }

                    var oTable1 = $('#items_table').dataTable();

                    $('#items_table').show();
                    $('#loading_spinner').hide();

                });
            });
        });

        console.debug('finished initializing the init_html_modal dialog!')
    }
</script>

<script type="text/javascript">
    function destruct_html_modal() {

        $('#items_table').unbind()

        $('#html_template').data('modal', null);

    }
</script>
