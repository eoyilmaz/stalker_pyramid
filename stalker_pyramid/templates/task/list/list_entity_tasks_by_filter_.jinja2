<script class="dialog_loaded"></script>
<div class="row-fluid">
    <div class="widget-box">
        <div class="widget-header widget-header-small header-color-status_{{ filter.code.lower() }}">
            <h5 id="items_header">{{ filter.name }}</h5>
            <div class="widget-toolbar">
                <div class="space-5"></div>
                {% if (logged_in_user in entity.resources or logged_in_user in entity.responsible) or has_permission('Update_Task') %}

                    {%if filter.code == 'WFD' or filter.code == 'RTS'%}
                        <button
                                id="remove_resource_btn"
                                class="btn btn-small btn-info tooltip-success"
                                title="Remove Task"
                                >
                            <i class="icon-user"></i>
                        </button>
                    {% endif %}
                    {%if filter.code == 'WIP' or filter.code == 'PREV' or filter.code == 'HREV' %}
                        <button id="force_complete_btn"
                                class="btn btn-small btn-success tooltip-success"
                                title="Force Complete"
                                >
                            <i class="icon-ok"></i>
                        </button>
                        <button
                                id="remove_resource_btn"
                                class="btn btn-small btn-info tooltip-success"
                                title="Remove Task"
                                >
                            <i class="icon-user"></i>
                        </button>
                    {% endif %}
                    {%if filter.code == 'CMPL'%}
                        <button
                                id="request_revisions_btn"
                                class="btn btn-small btn-purple tooltip-success"
                                title="Request Revisions">
                            <i class="icon-comment-alt bigger-110"></i>
                        </button>
                        <button
                                id="remove_resource_btn"
                                class="btn btn-small btn-info tooltip-success"
                                title="Remove Task"
                                >
                            <i class="icon-user"></i>
                        </button>
                    {% endif %}
                {% endif %}


            </div>
        </div>
        <div class="widget-body">
            <div class="widget-main no-padding">
                {% include 'components/jgrid_table.jinja2' %}
            </div>
        </div>
    </div>
</div>

<script src='{{ request.static_url("stalker_pyramid:static/jqGrid/js/i18n/grid.locale-en.js") }}'></script>
<script src='{{ request.static_url("stalker_pyramid:static/jqGrid/js/jquery.jqGrid.js") }}'></script>
<script src='{{ request.static_url("stalker_pyramid:static/jqGrid/js/jquery.jqGrid.min.js") }}'></script>
<script src='{{ request.static_url("stalker_pyramid:static/jqGrid/plugins/ui.multiselect.js") }}'></script>



<script>
    function init_html_modal() {

        console.debug('starting to initialize init_html_modal dialog!!!');
        var query_str = '';

        {% if query_str %}
            query_str = "{{ query_str }}";
        {% else %}
            {% if filter.entity_type == 'Status' %}
                var template_label = $('#html_template_label');
                template_label.find('span').remove();
                {% if is_warning_list %}
                    template_label.append('<span>Black List<small> !! these tasks should have been sent to review or an extra time request should have been made for them !!</small></span>');
                    $('#html_template_header').attr('class', 'table-header header-color-dark');
                {% else %}
                    template_label.append('<span>{{ filter.name }}</span>');
                    $('#html_template_header').attr('class', 'table-header header-color-status_{{ filter.code.lower() }}');
                {% endif %}
            {% endif %}

            {% if entity.entity_type == 'User' %}
                query_str = 'has_resource=1&leaf_only=1&resource_id={{ entity.id }}';
            {% elif entity.entity_type == 'Project'%}
                query_str = 'has_resource=1&leaf_only=1&project_id={{ entity.id }}';
            {% endif %}

            {% if filter.entity_type == 'User' %}
                query_str = 'has_resource=1&leaf_only=1&responsible_id={{ filter.id }}';
            {% elif filter.entity_type == 'Status'%}
                query_str += '&status={{ filter.code }}';
            {% endif %}
        {% endif %}


        var colNames = ['Name', 'Bid', 'ST'];
        var colModel = [
                        {
                            name:'full_path',
                            index:'full_path',
                            width:220,
                            editable: false,
                            formatter:taskLabelFormatter
                        },
                        {
                            name:'hour_based_on_bid',
                            index:'hour_based_on_bid',
                            width:25, editable: false,
                            formatter:bidFormatter
                        },
                        {
                            name:'hour_to_complete',
                            index:'hour_to_complete',
                            width:25,
                            editable: false
                        }
                ];

        var sortingParameters = [[0, 'asc']];
        var tableDataAddress = '/tasks/?' + query_str;
        $.getJSON(tableDataAddress).then(function (data) {

            console.log("tableDataAddress is loaded");
            var total_remain_st_seconds = 0;
            var total_remain_bid_seconds = 0;
            for (var i = 0; i < data.length; i++) {
                // fix dates

                data[i].start = new Date(data[i].start).format('yyyy-mm-dd HH:MM');
                if(data[i].end){
                    data[i].end = new Date(data[i].end).format('yyyy-mm-dd HH:MM');
                }

                data[i].project_name = get_project_name(data[i].project_id);

                var bid_seconds = to_seconds(
                                        data[i].bid_timing,
                                        data[i].bid_unit
                                );

                total_remain_bid_seconds +=(bid_seconds-data[i].total_logged_seconds);

                data[i].hour_based_on_bid = meaningful_time_between(
                                                    bid_seconds,
                                                    data[i].total_logged_seconds
                                            );
                var st_seconds = to_seconds(
                                        data[i].schedule_timing,
                                        data[i].schedule_unit
                                );

                total_remain_st_seconds +=(st_seconds-data[i].total_logged_seconds);

                data[i].hour_to_complete = meaningful_time_between(
                                               st_seconds,
                                               data[i].total_logged_seconds
                                           );

                if(bid_seconds < data[i].total_logged_seconds){
                     data[i].bid_stat = '#ff0000'
                }
            }

            var footerData = {
                full_path:'TOTAL',
                hour_based_on_bid: meaningful_time(total_remain_bid_seconds),
                hour_to_complete: meaningful_time(total_remain_st_seconds)
            };


            loadTableData(
                    data,
                    "grid-table",
                    colNames,
                    colModel,
                    footerData
                );
        });


        function taskLabelFormatter(cellvalue, options, rowObject){

{#                return cellvalue;#}
                return '<a href="/tasks/'+rowObject.id+'/view">'+cellvalue+'</a>';
        }


        function bidFormatter(cellvalue, options, rowObject){

{#                return cellvalue;#}
                return '<span style="background-color: '+rowObject.bid_stat+'; opacity:0.8;">'+cellvalue+'</span>';
        }

        var submit_form_url = '/tasks/force_status/CMPL/dialog';
        var force_complete_btn = $('#force_complete_btn');
        if(force_complete_btn){
            force_complete_btn.on('click', function(){
                submit_form_url = '/tasks/force_status/CMPL/dialog';
                submit_action()
            });
        }

        var request_revisions_btn = $('#request_revisions_btn');
        if(request_revisions_btn){
            request_revisions_btn.on('click', function(){
                submit_form_url = '/tasks/request_revisions/dialog';
                submit_action()
            });
        }

        var remove_resource_btn = $('#remove_resource_btn');
        if(remove_resource_btn){
            remove_resource_btn.on('click', function(){
                submit_form_url = '/tasks/remove/resources/{{ entity.id }}/dialog';
                submit_action()
            });
        }

        function submit_action(){

            var event_dialog = $('#dialog_template');
            var selected_task_ids = jQuery('#grid-table').jqGrid('getGridParam','selarrrow');

            var _query = '?entity_id={{ entity.id }}';

            for (var i=0; i<selected_task_ids.length; i++){
               _query +='&task_ids='+selected_task_ids[i];
            }

            event_dialog.modal({
                'remote': submit_form_url+_query
            });
        }
        console.debug('finished initializing the init_html_modal dialog!')
    }
</script>

<script type="text/javascript">
    function destruct_html_modal() {
        $('#items_table').unbind();
        $('#html_template').data('modal', null);
    }
</script>
