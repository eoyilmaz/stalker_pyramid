<form id='user_form'
      class='form-horizontal'
      role='form'
      method="post"
        {% if mode.title() == 'Create' %}
      action="{{ request.route_url(mode.title().lower()+'_user') }}"
        {% elif mode.title() == 'Update' %}
      action="{{ request.route_url(mode.title().lower()+'_user', id=user.id) }}"
        {% endif %}
        >
    <div class="row-fluid">
        <div class="span3">
            {##}
            {#        <div class="span3">#}
            {#            <input id='thumbnail' name='thumbnail'#}
            {#                   type="file"/>#}
            {#        </div>#}
            <span class="profile-picture">
                <img id="avatar"
                     class="editable"
                     alt="Alex's Avatar"
                     src="{%- if user.thumbnail -%}
                                        /{{ user.thumbnail.full_path }}
                                    {%- else -%}
                                        {{ request.static_url("stalker_pyramid:static/stalker/images/Placeholder_0.png") }}
                                    {%- endif -%}"/>
            </span>
        </div>

        <div class="span6">
            {# Name #}
            <div class="control-group">
                <label class="span2 control-label"
                       for="user_name">Name</label>

                <div class="span6">
                    <input id="user_name"
                           name='name'
                           type="text"
                           class="form-control"
                           placeholder="Name"
                            {% if mode.title() == 'Update' %}
                           value='{{ user.name }}'
                            {% endif %}
                           required>
                </div>
            </div>
            {# Login #}
            <div class="control-group">
                <label for="user_login"
                       class="span2 control-label">Login</label>

                <div class="span6">
                    <input id="user_login"
                           name='login'
                           type="text"
                           class="form-control"
                           placeholder="Login"
                            {% if mode.title() == 'Update' %}
                           value='{{ user.login }}'
                            {% endif %}
                           required>
                </div>
            </div>
        </div>

    </div>
    <h4 class="header blue bolder smaller">Contact</h4>

    <div class="row-fluid">
        {# Email #}
        <div class="control-group">
            <label for="user_email"
                   class="span2 control-label">Email</label>

            <div class="span6">
                      <span class="input-icon input-icon-left">
                          <input id="user_email"
                                 name='email'
                                 type="email"
                                 class="form-control"
                                 placeholder="Email"
                                  {% if mode.title() == 'Update' %}
                                 value='{{ user.email }}'
                                  {% endif %}
                                 required>
                          <i class="icon-envelope icon-flip-horizontal"></i>
                       </span>
            </div>
        </div>
    </div>

    <h4 class="header blue bolder smaller">Password</h4>

    <div class="row-fluid">
        {# Password #}
        <div class="control-group">
            <label for="user_password"
                   class="span2 control-label">Password</label>

            <div class="span6">
                <input id="user_password"
                       name='password'
                       type="password"
                       class="form-control"
                       placeholder="Password"
                        {% if mode.title() == 'Update' %}
                       value='DONTCHANGE'
                        {% endif %}
                       required>
            </div>
        </div>

        {# Confirm Password #}
        <div class="control-group">
            <label for="user_password2"
                   class="span2 control-label">Confirm Password</label>

            <div class="span6">
                <input id="user_password2"
                       name='password2'
                       type="password"
                       class="form-control"
                       placeholder="Confirm Password"
                        {% if mode.title() == 'Update' %}
                       value='DONTCHANGE'
                        {% endif %}
                       required>
            </div>
        </div>

    </div>


    <input type='hidden' name='came_from' value='{{ came_from }}'>

    {#    Form Buttons #}
    <div class="form-actions">
        <button type="submit" class="btn btn-info btn-primary">
            <i class="icon-ok"></i>Ok
        </button>
        <button type="button" class="btn">
            <i class="icon-remove"></i>Cancel
        </button>
    </div>
</form>

<script src='{{ request.static_url("stalker_pyramid:static/ace/js/jquery.validate.min.js") }}'></script>
<script src='{{ request.static_url("stalker_pyramid:static/ace/js/jquery.gritter.min.js") }}'></script>

<script src='{{ request.static_url("stalker_pyramid:static/ace/js/jquery.ui.touch-punch.min.js") }}'></script>
<script src='{{ request.static_url("stalker_pyramid:static/ace/js/x-editable/bootstrap-editable.min.js") }}'></script>
<script src='{{ request.static_url("stalker_pyramid:static/ace/js/x-editable/ace-editable.min.js") }}'></script>


<script type="text/javascript">
$(document).ready(function () {

    $.fn.editable.defaults.mode = 'inline';
    $.fn.editableform.loading = "<div class='editableform-loading'><i class='light-blue icon-2x icon-spinner icon-spin'></i></div>";
    $.fn.editableform.buttons = '<button type="submit" class="btn btn-info editable-submit"><i class="icon-ok icon-white"></i></button>' +
            '<button type="button" class="btn editable-cancel"><i class="icon-remove"></i></button>';

    try {//ie8 throws some harmless exception, so let's catch it

        //it seems that editable plugin calls appendChild, and as Image doesn't have it, it causes errors on IE at unpredicted points
        //so let's have a fake appendChild for it!


        var last_gritter
        $('#avatar').editable({
            type: 'image',
            name: 'avatar',
            value: null,
            image: {
                //specify ace file input plugin's options here
                btn_choose: 'Change Avatar',
                droppable: true,
                /**
                 //this will override the default before_change that only accepts image files
                 before_change: function(files, dropped) {
return true;
},
                 */

                //and a few extra ones here
                name: 'avatar',//put the field name here as well, will be used inside the custom plugin
                max_size: 110000,//~100Kb
                on_error: function (code) {//on_error function will be called when the selected file has a problem
                    if (last_gritter) $.gritter.remove(last_gritter);
                    if (code == 1) {//file format error
                        last_gritter = $.gritter.add({
                            title: 'File is not an image!',
                            text: 'Please choose a jpg|gif|png image!',
                            class_name: 'gritter-error gritter-center'
                        });
                    } else if (code == 2) {//file size rror
                        last_gritter = $.gritter.add({
                            title: 'File too big!',
                            text: 'Image size should not exceed 100Kb!',
                            class_name: 'gritter-error gritter-center'
                        });
                    }
                    else {//other error
                    }
                },
                on_success: function () {
                    $.gritter.removeAll();
                }
            },
            url: function (params) {
                //please modify submit_url accordingly
                var submit_url = '/upload_files';
                var deferred;


//if value is empty, means no valid files were selected
//but it may still be submitted by the plugin, because "" (empty string) is different from previous non-empty value whatever it was
//so we return just here to prevent problems
                var value = $('#avatar').next().find('input[type=hidden]:eq(0)').val();
                if (!value || value.length == 0) {
                    deferred = new $.Deferred
                    deferred.resolve();
                    return deferred.promise();
                }

                var $form = $('#avatar').next().find('.editableform:eq(0)')
                var file_input = $form.find('input[type=file]:eq(0)');

//user iframe for older browsers that don't support file upload via FormData & Ajax
                if (!("FormData" in window)) {
                    deferred = new $.Deferred

                    var iframe_id = 'temporary-iframe-' + (new Date()).getTime() + '-' + (parseInt(Math.random() * 1000));
                    $form.after('<iframe id="' + iframe_id + '" name="' + iframe_id + '" frameborder="0" width="0" height="0" src="about:blank" style="position:absolute;z-index:-1;"></iframe>');
                    $form.append('<input type="hidden" name="temporary-iframe-id" value="' + iframe_id + '" />');
                    $form.next().data('deferrer', deferred);//save the deferred object to the iframe
                    $form.attr({'method': 'POST', 'enctype': 'multipart/form-data',
                        'target': iframe_id, 'action': submit_url});

                    $form.get(0).submit();

                    //if we don't receive the response after 60 seconds, declare it as failed!
                    setTimeout(function () {
                        var iframe = document.getElementById(iframe_id);
                        if (iframe != null) {
                            iframe.src = "about:blank";
                            $(iframe).remove();

                            deferred.reject({'status': 'fail', 'message': 'Timeout!'});
                        }
                    }, 60000);
                }
                else {
                    var fd = null;
                    try {
                        fd = new FormData($form.get(0));
                    } catch (e) {
                        //IE10 throws "SCRIPT5: Access is denied" exception,
                        //so we need to add the key/value pairs one by one
                        fd = new FormData();
                        $.each($form.serializeArray(), function (index, item) {
                            fd.append(item.name, item.value);
                        });
                        //and then add files because files are not included in serializeArray()'s result
                        $form.find('input[type=file]').each(function () {
                            if (this.files.length > 0) fd.append(this.getAttribute('name'), this.files[0]);
                        });
                    }

                    //if file has been drag&dropped , append it to FormData
                    if (file_input.data('ace_input_method') == 'drop') {
                        var files = file_input.data('ace_input_files');
                        if (files && files.length > 0) {
                            fd.append(file_input.attr('name'), files[0]);
                        }
                    }

                    deferred = $.ajax({
                        url: submit_url,
                        type: 'POST',
                        processData: false,
                        contentType: false,
                        dataType: 'json',
                        data: fd,
                        xhr: function () {
                            var req = $.ajaxSettings.xhr();
                            /*if (req && req.upload) {
                             req.upload.addEventListener('progress', function(e) {
                             if(e.lengthComputable) {
                             var done = e.loaded || e.position, total = e.total || e.totalSize;
                             var percent = parseInt((done/total)*100) + '%';
                             //bar.css('width', percent).parent().attr('data-percent', percent);
                             }
                             }, false);
                             }*/
                            return req;
                        },
                        beforeSend: function () {
                            //bar.css('width', '0%').parent().attr('data-percent', '0%');
                        },
                        success: function () {
                            //bar.css('width', '100%').parent().attr('data-percent', '100%');
                        }
                    })
                }


                deferred.done(function (res) {
                    if (res.status == 'OK') $('#avatar').get(0).src = res.url;
                    else alert(res.message);
                }).fail(function (res) {
                            alert("Failure");
                        });


                return deferred.promise();
            },

            success: function (response, newValue) {
            }
        })
    } catch (e) {
    }
});

{# Thumbnail #}
{#    $(document).ready(function () {#}
{#        $('#thumbnail').ace_file_input({#}
{#            style: 'well',#}
{#            btn_choose: 'Change Avatar',#}
{#            btn_change: null,#}
{#            no_icon: 'icon-picture',#}
{#            droppable: true,#}
{#            thumbnail: 'fit'#}
{#        });#}
{#    });#}

{# Form #}
$(document).ready(function () {

    $('#user_form').validate({
        errorElement: 'span',
        errorClass: 'help-inline',
        focusInvalid: true,
        rules: {
            email: {
                required: true,
                email: true
            },
            password: {
                required: true,
                minlength: 5
            },
            password2: {
                required: true,
                minlength: 5,
                equalTo: "#user_password"
            },
            name: {
                required: true
            },
            login: {
                required: true
            }
        },

        messages: {
            email: {
                required: "Please provide a valid email.",
                email: "Please provide a valid email."
            },
            password: {
                required: "Please specify a password.",
                minlength: "Please specify a secure password."
            }
        },

        invalidHandler: function (event, validator) { //display error alert on form submit
            $('.alert-error', $('.login-form')).show();
        },

        highlight: function (e) {
            $(e).closest('.control-group').removeClass('info').addClass('error');
        },

        success: function (e) {
            $(e).closest('.control-group').removeClass('error').addClass('info');
            $(e).remove();
        },

        errorPlacement: function (error, element) {
            if (element.is(':checkbox') || element.is(':radio')) {
                var controls = element.closest('.controls');
                if (controls.find(':checkbox,:radio').length > 1) controls.append(error);
                else error.insertAfter(element.nextAll('.lbl:eq(0)').eq(0));
            }
            else if (element.is('.select2')) {
                error.insertAfter(element.siblings('[class*="select2-container"]:eq(0)'));
            }
            else if (element.is('.chosen-select')) {
                error.insertAfter(element.siblings('[class*="chosen-container"]:eq(0)'));
            }
            else error.insertAfter(element);
        },

        submitHandler: function (form) {
            form.submit();
        },

        invalidHandler: function (form) {
        }
    });
});

</script>
