{# Stalker Pyramid a Web Base Production Asset Management System
 Copyright (C) 2009-2013 Erkan Ozgur Yilmaz
 
 This file is part of Stalker Pyramid.
 
 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free Software Foundation;
 version 2.1 of the License.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.

 You should have received a copy of the GNU Lesser General Public
 License along with this library; if not, write to the Free Software
 Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
#}
<div id='view_users' style="width: 100%; height: 100%">
    {% if has_permission('Update_User') %}
        <button id='view_users_append_user_button'>Append User</button>
    {% endif %}
    <div style='width:100%; height: 100%; position: absolute;'>
        <div id='users_data_grid'
             style="position: static; width: 100%; height: 100%;"></div>
    </div>
</div>

<script type='text/javascript'>
    require([
        "dgrid/List",
        "dgrid/Grid",
        "dgrid/Selection",
        "dgrid/Keyboard",
        'dgrid/extensions/ColumnResizer',
        "dojo/_base/declare",

        'dojo/store/JsonRest',

        'stalker/dialogs',
        'stalker/fieldUpdater',
        'stalker/dialogCaller',

        'dojo/domReady!'
    ], function (List, Grid, Selection, Keyboard, ColumnResizer, declare,
                 JsonRest, dialogs, fieldUpdater, dialogCaller) {

        var StandardGrid = declare([Grid, Selection, Keyboard, ColumnResizer]);
        var users_DataGrid = new StandardGrid({
            id: 'users_data_grid',
            width: '100%',
            autoHeight: true
        }, 'users_data_grid');

        {% if entity %}
            {% if has_permission('Update_' + entity.entity_type ) and has_permission('Update_User') %}
                var append_user_button = dialogCaller({
                    label: 'Append User',
                    dialog_id: 'append_user_dialog',
                    content_creator: dialogs.append_user_dialog,
                    attach_to: 'view_users_append_user_button',
                    related_field_updater: users_DataGrid_updater,
                    data_id: '{{ entity.id }}'
                });
                append_user_button.startup();
            {% endif %}
        {% endif %}

        function users_DataGrid_updater() {
            var target;
        
            {% if entity %}
                target = '{{ request.route_url('get_entity_users', id=entity.id) }}';
            {% else %}
                target = '{{ request.route_url('get_users') }}';
            {% endif %}

            var user_memory = new JsonRest({
                target: target
            });

            user_memory.query().then(function (data) {


                var columns = [
                    {
                        label: "Thumbnail",
                        field: 'thumbnail',
                        sortable: false,
                        get: function (object) {
                            return object; // return entire item for formatter to use
                        },
                        formatter: function (object) {
                            var path = '{{ request.static_url("stalker_pyramid:static/stalker/images/Placeholder_0.png") }}';
                            if (object.thumbnail_path) {
                                path = object.thumbnail_path;
                            }
                            return '<img width= "60px"; src="' + path + '">';
                        }
                    },
                    {
                        field: 'name',
                        label: "Name",
                        get: function (object) {
                            return object; // return entire item for formatter to use
                        },
                        formatter: function (value) {

                            {% if has_permission('Read_User') %}

                                var targetPane = "'central_content'";
                                var address = "'users/" + value.id + "/view'";

                                return '<a href="javascript:redirectLink(' + targetPane + ',' + address + ');">' + value.name + '</a><br/>(' + value.login + ')';
                            {% else %}
                                return '<span>' + value.name + '</span><br/>(' + value.login + ')';
                            {% endif %}
                        }
                    },
                    {
                        field: 'email',
                        label: "E-mail"
                    },
                    {
                        field: 'tasksCount',
                        label: "Tasks"
                    },
                    {
                        field: 'departments',
                        label: "Departments",
                        get: function (object) {
                            return object; // return entire item for formatter to use
                        },
                        formatter: function (object) {
                            var return_value = '';
                            var department;
                            var dep_count = object.departments.length;
                            var rendered_template = '';
                            for (var i=0; i< dep_count; i++) {
                                department = object.departments[i];
                                // render department template
                                department.targetPane = 'central_content';
                                department.address = 'departments/' + department.id + '/view';
                                rendered_template = templates.departmentField(department);
                                if (i > 0){
                                     return_value += ', ';
                                }
                                return_value += rendered_template;
                            }
                            return return_value;
                        }
                    },
                    {
                        field: 'groups',
                        label: "Groups",
                        get: function (object) {
                            return object; // return entire item for formatter to use
                        },
                        formatter: function (object) {
                            var return_value = '';
                            var group;
                            var grp_count = object.groups.length;
                            for (var i=0; i< grp_count; i++) {
                                group = object.groups[i];
                                // render department template
                                group.targetPane = 'central_content';
                                group.address = 'groups/' + group.id + '/view';
                                if (i > 0){
                                     return_value += ', ';
                                }
                                return_value += templates.groupField(group);
                            }
                            return return_value;
                        }
                    },
                    {
                        field: 'ticketsCount',
                        label: "Open Tickets"
                    }
                ];


                users_DataGrid.renderArray(data);

                users_DataGrid.set('columns', columns);


            });

        }


        users_DataGrid_updater();
    });

</script>

