{% extends "base.jinja2" %}

{# PRE-HEADER#}
{% block pre_header %}
{#    <link rel="stylesheet"#}
{#          href='{{ request.static_url("stalker_pyramid:static/ace/css/fullcalendar.css") }}'/>#}
{#    <link rel="stylesheet"#}
{#          href='{{ request.static_url("stalker_pyramid:static/ace/css/bootstrap-timepicker.css") }}'/>#}
{#    <link rel="stylesheet"#}
{#          href='{{ request.static_url("stalker_pyramid:static/ace/css/datepicker.css") }}'/>#}
{#    <link rel="stylesheet"#}
{#          href='{{ request.static_url("stalker_pyramid:static/ace/css/daterangepicker.css") }}'/>#}

    {% include 'charts/chart_preheader.jinja2' %}

{% endblock pre_header %}

{#SIDEBAR#}
{% block sidebar %}
    {% include 'sidebar.jinja2' %}
{% endblock sidebar %}

{#BREADCRUMBS#}
{% block breadcrumbs %}
    {% set page_title='Dashboard' %}
    {% include 'breadcrumb/breadcrumbs.jinja2' %}
{% endblock breadcrumbs %}

{#PAGE-CONTENT#}
{% block page_content %}

    {% set page_title='Dashboard' %}

    {% include 'page_header.jinja2' %}
    <!--/.page-header-->

    <div class="row-fluid">
        <div class="span5">
            {% include 'task/list/list_user_tasks_by_filter.jinja2' %}
        </div>
        <div class="span5">
            <div id="calendar"></div>
        </div>
        <div class="span2">
            {% include 'note/list/list_notes.jinja2' %}
        </div>
    </div>

    <!--PAGE CONTENT ENDS-->
{% endblock page_content %}

{#EXTRA-SCRIPTS#}
{% block extrascripts %}

    {% if entity.tasks | count > 0 %}
        {% if has_permission('Update_User') or logged_in_user.id == entity.id %}
            {% set event_type='TimeLog' %}
        {% endif %}
    {% endif %}
    {% include 'calendar/calendar.jinja2' %}

    <script type="text/javascript">

        window.jQuery(document).ready(function () {
            window.jQuery.getJSON('/users/{{ entity.id }}/events/?keys=time_log&keys=vacation').then(function (data) {
                var events = [];

                var total_timelogs = 0;

                for (var i = 0; i < data.length; i++) {

                    var start_date = new Date(parseInt(data[i].start));
                    var end_date = new Date(parseInt(data[i].end));

                    var title = data[i].title;
                    if(data[i].entity_type === 'timelogs'){
                        var timelog_hours = (end_date - start_date) / 3600000;
                        total_timelogs += timelog_hours;

                        title = data[i].title;
                    }

                    var event = {
                        eId: data[i].id,
                        entity_type: data[i].entity_type,
                        title: title,
                        start: start_date,
                        end: end_date,
                        className: data[i].className,
                        allDay: data[i].allDay
                    };

                    events.push(event);
                }
                drawCalendar('calendar', events);
});
                window.jQuery(document).ready(function () {


    {#                var placeholder = window.jQuery('#piechart-placeholder').css({'width':'90%' , 'min-height':'150px'});#}
    {#                  var data = [#}
    {#                    { label: "You have worked",  data: total_timelogs, color: "#68BC31"},#}
    {#                    { label: "Your vacations",  data: 240.5, color: "#2091CF"},#}
    {#                    { label: "We don't know what you did",  data: 8.2, color: "#AF4E96"}#}
    {##}
    {#                  ];#}
    {##}
    {#                 drawPieChart(placeholder, data);#}
    {##}
    {#                 /**#}
    {#                 we saved the drawing function and the data to redraw with different position later when switching to RTL mode dynamically#}
    {#                 so that's not needed actually.#}
    {#                 */#}
    {#                 placeholder.data('chart', data);#}
    {#                 placeholder.data('draw', drawPieChart);#}
                });

    {#      TODO: Please use this version later on, which loads events dynamically #}
    {#            var events = {#}
    {#                url: '/users/{{ entity.id }}/events/',#}
    {#                type: 'POST',#}
    {#                data: {#}
    {#                    keys: ['time_log', 'vacation', 'task']#}
    {#                }#}
    {#            };#}
    {#            drawCalendar('calendar', events);#}

            });

    </script>

{% endblock extrascripts %}
