{% extends "base.jinja2" %}

{# PRE-HEADER#}
{% block pre_header %}

    <link rel="stylesheet"
          href='{{ request.static_url("stalker_pyramid:static/ace/css/fullcalendar.css") }}'/>

{% endblock pre_header %}

{#SIDEBAR#}
{% block sidebar %}

    {% include 'sidebar.jinja2' %}

{% endblock sidebar %}


{#BREADCRUMBS#}
{% block breadcrumbs %}

    {% set page_title='Dashboard' %}
    {% include 'breadcrumbs.jinja2' %}

{% endblock breadcrumbs %}

{# MODALS #}
{% block modals %}

     {% include 'time_log/timelog_dialog_template.jinja2' %}

{% endblock modals%}

{#PAGE-CONTENT#}
{% block page_content %}

    {% set page_title='Dashboard' %}
    {% include 'page_header.jinja2' %}
    <!--/.page-header-->

    <div class="row-fluid">
        <div class="span12">
            <!--PAGE CONTENT BEGINS-->

            <div class="row-fluid">
                <div class="span9">

                    <div class="space"></div>
                    <div id="calendar"></div>

                </div>
            </div>
            <!--PAGE CONTENT ENDS-->
        </div>
        <!--/.span-->
    </div>
    <!--/.row-fluid-->

{% endblock page_content %}


<!--page specific plugin scripts-->
{#EXTRA-SCRIPTS#}
{% block extrascripts %}


    <script src='{{ request.static_url("stalker_pyramid:static/ace/js/jquery-ui-1.10.3.custom.min.js") }}'></script>
    <script src='{{ request.static_url("stalker_pyramid:static/ace/js/jquery.ui.touch-punch.min.js") }}'></script>
    <script src='{{ request.static_url("stalker_pyramid:static/ace/js/fullcalendar.min.js") }}'></script>
    <script src='{{ request.static_url("stalker_pyramid:static/ace/js/bootbox.min.js") }}'></script>



    <!--inline scripts related to this page-->

    <script type="text/javascript">
    jQuery(function ($) {

        /* initialize the external events
         -----------------------------------------------------------------*/

        $('#external-events div.external-event').each(function () {

// create an Event Object (http://arshaw.com/fullcalendar/docs/event_data/Event_Object/)
// it doesn't need to have a start or end
            var eventObject = {
                title: $.trim($(this).text()) // use the element's text as the event title
            };

// store the Event Object in the DOM element so we can get to it later
            $(this).data('eventObject', eventObject);

// make the event draggable using jQuery UI
            $(this).draggable({
                zIndex: 999,
                revert: true,      // will cause the event to go back to its
                revertDuration: 0  //  original position after the drag
            });

        });


        /* initialize the calendar
         -----------------------------------------------------------------*/
        $.getJSON('/entities/{{ entity.id }}/time_logs/').then(function (data) {


            var events = [];
            var time_logs = [];
            for (var i = 0; i < data.length; i++) {


                var start_date = new Date(parseInt(data[i].start_date));
                var end_date = new Date(parseInt(data[i].end_date));


                var time_log = {
                    tId:data[i].id,
                    title: data[i].task_name+' | '+data[i].parent_name,
                    start: start_date,
                    end: end_date,
                    className: 'label-important',
                    allDay: false
                };

                events.push(time_log);
            }
            $.getJSON('/entities/{{ entity.id }}/vacations/').then(function (vData) {

                var vacations = [];

                for (var j = 0; j < vData.length; j++) {


                    var start_date = new Date(parseInt(vData[j].start_date));
                    var end_date = new Date(parseInt(vData[j].end_date));

                    var vacation = {
                        tId:vData[j].id,
                        title: vData[j].type,
                        start: start_date,
                        end: end_date,
                        className: 'label-yellow',
                        allDay: true
                    }

                    events.push(vacation);
                }


                var calendar = $('#calendar').fullCalendar({
                    buttonText: {
                        prev: '<i class="icon-chevron-left"></i>',
                        next: '<i class="icon-chevron-right"></i>'
                    },

                    header: {
                        left: 'prev,next today',
                        center: 'title',
                        right: 'month,agendaWeek,agendaDay'
                    },
                    events: events,
                    editable: true,
                    droppable: false, // this allows things to be dropped onto the calendar !!!
                    drop: function (date, allDay) { // this function is called when something is dropped

// retrieve the dropped element's stored Event Object
                        var originalEventObject = $(this).data('eventObject');
                        var $extraEventClass = $(this).attr('data-class');


// we need to copy it, so that multiple events don't have a reference to the same object
                        var copiedEventObject = $.extend({}, originalEventObject);

// assign it the date that was reported
                        copiedEventObject.start = date;
                        copiedEventObject.allDay = allDay;
                        if ($extraEventClass) copiedEventObject['className'] = [$extraEventClass];

// render the event on the calendar
// the last `true` argument determines if the event "sticks" (http://arshaw.com/fullcalendar/docs/event_rendering/renderEvent/)
                        $('#calendar').fullCalendar('renderEvent', copiedEventObject, true);

// is the "remove after drop" checkbox checked?
                        if ($('#drop-remove').is(':checked')) {
// if so, remove the element from the "Draggable Events" list
                            $(this).remove();
                        }

                    },
                    selectable: true,
                    selectHelper: true,
                    select: function (start, end, allDay) {


                        $('#time_log_dialog').modal({'remote':'{{ request.route_url("entity_time_log_dialog", id=-1, mode='create') }}'});

{##}
{#                        bootbox.prompt("New Time Log:", function (title) {#}
{#                            if (title !== null) {#}
{#                                calendar.fullCalendar('renderEvent',#}
{#                                        {#}
{#                                            title: title,#}
{#                                            start: start,#}
{#                                            end: end,#}
{#                                            allDay: allDay#}
{#                                        },#}
{#                                        true // make the event "stick"#}
{#                                );#}
{#                            }#}
{#                        });#}
{##}

                        calendar.fullCalendar('unselect');

                    },
                    eventClick: function (calEvent, jsEvent, view) {


                        $('#time_log_dialog').modal({'remote':"/entities/"+calEvent.tId+"/time_log/update/dialog"});


{#                        var form = $("<form class='form-inline'><label>Change event name &nbsp;</label></form>");#}
{#                        form.append("<select id='task_names' name='task_id' class='input-block-level'  data-placeholder='Select Task Name'></select>");#}
{#                        form.append("<button type='submit' class='btn btn-small btn-success'><i cladss='icon-ok'></i> Save</button>");#}
{##}
{##}
{##}
{#                        var div = bootbox.dialog(form,#}
{#                                [#}
{#                                    {#}
{#                                        "label": "<i class='icon-remove'></i> Close",#}
{#                                        "class": "btn-small"#}
{#                                    }#}
{#                                ]#}
{#                                ,#}
{#                                {#}
{##}
{#                                    "onEscape": function () {#}
{#                                        div.modal("hide");#}
{#                                    }#}
{#                                }#}
{#                        );#}
{##}
{#                        form.on('submit', function () {#}
{#                            calEvent.title = form.find("input[type=text]").val();#}
{#                            calendar.fullCalendar('updateEvent', calEvent);#}
{#                            div.modal("hide");#}
{#                            return false;#}
{#                        });#}
                    }


                })


            });
        });

    })
    </script>

{% endblock extrascripts %}
