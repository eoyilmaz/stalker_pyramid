{# Stalker Pyramid a Web Base Production Asset Management System
 Copyright (C) 2009-2014 Erkan Ozgur Yilmaz

 This file is part of Stalker Pyramid.

 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free Software Foundation;
 version 2.1 of the License.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.

 You should have received a copy of the GNU Lesser General Public
 License along with this library; if not, write to the Free Software
 Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
#}


{% extends "base.jinja2" %}

{% block pre_header %}
    <link rel="stylesheet"
          href='{{ request.static_url("stalker_pyramid:static/codebase/dhtmlxgantt.css") }}'/>
{% endblock pre_header %}

{# BREADCRUMBS #}
{% block breadcrumbs %}
    {% include 'breadcrumb/breadcrumbs.jinja2' %}
{% endblock breadcrumbs %}

{#SIDEBAR#}
{% block sidebar %}
    {% include 'sidebar.jinja2' %}
{% endblock sidebar %}

{#PAGE-CONTENT#}
{% block page_content %}

    <div class="widget-box transparent invoice-box">

        <div class="widget-body">
            <div class="widget-main padding-24">
                <div class="row-fluid">
                    <table id="grid-table"></table>
                </div>

            </div>
        </div>
    </div>
{% endblock page_content %}

{% block extrascripts %}
    <script type="text/javascript">
        if("ontouchend" in document) document.write("<script src='{{ request.static_url("stalker_pyramid:static/ace/js/jquery.mobile.custom.min.js") }}'>"+"<"+"/script>");
    </script>
    <script src='{{ request.static_url("stalker_pyramid:static/jqGrid/js/i18n/grid.locale-en.js") }}'></script>
    <script src='{{ request.static_url("stalker_pyramid:static/jqGrid/js/jquery.jqGrid.js") }}'></script>

    <script type="text/javascript">
        $(document).ready(function () {

            $.getJSON('/entities/{{ entity.id }}/users/').then(function (entry_data) {

                console.log('data loaded')

                var grid_data = entry_data;

                $.getJSON('/roles/').then(function(available_roles){
                    // map available types to an array
                    var available_roles_as_list = "";
                    "FE:FedEx;IN:InTime;TN:TNT;AR:ARAMEX"
                    for (var i=0; i < available_roles.length; i++){
                        available_roles_as_list+=available_roles[i].id+":"+available_roles[i].name+";";
                    }


                    jQuery(function($) {
                        var grid_selector = "#grid-table";

                        jQuery(grid_selector).jqGrid({
                            //direction: "rtl",
                            data: grid_data,
                            datatype: "local",
                            colNames:['', 'Id','Name', 'Email', 'Role'],
                            colModel:[
                                {
                                    name:'myac',
                                    index:'',
                                    width:80,
                                    fixed:true,
                                    sortable:false,
                                    resize:false,
                                    formatter:'actions',
                                    formatoptions:{
                                                keys:false,
                                                delbutton:true,
                                                delOptions:{recreateForm: true, beforeShowForm:beforeDeleteCallback}
                                            }
                                },
                                {name:'id', index:'id', width:80, editable: false},
                                {name:'name', index:'name', width:200, editable: false},
                                {name:'email', index:'email', width:220, editable: false},
                                {name:'role', index:'role', width:220, editable: true, edittype:"select", editoptions:{value:available_roles_as_list}}
                            ],
                            viewrecords : true,
                            rowNum:grid_data.length,
                            rowList:[grid_data.length, 10, 10],
                            pager : false,
                            altRows: true,
                            multiselect: false,
                            loadonce: true,
                            height: 700,
                            sortname: 'name',
                            footerrow: true, // set a footer row
                            userDataOnFooter: true, // the calculated sums and/or strings from server are put at footer row.
                            grouping: false,
    {#                        groupingView: {#}
    {#                            groupField: ["name"],#}
    {#                            groupColumnShow: [false],#}
    {#                            groupText: ["<b>{0}</b>"],#}
    {#                            groupOrder: ["desc","desc","desc"],#}
    {#                            groupSummary: [true],#}
    {#                            groupCollapse: false#}
    {#                        },#}
                            gridview: true,
                            editurl: 'entities/{id}/users/{u_id}/role/{r_id}',
                            caption: "",
                            loadComplete : function() {
                                var $self = $(this);
    {#                                $self.jqGrid("footerData", "set", {#}
    {#                                                                   msrp: total_msrp,#}
    {#                                                                   cost: total_cost,#}
    {#                                                                   price: total_price,#}
    {#                                                                   unit:'TOTAL'#}
    {#                                });#}

                                var table = this;
                                setTimeout(function(){
    {#                                    styleCheckbox(table);#}
    {#                                    updateActionIcons(table);#}
    {#                                    updatePagerIcons(table);#}

    {#                                $('#lui_grid-table').hide();#}
                                }, 0);
                            }
                        });
                    });
                });


                function beforeDeleteCallback(e) {
                    var form = $(e[0]);
                    if(form.data('styled')) return false;

                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
        {#                        style_delete_form(form);#}

                    form.data('styled', true);
                }
                function beforeEditCallback(e) {
                    var form = $(e[0]);
                    if(form.data('styled')) return false;

                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class="widget-header" />')
{#                        style_delete_form(form);#}

                    form.data('styled', true);
                }
            });
        });
    </script>
{% endblock extrascripts %}
