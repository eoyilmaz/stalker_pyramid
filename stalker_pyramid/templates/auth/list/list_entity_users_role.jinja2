{% extends "base.jinja2" %}



{# BREADCRUMBS #}
{% block breadcrumbs %}
    {% include 'breadcrumb/breadcrumbs.jinja2' %}
{% endblock breadcrumbs %}

{#SIDEBAR#}
{% block sidebar %}
    {% include 'sidebar.jinja2' %}
{% endblock sidebar %}

{#PAGE-CONTENT#}
{% block page_content %}

    <div class="widget-box">
        <div class="widget-header widget-header-small header-color-user">
            <h5 id="items_header" class="smaller"></h5>
            <div class="widget-toolbar">
                    <a data-target="#dialog_template"
                       data-toggle="modal"
                       data-keyboard=false
                       href='{{ request.route_path('append_user_to_entity_dialog', id=entity.id, _query={'came_from': request.current_route_path()}) }}'
                       class="white">
                        <i class="icon-plus"></i>
                        ADD
                    </a>
                    &nbsp&nbsp

                <a href="#" data-action="collapse">
                    <i class="icon-chevron-down"></i>
                </a>
            </div>
        </div>
        <div class="widget-body">
            <div class="widget-main">
                <div class="row-fluid">
                    <table id="grid-table"></table>
                </div>
            </div>
        </div>
    </div>
{% endblock page_content %}

{% block extrascripts %}
    <script type="text/javascript">
        if("ontouchend" in document) document.write("<script src='{{ request.static_url("stalker_pyramid:static/ace/js/jquery.mobile.custom.min.js") }}'>"+"<"+"/script>");
    </script>
    <script src='{{ request.static_url("stalker_pyramid:static/jqGrid/js/i18n/grid.locale-en.js") }}'></script>
    <script src='{{ request.static_url("stalker_pyramid:static/jqGrid/js/jquery.jqGrid.js") }}'></script>
    <script>
        $.jgrid.defaults.width = 780;
        $.jgrid.defaults.responsive = true;
        $.jgrid.defaults.styleUI = 'Bootstrap';
    </script>
    <script type="text/javascript">
        $(document).ready(function () {
            var lastSelection;
            var grid_selector = "#grid-table";
            var grid = jQuery(grid_selector);

            function editRow(id) {
                if (id && id !== lastSelection) {

                    grid.restoreRow(lastSelection);

                    var editParameters = {
                        keys: true,
                        successfunc: editSuccessful,
                        errorfunc: editFailed,
                        restoreAfterError : false
                    };

                    grid.jqGrid('editRow', id, editParameters);
                    lastSelection = id;
                }
            }

            function editSuccessful(data, stat) {
                grid.restoreRow(lastSelection);
                return [true,"",""];
            }

            function editFailed(rowID, response) {
                $.jgrid.info_dialog($.jgrid.errors.errcap,'<div class="ui-state-error">RowID:'+rowID+ ' :  '+ response.responseJSON.error +'</div>', $.jgrid.edit.bClose,{buttonalign:'right'})
                alert(response.responseJSON.error);
            }

            $.getJSON('/entities/{{ entity.id }}/users/').then(function (entry_data) {

                console.log('data loaded');

                var grid_data = entry_data;

                $.getJSON('/roles/').then(function(available_roles){
                    // map available types to an array

                    var available_rolelist = [];
                    for (var k=0; k < available_roles.length; k++){
                        console.log(available_roles[k].name)
                        available_rolelist.push(available_roles[k].name);
                    }

                    console.log(grid_data)


                    jQuery(function($) {
                        var grid_selector = "#grid-table";

                        jQuery(grid_selector).jqGrid({
                            //direction: "rtl",
                            data: grid_data,
                            datatype: "local",
                            colNames:[ 'Id', 'Name', 'Email', 'Role'],
                            colModel:[
                                {name:'id', index:'id', width:80, editable: false},
                                {name:'name', index:'name', width:200, editable: false},
                                {name:'email', index:'email', width:220, editable: false},
                                    {
                                    name:'role',
                                    index:'role',
                                    width:220,
                                    editable: true,
                                    edittype:"text",
                                    editoptions: {
                                        dataInit: function (element) {
                                            window.setTimeout(function () {
                                                $(element).autocomplete({
                                                    id: 'AutoComplete',
                                                source: available_rolelist,
                                                autoFocus: true
                                                });
                                            }, 100);
                                        }
                                    }
                                }
                            ],
                            viewrecords : true,
                            rowNum:grid_data.length,
                            rowList:[grid_data.length, 10, 10],
                            pager : false,
                            altRows: true,
                            multiselect: false,
                            loadonce: true,
                            height: 700,
                            width: 'auto',
                            sortname: 'name',
                            footerrow: false, // set a footer row
                            userDataOnFooter: true, // the calculated sums and/or strings from server are put at footer row.
                            grouping: false,
                            editurl: '/entities/{{ entity.id }}/users/update_role/',
                            caption: "",
                            onSelectRow: editRow,
                            loadComplete : function() {
                                var $self = $(this);

                                var table = this;
                                setTimeout(function(){
    {#                                    styleCheckbox(table);#}
    {#                                    updateActionIcons(table);#}
    {#                                    updatePagerIcons(table);#}

                                    $('#lui_grid-table').hide();
                                }, 0);
                            }
                        });
                    });
                });
            });
        });
    </script>
{% endblock extrascripts %}
