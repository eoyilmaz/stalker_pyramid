Stalker Changes
===============

v0.1.1.a2:
 * updated the Tutorial
 * added *code* attribute to SimpleEntity
 * updated the User class for the new *code* attribute, and also updated the
   tests to add tests for *code* attribute (simply copied the test code from
   SimpleEntityTester, bad code repetition, need to change it later, by may be
   inheriting the test case from the other one)
 * updated the database tables and mappers for the new *code* attribute
 * removed the clashing *code* attribute from PipelineStep class and the tables
   and mappers
 * added *Note* class
 * added *notes* table and a mapper for *Note* class
 * added *note* attribute to Entity class
 * fixed EntityTester in tests
 * added __repr__ to entity classes

v0.1.1.a1:
 * fixed a couple of documentation errors like:
   * inheritance diagram had references to modules
   * a couple of docstring documentation errors in Structure, User and
     TypeTemplate classes
 * updated the installation instructions
 * added Tutorial page to the documentation
 * all the classes, functions from sqlalchemy are now imported to the
   sqlalchemy namespace, this will let the Sphinx to correctly include classes,
   functions from Stalker only
 * removed the db.meta module, now all the functionalities supplied by db.meta
   are supplied by db (db.meta.session --> db.session etc.)
 * added `query` variable to db module so instead of db.session.query now
   db.query can be used
 * updated login_required decorator function, it now accepts a `view` function
 * added permission_required decorator function
 * name attribute of stalker.core.models.entity.SimpleEntity is not any more
   forced to start with an upper case letter
 * login_name is now a synonym for name in stalker.core.models.user.User
   class and it is not stored in the database any more, just the name attribute
   is stored in the database from now on
 * to make things simpler all the properties with name "type_" is now using the
   name "type" even though it is a Python keyword, Python is clever enough to
   understand what is meant

v0.1.1.a0:
 * changed the versioning scheme a little bit to follow the setuptools guide

v0.1.0.20110111.1:
 * persistence tests for Link is now fixed
 * now every table correctly has a primary_key

v0.1.0.20110110.1:
 * added installation instructions to the documentation
 * updated README file for PyPI
 * added the package to PyPI
 * fixed StatusedEntityTester test suit, now it properly creates mock
   StatusList object for the __eq__ and __ne__ tests
 * updated tables and mappers for stalker.core.models.typeEntity.TypeTemplate
 * updated mappers for stalker.core.models.typeEntity.AssetType
 * TypeEntity class is moved to entity.py, right beside the other entity
   classes
 * typeEntity.py renamed to types.py
 * created tables and mappers for:
   * structure.Structure
   * entity.TypeEntity
   * types.TypeTemplate
   * types.AssetType
   * types.LinkType
   * types.ProjectType
 * updated simpleEntities table, now the name by itself is not a unique
   constraint, but added an explicit UniqueConstraint on name and entity_type
   coloumns to allow entities with different types to have the same name, also
   added test for that
 * fixed all the errors in test_db.py, there are only failures left
 * added tests for stalker.core.models.link.Link, all the test are green for
   Link except the persistence tests

v0.1.0.20110108.1:
 * Template class is renamed to TypeTemplate and moved inside
   stalker.core.models.typeEntity to prevent the name clashing with Jinja2
   Template class
 * added __eq__ to SimpleEntity and still trying to add it to the derived
   classes
 * organised the project structure to conform setup tools for PyPI

v0.1.0.20110107.2:
 * updating the db tests
 * stalker.core.models.user.User class is now allowed to have its department
   to be set None

v0.1.0.20110107.1:
 * organised the existent tests

v0.1.0.20110106.2:
 * added nice_name property to the stalker.core.models.entity.SimpleEntity
   class
 * added tests for stalker.core.models.structure.Structure class
 * implemented the stalker.core.models.structure.Structure class
 * added last_login attribute to the stalker.core.models.user.User class and
   added all the tests

v0.1.0.20110106.1:
 * re-introduced the link.Link, which has a general meaning than
   reference.Reference (I bet it will be reference again tomorrow)
 * stalker.models moved to stalker.core.models
 * renamed tests/z_db to tests/db, because the sqlalchemy/mocker problem is
   solved by moving the models to core/models

v0.1.0.20110105:
 * improved the stalker.models.template.Template class documentation, and added
   an example showing the usage of it.

v0.1.0.20110104:
 * removed the link.Link and introduced reference.Reference and
   typeEntity.ReferenceType classes, which I think are more organised then the
   previous design.
 * reorganised the AssetType and ReferenceType objects by introducing the new
   TypeEntity class and deriving the AssetType and ReferenceType from this
   class
 * added ProjectType class to hold different project types (like Commercial,
   Film, Still etc., it is different than having a Commercial Structure object)
 * removed AssetTemplate and ReferenceTemplate concepts and generalised the
   Template class by adding a `type` parameter to it, which accepts TypeEntity
   and classes derived from TypeEntity.

v0.1.0.20110103.2:
 * added login_required decorator to the stalker.db.auth module, but the
   implementation is not done yet

v0.1.0.20110103:
 * user.User._password is now scrambled, but the password property uses the raw
   password
 * added stalker.db.auth for authentication, removed the db.login function.

v0.1.0.20110102:
 * added the error.LoginError exception for login errors
 * started to add tests for db.login function

v0.1.0.20101231:
 * moved the login function to the db.__init__ to let it used just after
   setting up the database without importing any new module
 * updated the example in the docstring of the template.AssetTemplate

v0.1.0.20101229.3:
 * generalised the Template class. Now every Entity can be assigned to a
   template, it is not limited with Assets or References.

v0.1.0.20101229.2:
 * entity.SimpleEntity.name now can have white spaces, but not at the beginning
   or end, just in the middle
 * done mapping template.Template class

v0.1.0.20101229.1:
 * trying to create a session system with Beaker, to hold user login
   information
 * done mapping assetType.AssetType class
 * done mapping pipelineStep class

v0.1.0.20101228.1:
 * added repositories table and mapper for the repository.Repository class
 * added imageFormats table and mapper for the imageFormat.ImageFormat class
 * renamed extensions module to ext
 * added roadmap to docs

v0.1.0.20101228:
 * created the block of database tests
 * added stalker.db.meta.__mappers__ list to hold the mappers and use it to
   check if anything is already mapped
 * added tests for db initialisation
 * removed the whole stalker.models.unit module from SOM, only TimeUnit was
   usable in some cases, but in fact it is also not important, the only object
   using TimeUnit was the Project class and it can go well without it. Don't
   need to make things more complex than it needs to be.
 * increased the version number to 0.1.0 to follow the stalker roadmap

v0.0.1.20101227:
 * the test_db is converted to a proper unittest which is testing all the
   models one by one
 * test/db renamed to test/z_db to let nose run it latest to solve the problem
   about mocker and sqlalchemy fighting each other.
 * Mapping syntax is changed a little bit, now to do the mapping, the
   <mapper>.setup() function needs to be called to be able to do the mapping
   any time
 * started adding tests for every class in SOM

v0.0.1.20101226:
 * in user.User the last_name attribute could be an empty string
 * removed SimpleEntity, TaggedEntity and introduced StatusedEntity to make the
   inheritance clear and let users to find somebody to blame by moving all the
   audit information to the the SimpleEntity class in which everything is
   inherited from. Now even a Tag has audit information.

v0.0.1.20101225:
 * entity.AuditEntity.created_by can now be None (for now)
 * user.User.last_name can now be None, to let users like admin have no last
   name
 * creating tables for catch the general inheritance of the entity classes
 * entitiy.SimpleEntity.name's first letter is not capitalised any more
 * department.Department class now accepts Null for lead attribute (for now
   again)

v0.0.1.20101224:
 * started playing with the SQLAlchemy side of the system
 
v0.0.1.20101223:
 * updating the documentation
 * AuditEntity now accepts None for updated_by attribute when it an object is
   created, but sets it to the same value with created_by attribute

v0.0.1.20101219:
 * started to implement:
   * a database entry point
   * a customisable object model and database tables
   * an automatic mapper to map the objects and tables together according to
     user settings
   things can change a lot in this phase, I'm just trying to figure out the
   best possible way to do it.
 * added a new entity type called TaggedEntity which derives from SimpleEntity,
   and moved all the tag related attributes of SimpleEntity to TaggedEntity,
   and all the child classes deriving from SimpleEntity now derives from
   TaggedEntity, also moved the tests related with tag in SimpleEntity to
   TaggedEntity.
 * tag.Tag now derives from the SimpleEntity and doesn't add any other
   attribute to its super.
 * updated tests for tag.Tag
 * updated docs for TaggedEntity
 * finished implementing the Department object and its tests
 * removed the notes attribute from the Entity class

v0.0.1.20101209:
 * added the inheritance diagram as an rst page to reference it anywhere needed
 * added the empty classes for:
   * Asset
   * AssetBase
   * Booking
   * Shot
   * Structure
   * Template
   * Version
 * added the Department class
 * added inheritance diagrams to the autosummary pages of the classes